

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Tue Sep 04 22:35:46 2018

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	16LF1503
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	_system_settings_text,global,class=CODE,delta=2
     5                           	psect	_TxStatus_text,global,class=CODE,delta=2
     6                           	psect	_Type_text,global,class=CODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	swtext1,local,class=CONST,delta=2
    15                           	psect	swtext2,local,class=CONST,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 1.45
    29                           ; Generated 16/11/2017 GMT
    30                           ; 
    31                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16LF1503 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000E                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  008C                     	;# 
    89  008E                     	;# 
    90  0091                     	;# 
    91  0092                     	;# 
    92  0093                     	;# 
    93  0095                     	;# 
    94  0096                     	;# 
    95  0097                     	;# 
    96  0099                     	;# 
    97  009A                     	;# 
    98  009B                     	;# 
    99  009B                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009E                     	;# 
   103  009F                     	;# 
   104  010C                     	;# 
   105  010E                     	;# 
   106  0111                     	;# 
   107  0112                     	;# 
   108  0113                     	;# 
   109  0114                     	;# 
   110  0115                     	;# 
   111  0116                     	;# 
   112  0117                     	;# 
   113  0118                     	;# 
   114  0119                     	;# 
   115  011D                     	;# 
   116  018C                     	;# 
   117  018E                     	;# 
   118  0191                     	;# 
   119  0191                     	;# 
   120  0192                     	;# 
   121  0193                     	;# 
   122  0193                     	;# 
   123  0194                     	;# 
   124  0195                     	;# 
   125  0196                     	;# 
   126  020C                     	;# 
   127  0211                     	;# 
   128  0211                     	;# 
   129  0212                     	;# 
   130  0212                     	;# 
   131  0213                     	;# 
   132  0213                     	;# 
   133  0214                     	;# 
   134  0214                     	;# 
   135  0215                     	;# 
   136  0215                     	;# 
   137  0215                     	;# 
   138  0216                     	;# 
   139  0216                     	;# 
   140  0217                     	;# 
   141  0217                     	;# 
   142  0391                     	;# 
   143  0392                     	;# 
   144  0393                     	;# 
   145  0498                     	;# 
   146  0498                     	;# 
   147  0499                     	;# 
   148  049A                     	;# 
   149  049B                     	;# 
   150  049B                     	;# 
   151  049C                     	;# 
   152  049D                     	;# 
   153  049E                     	;# 
   154  049F                     	;# 
   155  0611                     	;# 
   156  0612                     	;# 
   157  0613                     	;# 
   158  0613                     	;# 
   159  0614                     	;# 
   160  0615                     	;# 
   161  0616                     	;# 
   162  0616                     	;# 
   163  0617                     	;# 
   164  0618                     	;# 
   165  0619                     	;# 
   166  0619                     	;# 
   167  061A                     	;# 
   168  061B                     	;# 
   169  061C                     	;# 
   170  061C                     	;# 
   171  0691                     	;# 
   172  0692                     	;# 
   173  0693                     	;# 
   174  0694                     	;# 
   175  0695                     	;# 
   176  0F0F                     	;# 
   177  0F10                     	;# 
   178  0F11                     	;# 
   179  0F12                     	;# 
   180  0F13                     	;# 
   181  0F14                     	;# 
   182  0F15                     	;# 
   183  0F16                     	;# 
   184  0F17                     	;# 
   185  0F18                     	;# 
   186  0F19                     	;# 
   187  0F1A                     	;# 
   188  0F1B                     	;# 
   189  0F1C                     	;# 
   190  0F1D                     	;# 
   191  0F1E                     	;# 
   192  0F1F                     	;# 
   193  0FE3                     	;# 
   194  0FE4                     	;# 
   195  0FE5                     	;# 
   196  0FE6                     	;# 
   197  0FE7                     	;# 
   198  0FE8                     	;# 
   199  0FE9                     	;# 
   200  0FEA                     	;# 
   201  0FEB                     	;# 
   202  0FED                     	;# 
   203  0FEE                     	;# 
   204  0FEF                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0008                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000E                     	;# 
   219  0011                     	;# 
   220  0012                     	;# 
   221  0013                     	;# 
   222  0015                     	;# 
   223  0016                     	;# 
   224  0016                     	;# 
   225  0017                     	;# 
   226  0018                     	;# 
   227  0019                     	;# 
   228  001A                     	;# 
   229  001B                     	;# 
   230  001C                     	;# 
   231  008C                     	;# 
   232  008E                     	;# 
   233  0091                     	;# 
   234  0092                     	;# 
   235  0093                     	;# 
   236  0095                     	;# 
   237  0096                     	;# 
   238  0097                     	;# 
   239  0099                     	;# 
   240  009A                     	;# 
   241  009B                     	;# 
   242  009B                     	;# 
   243  009C                     	;# 
   244  009D                     	;# 
   245  009E                     	;# 
   246  009F                     	;# 
   247  010C                     	;# 
   248  010E                     	;# 
   249  0111                     	;# 
   250  0112                     	;# 
   251  0113                     	;# 
   252  0114                     	;# 
   253  0115                     	;# 
   254  0116                     	;# 
   255  0117                     	;# 
   256  0118                     	;# 
   257  0119                     	;# 
   258  011D                     	;# 
   259  018C                     	;# 
   260  018E                     	;# 
   261  0191                     	;# 
   262  0191                     	;# 
   263  0192                     	;# 
   264  0193                     	;# 
   265  0193                     	;# 
   266  0194                     	;# 
   267  0195                     	;# 
   268  0196                     	;# 
   269  020C                     	;# 
   270  0211                     	;# 
   271  0211                     	;# 
   272  0212                     	;# 
   273  0212                     	;# 
   274  0213                     	;# 
   275  0213                     	;# 
   276  0214                     	;# 
   277  0214                     	;# 
   278  0215                     	;# 
   279  0215                     	;# 
   280  0215                     	;# 
   281  0216                     	;# 
   282  0216                     	;# 
   283  0217                     	;# 
   284  0217                     	;# 
   285  0391                     	;# 
   286  0392                     	;# 
   287  0393                     	;# 
   288  0498                     	;# 
   289  0498                     	;# 
   290  0499                     	;# 
   291  049A                     	;# 
   292  049B                     	;# 
   293  049B                     	;# 
   294  049C                     	;# 
   295  049D                     	;# 
   296  049E                     	;# 
   297  049F                     	;# 
   298  0611                     	;# 
   299  0612                     	;# 
   300  0613                     	;# 
   301  0613                     	;# 
   302  0614                     	;# 
   303  0615                     	;# 
   304  0616                     	;# 
   305  0616                     	;# 
   306  0617                     	;# 
   307  0618                     	;# 
   308  0619                     	;# 
   309  0619                     	;# 
   310  061A                     	;# 
   311  061B                     	;# 
   312  061C                     	;# 
   313  061C                     	;# 
   314  0691                     	;# 
   315  0692                     	;# 
   316  0693                     	;# 
   317  0694                     	;# 
   318  0695                     	;# 
   319  0F0F                     	;# 
   320  0F10                     	;# 
   321  0F11                     	;# 
   322  0F12                     	;# 
   323  0F13                     	;# 
   324  0F14                     	;# 
   325  0F15                     	;# 
   326  0F16                     	;# 
   327  0F17                     	;# 
   328  0F18                     	;# 
   329  0F19                     	;# 
   330  0F1A                     	;# 
   331  0F1B                     	;# 
   332  0F1C                     	;# 
   333  0F1D                     	;# 
   334  0F1E                     	;# 
   335  0F1F                     	;# 
   336  0FE3                     	;# 
   337  0FE4                     	;# 
   338  0FE5                     	;# 
   339  0FE6                     	;# 
   340  0FE7                     	;# 
   341  0FE8                     	;# 
   342  0FE9                     	;# 
   343  0FEA                     	;# 
   344  0FEB                     	;# 
   345  0FED                     	;# 
   346  0FEE                     	;# 
   347  0FEF                     	;# 
   348  0000                     	;# 
   349  0001                     	;# 
   350  0002                     	;# 
   351  0003                     	;# 
   352  0004                     	;# 
   353  0005                     	;# 
   354  0006                     	;# 
   355  0007                     	;# 
   356  0008                     	;# 
   357  0009                     	;# 
   358  000A                     	;# 
   359  000B                     	;# 
   360  000C                     	;# 
   361  000E                     	;# 
   362  0011                     	;# 
   363  0012                     	;# 
   364  0013                     	;# 
   365  0015                     	;# 
   366  0016                     	;# 
   367  0016                     	;# 
   368  0017                     	;# 
   369  0018                     	;# 
   370  0019                     	;# 
   371  001A                     	;# 
   372  001B                     	;# 
   373  001C                     	;# 
   374  008C                     	;# 
   375  008E                     	;# 
   376  0091                     	;# 
   377  0092                     	;# 
   378  0093                     	;# 
   379  0095                     	;# 
   380  0096                     	;# 
   381  0097                     	;# 
   382  0099                     	;# 
   383  009A                     	;# 
   384  009B                     	;# 
   385  009B                     	;# 
   386  009C                     	;# 
   387  009D                     	;# 
   388  009E                     	;# 
   389  009F                     	;# 
   390  010C                     	;# 
   391  010E                     	;# 
   392  0111                     	;# 
   393  0112                     	;# 
   394  0113                     	;# 
   395  0114                     	;# 
   396  0115                     	;# 
   397  0116                     	;# 
   398  0117                     	;# 
   399  0118                     	;# 
   400  0119                     	;# 
   401  011D                     	;# 
   402  018C                     	;# 
   403  018E                     	;# 
   404  0191                     	;# 
   405  0191                     	;# 
   406  0192                     	;# 
   407  0193                     	;# 
   408  0193                     	;# 
   409  0194                     	;# 
   410  0195                     	;# 
   411  0196                     	;# 
   412  020C                     	;# 
   413  0211                     	;# 
   414  0211                     	;# 
   415  0212                     	;# 
   416  0212                     	;# 
   417  0213                     	;# 
   418  0213                     	;# 
   419  0214                     	;# 
   420  0214                     	;# 
   421  0215                     	;# 
   422  0215                     	;# 
   423  0215                     	;# 
   424  0216                     	;# 
   425  0216                     	;# 
   426  0217                     	;# 
   427  0217                     	;# 
   428  0391                     	;# 
   429  0392                     	;# 
   430  0393                     	;# 
   431  0498                     	;# 
   432  0498                     	;# 
   433  0499                     	;# 
   434  049A                     	;# 
   435  049B                     	;# 
   436  049B                     	;# 
   437  049C                     	;# 
   438  049D                     	;# 
   439  049E                     	;# 
   440  049F                     	;# 
   441  0611                     	;# 
   442  0612                     	;# 
   443  0613                     	;# 
   444  0613                     	;# 
   445  0614                     	;# 
   446  0615                     	;# 
   447  0616                     	;# 
   448  0616                     	;# 
   449  0617                     	;# 
   450  0618                     	;# 
   451  0619                     	;# 
   452  0619                     	;# 
   453  061A                     	;# 
   454  061B                     	;# 
   455  061C                     	;# 
   456  061C                     	;# 
   457  0691                     	;# 
   458  0692                     	;# 
   459  0693                     	;# 
   460  0694                     	;# 
   461  0695                     	;# 
   462  0F0F                     	;# 
   463  0F10                     	;# 
   464  0F11                     	;# 
   465  0F12                     	;# 
   466  0F13                     	;# 
   467  0F14                     	;# 
   468  0F15                     	;# 
   469  0F16                     	;# 
   470  0F17                     	;# 
   471  0F18                     	;# 
   472  0F19                     	;# 
   473  0F1A                     	;# 
   474  0F1B                     	;# 
   475  0F1C                     	;# 
   476  0F1D                     	;# 
   477  0F1E                     	;# 
   478  0F1F                     	;# 
   479  0FE3                     	;# 
   480  0FE4                     	;# 
   481  0FE5                     	;# 
   482  0FE6                     	;# 
   483  0FE7                     	;# 
   484  0FE8                     	;# 
   485  0FE9                     	;# 
   486  0FEA                     	;# 
   487  0FEB                     	;# 
   488  0FED                     	;# 
   489  0FEE                     	;# 
   490  0FEF                     	;# 
   491  07EE                     _system_settings_absaddr	set	2030
   492  07D0                     _TxStatus_absaddr	set	2000
   493  07C0                     _Type_absaddr	set	1984
   494  07EE                     _system_settings_absaddr	set	2030
   495                           
   496                           	psect	_system_settings_text
   497  07EE                     __p_system_settings_text:	
   498  07EE                     _system_settings:	
   499  07EE  3443               	retlw	67
   500  07EF  3404               	retlw	4
   501  07F0  345F               	retlw	95
   502  07F1  3441               	retlw	65
   503  07F2  341F               	retlw	31
   504  07F3  34FB               	retlw	251
   505  07F4  345F               	retlw	95
   506  07F5  3441               	retlw	65
   507  07F6  3478               	retlw	120
   508  07F7  3456               	retlw	86
   509  07F8  3434               	retlw	52
   510  07F9  3412               	retlw	18
   511  07FA  345F               	retlw	95
   512  07FB  3442               	retlw	66
   513  07FC  3410               	retlw	16
   514  07FD  3400               	retlw	0
   515  07FE  345F               	retlw	95
   516  07FF                     __end_of_system_settings:	
   517  07D0                     _TxStatus_absaddr	set	2000
   518                           
   519                           	psect	_TxStatus_text
   520  07D0                     __p_TxStatus_text:	
   521  07D0                     _TxStatus:	
   522  07D0  34FF               	retlw	255
   523  07D1  34FF               	retlw	255
   524  07D2  34FF               	retlw	255
   525  07D3  34FF               	retlw	255
   526  07D4  34FF               	retlw	255
   527  07D5  34FF               	retlw	255
   528  07D6  34FF               	retlw	255
   529  07D7  34FF               	retlw	255
   530  07D8  34FF               	retlw	255
   531  07D9  34FF               	retlw	255
   532  07DA  34FF               	retlw	255
   533  07DB  34FF               	retlw	255
   534  07DC  34FF               	retlw	255
   535  07DD  34FF               	retlw	255
   536  07DE  34FF               	retlw	255
   537  07DF  34FF               	retlw	255
   538  07E0                     __end_of_TxStatus:	
   539  07C0                     _Type_absaddr	set	1984
   540                           
   541                           	psect	_Type_text
   542  07C0                     __p_Type_text:	
   543  07C0                     _Type:	
   544  07C0  34FF               	retlw	255
   545  07C1  34FF               	retlw	255
   546  07C2  34FF               	retlw	255
   547  07C3  34FF               	retlw	255
   548  07C4  34FF               	retlw	255
   549  07C5  34FF               	retlw	255
   550  07C6  34FF               	retlw	255
   551  07C7  34FF               	retlw	255
   552  07C8  34FF               	retlw	255
   553  07C9  34FF               	retlw	255
   554  07CA  34FF               	retlw	255
   555  07CB  34FF               	retlw	255
   556  07CC  34FF               	retlw	255
   557  07CD  34FF               	retlw	255
   558  07CE  34FF               	retlw	255
   559  07CF  34FF               	retlw	255
   560  07D0                     __end_of_Type:	
   561  0015                     _TMR0	set	21
   562  001A                     _TMR2	set	26
   563  000C                     _PORTA	set	12
   564  000B                     _INTCONbits	set	11
   565  005D                     _TMR0IE	set	93
   566  005A                     _TMR0IF	set	90
   567  0095                     _OPTION_REG	set	149
   568  009D                     _ADCON0bits	set	157
   569  009E                     _ADCON1bits	set	158
   570  008E                     _TRISC	set	142
   571  008C                     _TRISA	set	140
   572  0095                     _OPTION_REGbits	set	149
   573  009A                     _OSCSTATbits	set	154
   574  0097                     _WDTCONbits	set	151
   575  0099                     _OSCCONbits	set	153
   576  010C                     _LATA	set	268
   577  010C                     _LATAbits	set	268
   578  010E                     _LATCbits	set	270
   579  0117                     _FVRCON	set	279
   580  010E                     _LATC	set	270
   581  0196                     _PMCON2	set	406
   582  0193                     _PMDATL	set	403
   583  0194                     _PMDATH	set	404
   584  0191                     _PMADRL	set	401
   585  0192                     _PMADRH	set	402
   586  0195                     _PMCON1bits	set	405
   587  018E                     _ANSELC	set	398
   588  018C                     _ANSELA	set	396
   589  020C                     _WPUA	set	524
   590                           
   591                           ; #config settings
   592  0007                     
   593                           	psect	cinit
   594  07E0                     start_initialization:	
   595  07E0                     __initialization:	
   596                           
   597                           ; Clear objects allocated to COMMON
   598  07E0  01FB               	clrf	__pbssCOMMON& (0+127)
   599                           
   600                           ; Clear objects allocated to BANK0
   601  07E1  3020               	movlw	low __pbssBANK0
   602  07E2  0084               	movwf	4
   603  07E3  3000               	movlw	high __pbssBANK0
   604  07E4  0085               	movwf	5
   605  07E5  3023               	movlw	35
   606  07E6  208C               	fcall	clear_ram0
   607  07E7                     end_of_initialization:	
   608                           ;End of C runtime variable initialization code
   609                           
   610  07E7                     __end_of__initialization:	
   611  07E7  0020               	movlb	0
   612  07E8  2BA6               	ljmp	_main	;jump to C main() function
   613                           
   614                           	psect	bssCOMMON
   615  007B                     __pbssCOMMON:	
   616  007B                     _noo_address_type:	
   617  007B                     	ds	1
   618                           
   619                           	psect	bssBANK0
   620  0020                     __pbssBANK0:	
   621  0020                     _Keys:	
   622  0020                     	ds	20
   623  0034                     _startaddress:	
   624  0034                     	ds	4
   625  0038                     _SkipHandling:	
   626  0038                     	ds	1
   627  0039                     _DevMode:	
   628  0039                     	ds	1
   629  003A                     _DevType:	
   630  003A                     	ds	1
   631  003B                     _tick3_100ms:	
   632  003B                     	ds	1
   633  003C                     _LedPulseTick_100ms:	
   634  003C                     	ds	1
   635  003D                     _BattLowSent:	
   636  003D                     	ds	1
   637  003E                     _tx_status:	
   638  003E                     	ds	1
   639  003F                     _noo_send_data:	
   640  003F                     	ds	4
   641                           
   642                           	psect	clrtext
   643  008C                     clear_ram0:	
   644                           ;	Called with FSR0 containing the base address, and
   645                           ;	WREG with the size to clear
   646                           
   647  008C  0064               	clrwdt	;clear the watchdog before getting into this loop
   648  008D                     clrloop0:	
   649  008D  0180               	clrf	0	;clear RAM location pointed to by FSR
   650  008E  3101               	addfsr 0,1
   651  008F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   652  0090  288D               	goto	clrloop0	;have we reached the end yet?
   653  0091  3400               	retlw	0	;all done for this memory range, return
   654                           
   655                           	psect	cstackCOMMON
   656  0070                     __pcstackCOMMON:	
   657  0070                     ?_RF_Init:	
   658  0070                     ??_RF_Init:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ?_noolite_send:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ?_FlashEraseRow:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ?_FlashWrite:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ?_Init_CLK:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ??_Init_CLK:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ?_Init_IO:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ??_Init_IO:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?_Init_ADC:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ??_Init_ADC:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ?_Init_TypeFromFlash:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ??_Init_TypeFromFlash:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ?_Init_TxStatusFromFlash:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ??_Init_TxStatusFromFlash:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     ?_main:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     ?_FlashUnlock:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0070                     ??_FlashUnlock:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0070                     noolite_send@noo_send_command:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0070                     FlashEraseRow@rowAddr:	
   713                           ; 1 bytes @ 0x0
   714                           
   715  0070                     FlashWrite@addr:	
   716                           ; 2 bytes @ 0x0
   717                           
   718                           
   719                           ; 2 bytes @ 0x0
   720  0070                     	ds	1
   721  0071                     noolite_send@noo_send_format:	
   722                           
   723                           ; 1 bytes @ 0x1
   724  0071                     	ds	1
   725  0072                     ??_FlashEraseRow:	
   726  0072                     noolite_send@data:	
   727                           ; 1 bytes @ 0x2
   728                           
   729  0072                     FlashWrite@flash_data:	
   730                           ; 1 bytes @ 0x2
   731                           
   732                           
   733                           ; 2 bytes @ 0x2
   734  0072                     	ds	1
   735  0073                     ??_noolite_send:	
   736                           
   737                           ; 1 bytes @ 0x3
   738  0073                     	ds	1
   739  0074                     ??_FlashWrite:	
   740  0074                     Init_TxStatusFromFlash@cellNum:	
   741                           ; 1 bytes @ 0x4
   742                           
   743                           
   744                           ; 1 bytes @ 0x4
   745  0074                     	ds	7
   746                           
   747                           	psect	cstackBANK0
   748  0043                     __pcstackBANK0:	
   749  0043                     noolite_send@noo_send_buffer:	
   750                           
   751                           ; 12 bytes @ 0x0
   752  0043                     	ds	12
   753  004F                     noolite_send@startpos:	
   754                           
   755                           ; 1 bytes @ 0xC
   756  004F                     	ds	1
   757  0050                     noolite_send@countbit:	
   758                           
   759                           ; 1 bytes @ 0xD
   760  0050                     	ds	1
   761  0051                     noolite_send@chn:	
   762                           
   763                           ; 1 bytes @ 0xE
   764  0051                     	ds	1
   765  0052                     noolite_send@countsend:	
   766                           
   767                           ; 1 bytes @ 0xF
   768  0052                     	ds	1
   769  0053                     noolite_send@temp_send:	
   770                           
   771                           ; 1 bytes @ 0x10
   772  0053                     	ds	1
   773  0054                     noolite_send@endpos:	
   774                           
   775                           ; 1 bytes @ 0x11
   776  0054                     	ds	1
   777  0055                     ??_main:	
   778                           
   779                           ; 1 bytes @ 0x12
   780  0055                     	ds	5
   781  005A                     main@cellNum:	
   782                           
   783                           ; 1 bytes @ 0x17
   784  005A                     	ds	1
   785  005B                     main@chn:	
   786                           
   787                           ; 1 bytes @ 0x18
   788  005B                     	ds	1
   789  005C                     main@chn_421:	
   790                           
   791                           ; 1 bytes @ 0x19
   792  005C                     	ds	1
   793  005D                     main@chn_422:	
   794                           
   795                           ; 1 bytes @ 0x1A
   796  005D                     	ds	1
   797  005E                     main@chn_423:	
   798                           
   799                           ; 1 bytes @ 0x1B
   800  005E                     	ds	1
   801                           
   802                           	psect	maintext
   803  03A6                     __pmaintext:	
   804 ;;
   805 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   806 ;;
   807 ;; *************** function _main *****************
   808 ;; Defined at:
   809 ;;		line 269 in file "main.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;		None
   812 ;; Auto vars:     Size  Location     Type
   813 ;;  chn             1   27[BANK0 ] unsigned char 
   814 ;;  chn             1   26[BANK0 ] unsigned char 
   815 ;;  chn             1   25[BANK0 ] unsigned char 
   816 ;;  chn             1   24[BANK0 ] unsigned char 
   817 ;;  cellNum         1   23[BANK0 ] unsigned char 
   818 ;;  chn             1    0        unsigned char 
   819 ;; Return value:  Size  Location     Type
   820 ;;                  1    wreg      void 
   821 ;; Registers used:
   822 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   823 ;; Tracked objects:
   824 ;;		On entry : B1F/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMMON   BANK0   BANK1
   828 ;;      Params:         0       0       0
   829 ;;      Locals:         0       6       0
   830 ;;      Temps:          0       4       0
   831 ;;      Totals:         0      10       0
   832 ;;Total ram usage:       10 bytes
   833 ;; Hardware stack levels required when called:    2
   834 ;; This function calls:
   835 ;;		_FlashEraseRow
   836 ;;		_FlashWrite
   837 ;;		_Init_ADC
   838 ;;		_Init_CLK
   839 ;;		_Init_IO
   840 ;;		_Init_TxStatusFromFlash
   841 ;;		_Init_TypeFromFlash
   842 ;;		_RF_Init
   843 ;;		_noolite_send
   844 ;; This function is called by:
   845 ;;		Startup code after reset
   846 ;; This function uses a non-reentrant model
   847 ;;
   848                           
   849                           
   850                           ;psect for function _main
   851  03A6                     _main:	
   852                           
   853                           ;main.c: 270: Init_IO();
   854                           
   855                           ;incstack = 0
   856                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   857  03A6  20B8               	fcall	_Init_IO
   858                           
   859                           ;main.c: 271: Init_CLK();
   860  03A7  20AB               	fcall	_Init_CLK
   861                           
   862                           ;main.c: 273: Init_ADC();
   863  03A8  2092               	fcall	_Init_ADC
   864                           
   865                           ;main.c: 274: RF_Init();
   866  03A9  2178               	fcall	_RF_Init
   867                           
   868                           ;main.c: 276: LATCbits.LATC5 = 1;
   869  03AA  0022               	movlb	2	; select bank2
   870  03AB  168E               	bsf	14,5	;volatile
   871                           
   872                           ;main.c: 277: DevType = Init_TypeFromFlash();
   873  03AC  20DB               	fcall	_Init_TypeFromFlash
   874  03AD  0020               	movlb	0	; select bank0
   875  03AE  00BA               	movwf	_DevType
   876                           
   877                           ;main.c: 278: tx_status = Init_TxStatusFromFlash();
   878  03AF  20EF               	fcall	_Init_TxStatusFromFlash
   879  03B0  00BE               	movwf	_tx_status
   880                           
   881                           ;main.c: 281: INTCONbits.PEIE = 1;
   882  03B1  170B               	bsf	11,6	;volatile
   883                           
   884                           ;main.c: 282: INTCONbits.GIE = 1;
   885  03B2  178B               	bsf	11,7	;volatile
   886  03B3                     l1943:	
   887                           
   888                           ;main.c: 285: Keys[0].State = (uint8_t) (PORTA & A_Pressed);
   889  03B3  0020               	movlb	0	; select bank0
   890  03B4  080C               	movf	12,w	;volatile
   891  03B5  00A0               	movwf	_Keys
   892  03B6  3002               	movlw	2
   893  03B7  05A0               	andwf	_Keys,f
   894                           
   895                           ;main.c: 286: Keys[1].State = (uint8_t) (PORTA & B_Pressed);
   896  03B8  080C               	movf	12,w	;volatile
   897  03B9  00A4               	movwf	_Keys+4
   898  03BA  3001               	movlw	1
   899  03BB  05A4               	andwf	_Keys+4,f
   900                           
   901                           ;main.c: 287: Keys[2].State = (uint8_t) (PORTA & C_Pressed);
   902  03BC  080C               	movf	12,w	;volatile
   903  03BD  00A8               	movwf	_Keys+8
   904  03BE  3004               	movlw	4
   905  03BF  05A8               	andwf	_Keys+8,f
   906                           
   907                           ;main.c: 288: Keys[3].State = (uint8_t) (PORTA & D_Pressed);
   908  03C0  080C               	movf	12,w	;volatile
   909  03C1  00AC               	movwf	_Keys+12
   910  03C2  3010               	movlw	16
   911  03C3  05AC               	andwf	_Keys+12,f
   912                           
   913                           ;main.c: 289: Keys[4].State = (uint8_t) (PORTA & (C_Pressed | D_Pressed));
   914  03C4  080C               	movf	12,w	;volatile
   915  03C5  00B0               	movwf	_Keys+16
   916  03C6  3014               	movlw	20
   917  03C7  05B0               	andwf	_Keys+16,f
   918                           
   919                           ;main.c: 290: if (Keys[4].State == (C_Pressed | D_Pressed)) {
   920  03C8  0630               	xorwf	_Keys+16,w
   921  03C9  1D03               	btfss	3,2
   922  03CA  2C02               	goto	l2007
   923                           
   924                           ;main.c: 291: SkipHandling = 10;
   925  03CB  300A               	movlw	10
   926  03CC  00B8               	movwf	_SkipHandling
   927                           
   928                           ;main.c: 292: if (Keys[4].Tick100ms < 15) {
   929  03CD  300F               	movlw	15
   930  03CE  0232               	subwf	_Keys+18,w
   931  03CF  1803               	skipnc
   932  03D0  2BD5               	goto	l1973
   933                           
   934                           ;main.c: 293: DevMode &= ~(UNBIND_ACTIVE | MODE_CHANGE_ACTIVE);
   935  03D1  30F9               	movlw	249
   936  03D2  05B9               	andwf	_DevMode,f
   937                           
   938                           ;main.c: 294: DevMode |= BIND_ACTIVE;
   939  03D3  1439               	bsf	_DevMode,0
   940                           
   941                           ;main.c: 296: } else if ((Keys[4].Tick100ms >= 35) && (Keys[4].Tick100ms < 49)) {
   942  03D4  2BFC               	goto	l1971
   943  03D5                     l1973:	
   944  03D5  3023               	movlw	35
   945  03D6  0232               	subwf	_Keys+18,w
   946  03D7  1C03               	skipc
   947  03D8  2BDF               	goto	l1979
   948  03D9  3031               	movlw	49
   949  03DA  0232               	subwf	_Keys+18,w
   950  03DB  1803               	skipnc
   951  03DC  2BDF               	goto	l1979
   952                           
   953                           ;main.c: 297: DevMode &= ~BIND_ACTIVE;
   954  03DD  1039               	bcf	_DevMode,0
   955                           
   956                           ;main.c: 298: } else if ((Keys[4].Tick100ms >= 50) && (Keys[4].Tick100ms < 85)) {
   957  03DE  2BFE               	goto	l133
   958  03DF                     l1979:	
   959  03DF  3032               	movlw	50
   960  03E0  0232               	subwf	_Keys+18,w
   961  03E1  3055               	movlw	85
   962  03E2  1C03               	skipc
   963  03E3  2BEC               	goto	L4
   964  03E4  0232               	subwf	_Keys+18,w
   965  03E5  1803               	skipnc
   966  03E6  2BEB               	goto	l1989
   967                           
   968                           ;main.c: 299: DevMode &= ~(BIND_ACTIVE | MODE_CHANGE_ACTIVE);
   969  03E7  30FA               	movlw	250
   970  03E8  05B9               	andwf	_DevMode,f
   971                           
   972                           ;main.c: 300: DevMode |= UNBIND_ACTIVE;
   973  03E9  14B9               	bsf	_DevMode,1
   974  03EA  2BFC               	goto	l1971
   975  03EB                     l1989:	
   976  03EB  3055               	movlw	85
   977  03EC                     L4:	
   978  03EC  0232               	subwf	_Keys+18,w
   979  03ED  1C03               	skipc
   980  03EE  2BF5               	goto	l1995
   981  03EF  3063               	movlw	99
   982  03F0  0232               	subwf	_Keys+18,w
   983  03F1  1803               	skipnc
   984  03F2  2BF5               	goto	l1995
   985                           
   986                           ;main.c: 303: DevMode &= ~UNBIND_ACTIVE;
   987  03F3  10B9               	bcf	_DevMode,1
   988                           
   989                           ;main.c: 304: } else if (Keys[4].Tick100ms >= 100) {
   990  03F4  2BFE               	goto	l133
   991  03F5                     l1995:	
   992  03F5  3064               	movlw	100
   993  03F6  0232               	subwf	_Keys+18,w
   994  03F7  1C03               	skipc
   995  03F8  2BFE               	goto	l133
   996                           
   997                           ;main.c: 305: DevMode &= ~(BIND_ACTIVE | UNBIND_ACTIVE);
   998  03F9  30FC               	movlw	252
   999  03FA  05B9               	andwf	_DevMode,f
  1000                           
  1001                           ;main.c: 306: DevMode |= MODE_CHANGE_ACTIVE;
  1002  03FB  1539               	bsf	_DevMode,2
  1003  03FC                     l1971:	
  1004                           
  1005                           ;main.c: 295: tick3_100ms = 100;
  1006  03FC  3064               	movlw	100
  1007  03FD  00BB               	movwf	_tick3_100ms
  1008  03FE                     l133:	
  1009                           
  1010                           ;main.c: 308: }
  1011                           ;main.c: 309: Keys[4].Tick100ms++;
  1012  03FE  0AB2               	incf	_Keys+18,f
  1013                           
  1014                           ;main.c: 311: Keys[2].StateTemp = 0;
  1015  03FF  01A9               	clrf	_Keys+9
  1016                           
  1017                           ;main.c: 312: Keys[3].StateTemp = 0;
  1018  0400  01AD               	clrf	_Keys+13
  1019                           
  1020                           ;main.c: 313: } else {
  1021  0401  2C03               	goto	l2009
  1022  0402                     l2007:	
  1023                           
  1024                           ;main.c: 314: Keys[4].Tick100ms = 0;
  1025  0402  01B2               	clrf	_Keys+18
  1026  0403                     l2009:	
  1027                           
  1028                           ;main.c: 315: }
  1029                           ;main.c: 317: if (tick3_100ms != 0) {
  1030  0403  083B               	movf	_tick3_100ms,w
  1031  0404  1903               	btfsc	3,2
  1032  0405  2C32               	goto	l2029
  1033                           
  1034                           ;main.c: 318: tick3_100ms--;
  1035  0406  03BB               	decf	_tick3_100ms,f
  1036                           
  1037                           ;main.c: 319: switch (DevMode & 0x07) {
  1038  0407  2C1E               	goto	l2027
  1039  0408                     l144:	
  1040                           ;main.c: 320: case BIND_ACTIVE:
  1041                           
  1042                           
  1043                           ;main.c: 321: LATCbits.LATC3 = ON;
  1044  0408  0022               	movlb	2	; select bank2
  1045  0409  158E               	bsf	14,3	;volatile
  1046                           
  1047                           ;main.c: 322: break;
  1048  040A  2C36               	goto	l151
  1049  040B                     l2013:	
  1050                           
  1051                           ;main.c: 324: if (LedPulseTick_100ms++ > 2) {
  1052  040B  083C               	movf	_LedPulseTick_100ms,w
  1053  040C  0ABC               	incf	_LedPulseTick_100ms,f
  1054  040D  00D5               	movwf	??_main
  1055  040E  3003               	movlw	3
  1056  040F  0255               	subwf	??_main,w
  1057  0410  1C03               	skipc
  1058  0411  2C36               	goto	l151
  1059  0412                     l2015:	
  1060                           
  1061                           ;main.c: 325: LATCbits.LATC3 = ~LATCbits.LATC3;
  1062  0412  3008               	movlw	8
  1063  0413  0022               	movlb	2	; select bank2
  1064  0414  068E               	xorwf	14,f	;volatile
  1065                           
  1066                           ;main.c: 326: LedPulseTick_100ms = 0;
  1067  0415  0020               	movlb	0	; select bank0
  1068  0416  01BC               	clrf	_LedPulseTick_100ms
  1069  0417  2C36               	goto	l151
  1070  0418                     l2019:	
  1071                           
  1072                           ;main.c: 330: if (LedPulseTick_100ms++ > 0) {
  1073  0418  0ABC               	incf	_LedPulseTick_100ms,f
  1074  0419  033C               	decf	_LedPulseTick_100ms,w
  1075  041A  1903               	btfsc	3,2
  1076  041B  2C36               	goto	l151
  1077  041C  2C12               	goto	l2015
  1078  041D                     l150:	
  1079                           ;main.c: 335: default:
  1080                           
  1081                           ;main.c: 331: LATCbits.LATC3 = ~LATCbits.LATC3;
  1082                           
  1083  041D  2C34               	goto	l2031
  1084  041E                     l2027:	
  1085                           ;main.c: 337: break;
  1086                           
  1087                           ;main.c: 336: LATCbits.LATC3 = OFF;
  1088                           
  1089  041E  0839               	movf	_DevMode,w
  1090  041F  3907               	andlw	7
  1091  0420  00D5               	movwf	??_main
  1092  0421  01D6               	clrf	??_main+1
  1093                           
  1094                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1095                           ; Switch size 1, requested type "speed"
  1096                           ; Number of cases is 1, Range of values is 0 to 0
  1097                           ; switch strategies available:
  1098                           ; Name         Instructions Cycles
  1099                           ; simple_byte            4     3 (average)
  1100                           ; direct_byte            8     6 (fixed)
  1101                           ; jumptable            260     6 (fixed)
  1102                           ;	Chosen strategy is simple_byte
  1103  0422  0856               	movf	??_main+1,w
  1104  0423  3A00               	xorlw	0	; case 0
  1105  0424  1903               	skipnz
  1106  0425  2C27               	goto	l2515
  1107  0426  2C1D               	goto	l150
  1108  0427                     l2515:	
  1109                           
  1110                           ; Switch size 1, requested type "speed"
  1111                           ; Number of cases is 3, Range of values is 1 to 4
  1112                           ; switch strategies available:
  1113                           ; Name         Instructions Cycles
  1114                           ; simple_byte           10     6 (average)
  1115                           ; direct_byte           17     9 (fixed)
  1116                           ; jumptable            263     9 (fixed)
  1117                           ;	Chosen strategy is simple_byte
  1118  0427  0855               	movf	??_main,w
  1119  0428  3A01               	xorlw	1	; case 1
  1120  0429  1903               	skipnz
  1121  042A  2C08               	goto	l144
  1122  042B  3A03               	xorlw	3	; case 2
  1123  042C  1903               	skipnz
  1124  042D  2C0B               	goto	l2013
  1125  042E  3A06               	xorlw	6	; case 4
  1126  042F  1903               	skipnz
  1127  0430  2C18               	goto	l2019
  1128  0431  2C1D               	goto	l150
  1129  0432                     l2029:	
  1130                           
  1131                           ;main.c: 340: DevMode &= ~(BIND_ACTIVE | UNBIND_ACTIVE | MODE_CHANGE_ACTIVE);
  1132  0432  30F8               	movlw	248
  1133  0433  05B9               	andwf	_DevMode,f
  1134  0434                     l2031:	
  1135                           
  1136                           ;main.c: 341: LATCbits.LATC3 = OFF;
  1137  0434  0022               	movlb	2	; select bank2
  1138  0435  118E               	bcf	14,3	;volatile
  1139  0436                     l151:	
  1140                           
  1141                           ;main.c: 342: }
  1142                           ;main.c: 344: if (SkipHandling != 0) {
  1143  0436  0020               	movlb	0	; select bank0
  1144  0437  0838               	movf	_SkipHandling,w
  1145  0438  1903               	btfsc	3,2
  1146  0439  2C3F               	goto	l152
  1147                           
  1148                           ;main.c: 345: if (Keys[4].State == 0) {
  1149  043A  0830               	movf	_Keys+16,w
  1150  043B  1D03               	btfss	3,2
  1151  043C  2F4B               	goto	l2335
  1152                           
  1153                           ;main.c: 346: SkipHandling--;
  1154  043D  03B8               	decf	_SkipHandling,f
  1155  043E  2F4B               	goto	l2335
  1156  043F                     l152:	
  1157                           
  1158                           ;main.c: 349: if ((DevMode & BIND_ACTIVE) != 0) {
  1159  043F  1C39               	btfss	_DevMode,0
  1160  0440  2C77               	goto	l155
  1161                           
  1162                           ;main.c: 350: for (uint8_t chn = 0; chn < 4; chn++) {
  1163  0441  01DB               	clrf	main@chn
  1164  0442                     l2039:	
  1165  0442  3004               	movlw	4
  1166  0443  025B               	subwf	main@chn,w
  1167  0444  1803               	btfsc	3,0
  1168  0445  2F4B               	goto	l2335
  1169                           
  1170                           ;main.c: 351: if (Keys[chn].State != Keys[chn].StateTemp) {
  1171  0446  085B               	movf	main@chn,w
  1172  0447  0709               	addwf	9,w
  1173  0448  0709               	addwf	9,w
  1174  0449  3E21               	addlw	(low ((_Keys| 0+1)))& (0+255)
  1175  044A  0086               	movwf	6
  1176  044B  0187               	clrf	7
  1177  044C  085B               	movf	main@chn,w
  1178  044D  0709               	addwf	9,w
  1179  044E  0709               	addwf	9,w
  1180  044F  3E20               	addlw	(low (_Keys| 0))& (0+255)
  1181  0450  0084               	movwf	4
  1182  0451  0185               	clrf	5
  1183  0452  0800               	movf	0,w
  1184  0453  0601               	xorwf	1,w
  1185  0454  1903               	skipnz
  1186  0455  2C75               	goto	l2053
  1187                           
  1188                           ;main.c: 352: if (Keys[chn].State == 0) {
  1189  0456  085B               	movf	main@chn,w
  1190  0457  0709               	addwf	9,w
  1191  0458  0709               	addwf	9,w
  1192  0459  3E20               	addlw	(low (_Keys| 0))& (0+255)
  1193  045A  0086               	movwf	6
  1194  045B  0801               	movf	1,w
  1195  045C  1D03               	btfss	3,2
  1196  045D  2C67               	goto	l2051
  1197                           
  1198                           ;main.c: 353: noolite_send(chn, 15, 0, &noo_send_data[0]);
  1199  045E  300F               	movlw	15
  1200  045F  00F0               	movwf	noolite_send@noo_send_command
  1201  0460  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  1202  0461  01F1               	clrf	noolite_send@noo_send_format
  1203  0462  00F2               	movwf	noolite_send@data
  1204  0463  085B               	movf	main@chn,w
  1205  0464  2203               	fcall	_noolite_send
  1206                           
  1207                           ;main.c: 354: DevMode &= ~BIND_ACTIVE;
  1208  0465  0020               	movlb	0	; select bank0
  1209  0466  1039               	bcf	_DevMode,0
  1210  0467                     l2051:	
  1211                           
  1212                           ;main.c: 355: }
  1213                           ;main.c: 356: Keys[chn].StateTemp = Keys[chn].State;
  1214  0467  085B               	movf	main@chn,w
  1215  0468  0709               	addwf	9,w
  1216  0469  0709               	addwf	9,w
  1217  046A  3E21               	addlw	(low ((_Keys| 0+1)))& (0+255)
  1218  046B  0086               	movwf	6
  1219  046C  0187               	clrf	7
  1220  046D  085B               	movf	main@chn,w
  1221  046E  0709               	addwf	9,w
  1222  046F  0709               	addwf	9,w
  1223  0470  3E20               	addlw	(low (_Keys| 0))& (0+255)
  1224  0471  0084               	movwf	4
  1225  0472  0185               	clrf	5
  1226  0473  0800               	movf	0,w
  1227  0474  0081               	movwf	1
  1228  0475                     l2053:	
  1229  0475  0ADB               	incf	main@chn,f
  1230  0476  2C42               	goto	l2039
  1231  0477                     l155:	
  1232  0477  1CB9               	btfss	_DevMode,1
  1233  0478  2CB2               	goto	l161
  1234                           
  1235                           ;main.c: 360: for (uint8_t chn = 0; chn < 4; chn++) {
  1236  0479  01DC               	clrf	main@chn_421
  1237  047A                     l2059:	
  1238  047A  3004               	movlw	4
  1239  047B  025C               	subwf	main@chn_421,w
  1240  047C  1803               	btfsc	3,0
  1241  047D  2F4B               	goto	l2335
  1242                           
  1243                           ;main.c: 361: if (Keys[chn].State != Keys[chn].StateTemp) {
  1244  047E  085C               	movf	main@chn_421,w
  1245  047F  0709               	addwf	9,w
  1246  0480  0709               	addwf	9,w
  1247  0481  3E21               	addlw	(low ((_Keys| 0+1)))& (0+255)
  1248  0482  0086               	movwf	6
  1249  0483  0187               	clrf	7
  1250  0484  085C               	movf	main@chn_421,w
  1251  0485  0709               	addwf	9,w
  1252  0486  0709               	addwf	9,w
  1253  0487  3E20               	addlw	(low (_Keys| 0))& (0+255)
  1254  0488  0084               	movwf	4
  1255  0489  0185               	clrf	5
  1256  048A  0800               	movf	0,w
  1257  048B  0601               	xorwf	1,w
  1258  048C  1903               	skipnz
  1259  048D  2CB0               	goto	l2075
  1260                           
  1261                           ;main.c: 362: if (Keys[chn].State == 0) {
  1262  048E  085C               	movf	main@chn_421,w
  1263  048F  0709               	addwf	9,w
  1264  0490  0709               	addwf	9,w
  1265  0491  3E20               	addlw	(low (_Keys| 0))& (0+255)
  1266  0492  0086               	movwf	6
  1267  0493  0801               	movf	1,w
  1268  0494  1D03               	btfss	3,2
  1269  0495  2CA1               	goto	l2073
  1270                           
  1271                           ;main.c: 363: noolite_send(chn, 9, 0, &noo_send_data[0]);
  1272  0496  3009               	movlw	9
  1273  0497  00F0               	movwf	noolite_send@noo_send_command
  1274  0498  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  1275  0499  01F1               	clrf	noolite_send@noo_send_format
  1276  049A  00F2               	movwf	noolite_send@data
  1277  049B  085C               	movf	main@chn_421,w
  1278  049C  2203               	fcall	_noolite_send
  1279                           
  1280                           ;main.c: 364: DevMode &= ~UNBIND_ACTIVE;
  1281  049D  0020               	movlb	0	; select bank0
  1282  049E  10B9               	bcf	_DevMode,1
  1283                           
  1284                           ;main.c: 365: LATCbits.LATC3 = OFF;
  1285  049F  0022               	movlb	2	; select bank2
  1286  04A0  118E               	bcf	14,3	;volatile
  1287  04A1                     l2073:	
  1288                           
  1289                           ;main.c: 366: }
  1290                           ;main.c: 367: Keys[chn].StateTemp = Keys[chn].State;
  1291  04A1  0020               	movlb	0	; select bank0
  1292  04A2  085C               	movf	main@chn_421,w
  1293  04A3  0709               	addwf	9,w
  1294  04A4  0709               	addwf	9,w
  1295  04A5  3E21               	addlw	(low ((_Keys| 0+1)))& (0+255)
  1296  04A6  0086               	movwf	6
  1297  04A7  0187               	clrf	7
  1298  04A8  085C               	movf	main@chn_421,w
  1299  04A9  0709               	addwf	9,w
  1300  04AA  0709               	addwf	9,w
  1301  04AB  3E20               	addlw	(low (_Keys| 0))& (0+255)
  1302  04AC  0084               	movwf	4
  1303  04AD  0185               	clrf	5
  1304  04AE  0800               	movf	0,w
  1305  04AF  0081               	movwf	1
  1306  04B0                     l2075:	
  1307  04B0  0ADC               	incf	main@chn_421,f
  1308  04B1  2C7A               	goto	l2059
  1309  04B2                     l161:	
  1310  04B2  1D39               	btfss	_DevMode,2
  1311  04B3  2D47               	goto	l2127
  1312                           
  1313                           ;main.c: 371: for (uint8_t chn = 0; chn < 4; chn++) {
  1314  04B4  01DD               	clrf	main@chn_422
  1315  04B5                     l2081:	
  1316  04B5  3004               	movlw	4
  1317  04B6  025D               	subwf	main@chn_422,w
  1318  04B7  1803               	btfsc	3,0
  1319  04B8  2F4B               	goto	l2335
  1320                           
  1321                           ;main.c: 372: if (Keys[chn].State != Keys[chn].StateTemp) {
  1322  04B9  085D               	movf	main@chn_422,w
  1323  04BA  0709               	addwf	9,w
  1324  04BB  0709               	addwf	9,w
  1325  04BC  3E21               	addlw	(low ((_Keys| 0+1)))& (0+255)
  1326  04BD  0086               	movwf	6
  1327  04BE  0187               	clrf	7
  1328  04BF  085D               	movf	main@chn_422,w
  1329  04C0  0709               	addwf	9,w
  1330  04C1  0709               	addwf	9,w
  1331  04C2  3E20               	addlw	(low (_Keys| 0))& (0+255)
  1332  04C3  0084               	movwf	4
  1333  04C4  0185               	clrf	5
  1334  04C5  0800               	movf	0,w
  1335  04C6  0601               	xorwf	1,w
  1336  04C7  1903               	skipnz
  1337  04C8  2D45               	goto	l2123
  1338                           
  1339                           ;main.c: 373: if (Keys[chn].State == 0) {
  1340  04C9  085D               	movf	main@chn_422,w
  1341  04CA  0709               	addwf	9,w
  1342  04CB  0709               	addwf	9,w
  1343  04CC  3E20               	addlw	(low (_Keys| 0))& (0+255)
  1344  04CD  0086               	movwf	6
  1345  04CE  0801               	movf	1,w
  1346  04CF  1D03               	btfss	3,2
  1347  04D0  2D36               	goto	l2121
  1348                           
  1349                           ;main.c: 374: noo_send_data[0] = Type[0] >> 8;
  1350  04D1  30C1               	movlw	193
  1351  04D2  0084               	movwf	4
  1352  04D3  3087               	movlw	135
  1353  04D4  0085               	movwf	5
  1354  04D5  0800               	movf	0,w	;code access
  1355  04D6  00BF               	movwf	_noo_send_data
  1356                           
  1357                           ;main.c: 375: noo_send_data[1] = Type[0];
  1358  04D7  30C0               	movlw	192
  1359  04D8  0084               	movwf	4
  1360  04D9  0800               	movf	0,w	;code access
  1361  04DA  00C0               	movwf	_noo_send_data+1
  1362                           
  1363                           ;main.c: 376: noo_send_data[2] = DevType;
  1364  04DB  083A               	movf	_DevType,w
  1365  04DC  00C1               	movwf	_noo_send_data+2
  1366                           
  1367                           ;main.c: 377: noolite_send(chn, 22, 7, &noo_send_data[0]);
  1368  04DD  3016               	movlw	22
  1369  04DE  00F0               	movwf	noolite_send@noo_send_command
  1370  04DF  3007               	movlw	7
  1371  04E0  00F1               	movwf	noolite_send@noo_send_format
  1372  04E1  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  1373  04E2  00F2               	movwf	noolite_send@data
  1374  04E3  085D               	movf	main@chn_422,w
  1375  04E4  2203               	fcall	_noolite_send
  1376                           
  1377                           ;main.c: 378: _delay((unsigned long)((500)*(8000000/4000.0)));
  1378  04E5  3006               	movlw	6
  1379  04E6  0020               	movlb	0	; select bank0
  1380  04E7  00D6               	movwf	??_main+1
  1381  04E8  3013               	movlw	19
  1382  04E9  00D5               	movwf	??_main
  1383  04EA  30AD               	movlw	173
  1384  04EB                     u1987:	
  1385  04EB  0B89               	decfsz	9,f
  1386  04EC  2CEB               	goto	u1987
  1387  04ED  0BD5               	decfsz	??_main,f
  1388  04EE  2CEB               	goto	u1987
  1389  04EF  0BD6               	decfsz	??_main+1,f
  1390  04F0  2CEB               	goto	u1987
  1391  04F1  3200               	nop2
  1392  04F2  0064               	clrwdt	;# 
  1393                           
  1394                           ;main.c: 380: LATCbits.LATC3 = ON;
  1395  04F3  0022               	movlb	2	; select bank2
  1396  04F4  158E               	bsf	14,3	;volatile
  1397                           
  1398                           ;main.c: 381: FlashEraseRow(0x7C0);
  1399  04F5  30C0               	movlw	192
  1400  04F6  00F0               	movwf	FlashEraseRow@rowAddr
  1401  04F7  3007               	movlw	7
  1402  04F8  00F1               	movwf	FlashEraseRow@rowAddr+1
  1403  04F9  209E               	fcall	_FlashEraseRow
  1404  04FA  0064               	clrwdt	;# 
  1405                           
  1406                           ;main.c: 383: _delay((unsigned long)((500)*(8000000/4000.0)));
  1407  04FB  3006               	movlw	6
  1408  04FC  0020               	movlb	0	; select bank0
  1409  04FD  00D6               	movwf	??_main+1
  1410  04FE  3013               	movlw	19
  1411  04FF  00D5               	movwf	??_main
  1412  0500  30AD               	movlw	173
  1413  0501                     u1997:	
  1414  0501  0B89               	decfsz	9,f
  1415  0502  2D01               	goto	u1997
  1416  0503  0BD5               	decfsz	??_main,f
  1417  0504  2D01               	goto	u1997
  1418  0505  0BD6               	decfsz	??_main+1,f
  1419  0506  2D01               	goto	u1997
  1420  0507  3200               	nop2
  1421  0508  0064               	clrwdt	;# 
  1422                           
  1423                           ;main.c: 385: FlashWrite(0x7C0, chn);
  1424  0509  30C0               	movlw	192
  1425  050A  00F0               	movwf	FlashWrite@addr
  1426  050B  3007               	movlw	7
  1427  050C  00F1               	movwf	FlashWrite@addr+1
  1428  050D  0020               	movlb	0	; select bank0
  1429  050E  085D               	movf	main@chn_422,w
  1430  050F  00F2               	movwf	FlashWrite@flash_data
  1431  0510  01F3               	clrf	FlashWrite@flash_data+1
  1432  0511  20C8               	fcall	_FlashWrite
  1433                           
  1434                           ;main.c: 386: FlashWrite(0x7C1, 0x5A);
  1435  0512  30C1               	movlw	193
  1436  0513  00F0               	movwf	FlashWrite@addr
  1437  0514  3007               	movlw	7
  1438  0515  00F1               	movwf	FlashWrite@addr+1
  1439  0516  305A               	movlw	90
  1440  0517  00F2               	movwf	FlashWrite@flash_data
  1441  0518  01F3               	clrf	FlashWrite@flash_data+1
  1442  0519  20C8               	fcall	_FlashWrite
  1443  051A  0064               	clrwdt	;# 
  1444                           
  1445                           ;main.c: 388: DevType = Init_TypeFromFlash();
  1446  051B  20DB               	fcall	_Init_TypeFromFlash
  1447  051C  0020               	movlb	0	; select bank0
  1448  051D  00BA               	movwf	_DevType
  1449                           
  1450                           ;main.c: 389: DevMode &= ~MODE_CHANGE_ACTIVE;
  1451  051E  1139               	bcf	_DevMode,2
  1452                           
  1453                           ;main.c: 390: LATCbits.LATC3 = OFF;
  1454  051F  0022               	movlb	2	; select bank2
  1455  0520  118E               	bcf	14,3	;volatile
  1456                           
  1457                           ;main.c: 391: noo_send_data[0] = Type[0] >> 8;
  1458  0521  30C1               	movlw	193
  1459  0522  0084               	movwf	4
  1460  0523  3087               	movlw	135
  1461  0524  0085               	movwf	5
  1462  0525  0800               	movf	0,w	;code access
  1463  0526  0020               	movlb	0	; select bank0
  1464  0527  00BF               	movwf	_noo_send_data
  1465                           
  1466                           ;main.c: 392: noo_send_data[1] = Type[0];
  1467  0528  30C0               	movlw	192
  1468  0529  0084               	movwf	4
  1469  052A  0800               	movf	0,w	;code access
  1470  052B  00C0               	movwf	_noo_send_data+1
  1471                           
  1472                           ;main.c: 393: noo_send_data[2] = DevType;
  1473  052C  083A               	movf	_DevType,w
  1474  052D  00C1               	movwf	_noo_send_data+2
  1475                           
  1476                           ;main.c: 394: noolite_send(chn, 22, 7, &noo_send_data[0]);
  1477  052E  3016               	movlw	22
  1478  052F  00F0               	movwf	noolite_send@noo_send_command
  1479  0530  3007               	movlw	7
  1480  0531  00F1               	movwf	noolite_send@noo_send_format
  1481  0532  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  1482  0533  00F2               	movwf	noolite_send@data
  1483  0534  085D               	movf	main@chn_422,w
  1484  0535  2203               	fcall	_noolite_send
  1485  0536                     l2121:	
  1486                           
  1487                           ;main.c: 395: }
  1488                           ;main.c: 396: Keys[chn].StateTemp = Keys[chn].State;
  1489  0536  0020               	movlb	0	; select bank0
  1490  0537  085D               	movf	main@chn_422,w
  1491  0538  0709               	addwf	9,w
  1492  0539  0709               	addwf	9,w
  1493  053A  3E21               	addlw	(low ((_Keys| 0+1)))& (0+255)
  1494  053B  0086               	movwf	6
  1495  053C  0187               	clrf	7
  1496  053D  085D               	movf	main@chn_422,w
  1497  053E  0709               	addwf	9,w
  1498  053F  0709               	addwf	9,w
  1499  0540  3E20               	addlw	(low (_Keys| 0))& (0+255)
  1500  0541  0084               	movwf	4
  1501  0542  0185               	clrf	5
  1502  0543  0800               	movf	0,w
  1503  0544  0081               	movwf	1
  1504  0545                     l2123:	
  1505  0545  0ADD               	incf	main@chn_422,f
  1506  0546  2CB5               	goto	l2081
  1507  0547                     l2127:	
  1508                           
  1509                           ;main.c: 401: for (uint8_t chn = 0; chn < 4; chn++) {
  1510  0547  01DE               	clrf	main@chn_423
  1511  0548                     l2129:	
  1512  0548  3004               	movlw	4
  1513  0549  025E               	subwf	main@chn_423,w
  1514  054A  1803               	btfsc	3,0
  1515  054B  2F4B               	goto	l2335
  1516                           
  1517                           ;main.c: 402: if (Keys[chn].State != Keys[chn].StateTemp) {
  1518  054C  085E               	movf	main@chn_423,w
  1519  054D  0709               	addwf	9,w
  1520  054E  0709               	addwf	9,w
  1521  054F  3E21               	addlw	(low ((_Keys| 0+1)))& (0+255)
  1522  0550  0086               	movwf	6
  1523  0551  0187               	clrf	7
  1524  0552  085E               	movf	main@chn_423,w
  1525  0553  0709               	addwf	9,w
  1526  0554  0709               	addwf	9,w
  1527  0555  3E20               	addlw	(low (_Keys| 0))& (0+255)
  1528  0556  0084               	movwf	4
  1529  0557  0185               	clrf	5
  1530  0558  0800               	movf	0,w
  1531  0559  0601               	xorwf	1,w
  1532  055A  1D03               	btfss	3,2
  1533  055B  2E9F               	goto	l2227
  1534  055C  2F3F               	goto	l2313
  1535  055D                     l2137:	
  1536                           
  1537                           ;main.c: 405: if (Keys[chn].State == 0) {
  1538  055D  085E               	movf	main@chn_423,w
  1539  055E  0709               	addwf	9,w
  1540  055F  0709               	addwf	9,w
  1541  0560  3E20               	addlw	(low (_Keys| 0))& (0+255)
  1542  0561  0086               	movwf	6
  1543  0562  0187               	clrf	7
  1544  0563  0801               	movf	1,w
  1545  0564  1D03               	btfss	3,2
  1546  0565  2EA9               	goto	l2229
  1547                           
  1548                           ;main.c: 406: if (Keys[chn].Tick100ms < 10) {
  1549  0566  085E               	movf	main@chn_423,w
  1550  0567  0709               	addwf	9,w
  1551  0568  0709               	addwf	9,w
  1552  0569  3E22               	addlw	(low ((_Keys| 0+2)))& (0+255)
  1553  056A  0086               	movwf	6
  1554  056B  300A               	movlw	10
  1555  056C  0201               	subwf	1,w
  1556  056D  1803               	skipnc
  1557  056E  2D77               	goto	l2143
  1558                           
  1559                           ;main.c: 407: noolite_send(chn, 4, 0, &noo_send_data[0]);
  1560  056F  3004               	movlw	4
  1561  0570  00F0               	movwf	noolite_send@noo_send_command
  1562  0571  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  1563  0572  01F1               	clrf	noolite_send@noo_send_format
  1564  0573  00F2               	movwf	noolite_send@data
  1565  0574  085E               	movf	main@chn_423,w
  1566  0575  2203               	fcall	_noolite_send
  1567                           
  1568                           ;main.c: 408: } else {
  1569  0576  2EA9               	goto	l2229
  1570  0577                     l2143:	
  1571                           
  1572                           ;main.c: 409: noolite_send(chn, 10, 0, &noo_send_data[0]);
  1573  0577  300A               	movlw	10
  1574  0578  00F0               	movwf	noolite_send@noo_send_command
  1575  0579  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  1576  057A  01F1               	clrf	noolite_send@noo_send_format
  1577  057B  00F2               	movwf	noolite_send@data
  1578  057C  085E               	movf	main@chn_423,w
  1579  057D  2203               	fcall	_noolite_send
  1580                           
  1581                           ;main.c: 410: _delay((unsigned long)((15)*(8000000/4000.0)));
  1582  057E  3027               	movlw	39
  1583  057F  0020               	movlb	0	; select bank0
  1584  0580  00D5               	movwf	??_main
  1585  0581  30F5               	movlw	245
  1586  0582                     u2007:	
  1587  0582  0B89               	decfsz	9,f
  1588  0583  2D82               	goto	u2007
  1589  0584  0BD5               	decfsz	??_main,f
  1590  0585  2D82               	goto	u2007
  1591                           
  1592                           ;main.c: 411: noolite_send(chn, 10, 0, &noo_send_data[0]);
  1593  0586  300A               	movlw	10
  1594  0587  00F0               	movwf	noolite_send@noo_send_command
  1595  0588  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  1596  0589  01F1               	clrf	noolite_send@noo_send_format
  1597  058A  00F2               	movwf	noolite_send@data
  1598  058B  0020               	movlb	0	; select bank0
  1599  058C  085E               	movf	main@chn_423,w
  1600  058D  2203               	fcall	_noolite_send
  1601                           
  1602                           ;main.c: 412: _delay((unsigned long)((15)*(8000000/4000.0)));
  1603  058E  3027               	movlw	39
  1604  058F  0020               	movlb	0	; select bank0
  1605  0590  00D5               	movwf	??_main
  1606  0591  30F5               	movlw	245
  1607  0592                     u2017:	
  1608  0592  0B89               	decfsz	9,f
  1609  0593  2D92               	goto	u2017
  1610  0594  0BD5               	decfsz	??_main,f
  1611  0595  2D92               	goto	u2017
  1612  0596                     L1:	
  1613                           
  1614                           ;main.c: 413: noolite_send(chn, 10, 0, &noo_send_data[0]);
  1615  0596  300A               	movlw	10
  1616  0597  00F0               	movwf	noolite_send@noo_send_command
  1617  0598  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  1618  0599  01F1               	clrf	noolite_send@noo_send_format
  1619  059A  00F2               	movwf	noolite_send@data
  1620  059B  0020               	movlb	0	; select bank0
  1621  059C  085E               	movf	main@chn_423,w
  1622  059D  2203               	fcall	_noolite_send
  1623                           
  1624                           ;main.c: 414: Keys[chn].FirstCmdSent = 0;
  1625  059E  0020               	movlb	0	; select bank0
  1626  059F  085E               	movf	main@chn_423,w
  1627  05A0  0709               	addwf	9,w
  1628  05A1  0709               	addwf	9,w
  1629  05A2  3E23               	addlw	(low ((_Keys| 0+3)))& (0+255)
  1630  05A3  0086               	movwf	6
  1631  05A4  0187               	clrf	7
  1632  05A5  0181               	clrf	1
  1633                           
  1634                           ;main.c: 415: }
  1635                           ;main.c: 416: }
  1636                           ;main.c: 417: break;
  1637  05A6  2EA9               	goto	l2229
  1638  05A7                     l2153:	
  1639                           
  1640                           ;main.c: 419: if (Keys[chn].State == 0) {
  1641  05A7  085E               	movf	main@chn_423,w
  1642  05A8  0709               	addwf	9,w
  1643  05A9  0709               	addwf	9,w
  1644  05AA  3E20               	addlw	(low (_Keys| 0))& (0+255)
  1645  05AB  0086               	movwf	6
  1646  05AC  0187               	clrf	7
  1647  05AD  0801               	movf	1,w
  1648  05AE  1D03               	btfss	3,2
  1649  05AF  2EA9               	goto	l2229
  1650                           
  1651                           ;main.c: 420: if (Keys[chn].Tick100ms < 10) {
  1652  05B0  085E               	movf	main@chn_423,w
  1653  05B1  0709               	addwf	9,w
  1654  05B2  0709               	addwf	9,w
  1655  05B3  3E22               	addlw	(low ((_Keys| 0+2)))& (0+255)
  1656  05B4  0086               	movwf	6
  1657  05B5  300A               	movlw	10
  1658  05B6  0201               	subwf	1,w
  1659  05B7  1803               	skipnc
  1660  05B8  2DCF               	goto	l2165
  1661                           
  1662                           ;main.c: 421: if ((chn == 0) || (chn == 2)) {
  1663  05B9  085E               	movf	main@chn_423,w
  1664  05BA  1903               	btfsc	3,2
  1665  05BB  2DC0               	goto	l2161
  1666  05BC  3002               	movlw	2
  1667  05BD  065E               	xorwf	main@chn_423,w
  1668  05BE  1D03               	btfss	3,2
  1669  05BF  2DC7               	goto	l2163
  1670  05C0                     l2161:	
  1671  05C0  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  1672                           
  1673                           ;main.c: 422: noolite_send(chn, 0, 0, &noo_send_data[0]);
  1674  05C1  01F0               	clrf	noolite_send@noo_send_command
  1675  05C2  01F1               	clrf	noolite_send@noo_send_format
  1676  05C3  00F2               	movwf	noolite_send@data
  1677  05C4  085E               	movf	main@chn_423,w
  1678  05C5  2203               	fcall	_noolite_send
  1679                           
  1680                           ;main.c: 423: } else {
  1681  05C6  2EA9               	goto	l2229
  1682  05C7                     l2163:	
  1683                           
  1684                           ;main.c: 424: noolite_send(chn, 2, 0, &noo_send_data[0]);
  1685  05C7  3002               	movlw	2
  1686  05C8  00F0               	movwf	noolite_send@noo_send_command
  1687  05C9  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  1688  05CA  01F1               	clrf	noolite_send@noo_send_format
  1689  05CB  00F2               	movwf	noolite_send@data
  1690  05CC  085E               	movf	main@chn_423,w
  1691  05CD  2203               	fcall	_noolite_send
  1692  05CE  2EA9               	goto	l2229
  1693  05CF                     l2165:	
  1694                           
  1695                           ;main.c: 427: noolite_send(chn, 10, 0, &noo_send_data[0]);
  1696  05CF  300A               	movlw	10
  1697  05D0  00F0               	movwf	noolite_send@noo_send_command
  1698  05D1  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  1699  05D2  01F1               	clrf	noolite_send@noo_send_format
  1700  05D3  00F2               	movwf	noolite_send@data
  1701  05D4  085E               	movf	main@chn_423,w
  1702  05D5  2203               	fcall	_noolite_send
  1703                           
  1704                           ;main.c: 428: _delay((unsigned long)((15)*(8000000/4000.0)));
  1705  05D6  3027               	movlw	39
  1706  05D7  0020               	movlb	0	; select bank0
  1707  05D8  00D5               	movwf	??_main
  1708  05D9  30F5               	movlw	245
  1709  05DA                     u2027:	
  1710  05DA  0B89               	decfsz	9,f
  1711  05DB  2DDA               	goto	u2027
  1712  05DC  0BD5               	decfsz	??_main,f
  1713  05DD  2DDA               	goto	u2027
  1714                           
  1715                           ;main.c: 429: noolite_send(chn, 10, 0, &noo_send_data[0]);
  1716  05DE  300A               	movlw	10
  1717  05DF  00F0               	movwf	noolite_send@noo_send_command
  1718  05E0  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  1719  05E1  01F1               	clrf	noolite_send@noo_send_format
  1720  05E2  00F2               	movwf	noolite_send@data
  1721  05E3  0020               	movlb	0	; select bank0
  1722  05E4  085E               	movf	main@chn_423,w
  1723  05E5  2203               	fcall	_noolite_send
  1724                           
  1725                           ;main.c: 430: _delay((unsigned long)((15)*(8000000/4000.0)));
  1726  05E6  3027               	movlw	39
  1727  05E7  0020               	movlb	0	; select bank0
  1728  05E8  00D5               	movwf	??_main
  1729  05E9  30F5               	movlw	245
  1730  05EA                     u2037:	
  1731  05EA  0B89               	decfsz	9,f
  1732  05EB  2DEA               	goto	u2037
  1733  05EC  0BD5               	decfsz	??_main,f
  1734  05ED  2DEA               	goto	u2037
  1735  05EE  2D96               	goto	L1
  1736  05EF                     l2175:	
  1737                           ;main.c: 431: noolite_send(chn, 10, 0, &noo_send_data[0]);
  1738                           
  1739                           
  1740                           ;main.c: 437: if (chn > 1) {
  1741  05EF  3002               	movlw	2
  1742  05F0  025E               	subwf	main@chn_423,w
  1743                           
  1744                           ;main.c: 438: if (Keys[chn].State == 0) {
  1745  05F1  085E               	movf	main@chn_423,w
  1746  05F2  1C03               	skipc
  1747  05F3  2E11               	goto	L5
  1748  05F4  0709               	addwf	9,w
  1749  05F5  0709               	addwf	9,w
  1750  05F6  3E20               	addlw	(low (_Keys| 0))& (0+255)
  1751  05F7  0086               	movwf	6
  1752  05F8  0187               	clrf	7
  1753  05F9  0801               	movf	1,w
  1754  05FA  1D03               	btfss	3,2
  1755  05FB  2EA9               	goto	l2229
  1756                           
  1757                           ;main.c: 439: if (Keys[chn].Tick100ms < 10) {
  1758  05FC  085E               	movf	main@chn_423,w
  1759  05FD  0709               	addwf	9,w
  1760  05FE  0709               	addwf	9,w
  1761  05FF  3E22               	addlw	(low ((_Keys| 0+2)))& (0+255)
  1762  0600  0086               	movwf	6
  1763  0601  300A               	movlw	10
  1764  0602  0201               	subwf	1,w
  1765  0603  1803               	skipnc
  1766  0604  2EA9               	goto	l2229
  1767                           
  1768                           ;main.c: 440: if (chn > 1) {
  1769  0605  3002               	movlw	2
  1770  0606  025E               	subwf	main@chn_423,w
  1771  0607  1C03               	skipc
  1772  0608  2EA9               	goto	l2229
  1773                           
  1774                           ;main.c: 441: noolite_send(chn, 7, 0, &noo_send_data[0]);
  1775  0609  3007               	movlw	7
  1776  060A  00F0               	movwf	noolite_send@noo_send_command
  1777  060B  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  1778  060C  01F1               	clrf	noolite_send@noo_send_format
  1779  060D  00F2               	movwf	noolite_send@data
  1780  060E  085E               	movf	main@chn_423,w
  1781  060F  2203               	fcall	_noolite_send
  1782  0610  2EA9               	goto	l2229
  1783  0611                     L5:	
  1784                           ;main.c: 446: if (Keys[chn].State == 0) {
  1785                           
  1786  0611  0709               	addwf	9,w
  1787  0612  0709               	addwf	9,w
  1788  0613  3E20               	addlw	(low (_Keys| 0))& (0+255)
  1789  0614  0086               	movwf	6
  1790  0615  0187               	clrf	7
  1791  0616  0801               	movf	1,w
  1792  0617  1D03               	btfss	3,2
  1793  0618  2EA9               	goto	l2229
  1794                           
  1795                           ;main.c: 447: if (Keys[chn].Tick100ms < 10) {
  1796  0619  085E               	movf	main@chn_423,w
  1797  061A  0709               	addwf	9,w
  1798  061B  0709               	addwf	9,w
  1799  061C  3E22               	addlw	(low ((_Keys| 0+2)))& (0+255)
  1800  061D  0086               	movwf	6
  1801  061E  300A               	movlw	10
  1802  061F  0201               	subwf	1,w
  1803  0620  1803               	skipnc
  1804  0621  2E2A               	goto	l2191
  1805                           
  1806                           ;main.c: 448: noolite_send(chn, 4, 0, &noo_send_data[0]);
  1807  0622  3004               	movlw	4
  1808  0623  00F0               	movwf	noolite_send@noo_send_command
  1809  0624  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  1810  0625  01F1               	clrf	noolite_send@noo_send_format
  1811  0626  00F2               	movwf	noolite_send@data
  1812  0627  085E               	movf	main@chn_423,w
  1813  0628  2203               	fcall	_noolite_send
  1814                           
  1815                           ;main.c: 449: } else {
  1816  0629  2EA9               	goto	l2229
  1817  062A                     l2191:	
  1818                           
  1819                           ;main.c: 450: noolite_send(chn, 10, 0, &noo_send_data[0]);
  1820  062A  300A               	movlw	10
  1821  062B  00F0               	movwf	noolite_send@noo_send_command
  1822  062C  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  1823  062D  01F1               	clrf	noolite_send@noo_send_format
  1824  062E  00F2               	movwf	noolite_send@data
  1825  062F  085E               	movf	main@chn_423,w
  1826  0630  2203               	fcall	_noolite_send
  1827                           
  1828                           ;main.c: 451: _delay((unsigned long)((15)*(8000000/4000.0)));
  1829  0631  3027               	movlw	39
  1830  0632  0020               	movlb	0	; select bank0
  1831  0633  00D5               	movwf	??_main
  1832  0634  30F5               	movlw	245
  1833  0635                     u2047:	
  1834  0635  0B89               	decfsz	9,f
  1835  0636  2E35               	goto	u2047
  1836  0637  0BD5               	decfsz	??_main,f
  1837  0638  2E35               	goto	u2047
  1838                           
  1839                           ;main.c: 452: noolite_send(chn, 10, 0, &noo_send_data[0]);
  1840  0639  300A               	movlw	10
  1841  063A  00F0               	movwf	noolite_send@noo_send_command
  1842  063B  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  1843  063C  01F1               	clrf	noolite_send@noo_send_format
  1844  063D  00F2               	movwf	noolite_send@data
  1845  063E  0020               	movlb	0	; select bank0
  1846  063F  085E               	movf	main@chn_423,w
  1847  0640  2203               	fcall	_noolite_send
  1848                           
  1849                           ;main.c: 453: _delay((unsigned long)((15)*(8000000/4000.0)));
  1850  0641  3027               	movlw	39
  1851  0642  0020               	movlb	0	; select bank0
  1852  0643  00D5               	movwf	??_main
  1853  0644  30F5               	movlw	245
  1854  0645                     u2057:	
  1855  0645  0B89               	decfsz	9,f
  1856  0646  2E45               	goto	u2057
  1857  0647  0BD5               	decfsz	??_main,f
  1858  0648  2E45               	goto	u2057
  1859  0649  2D96               	goto	L1
  1860  064A                     l2201:	
  1861                           ;main.c: 454: noolite_send(chn, 10, 0, &noo_send_data[0]);
  1862                           
  1863                           
  1864                           ;main.c: 461: if (chn > 1) {
  1865  064A  3002               	movlw	2
  1866  064B  025E               	subwf	main@chn_423,w
  1867                           
  1868                           ;main.c: 462: if (Keys[chn].State) {
  1869  064C  085E               	movf	main@chn_423,w
  1870  064D  1C03               	skipc
  1871  064E  2E66               	goto	L6
  1872  064F  0709               	addwf	9,w
  1873  0650  0709               	addwf	9,w
  1874  0651  3E20               	addlw	(low (_Keys| 0))& (0+255)
  1875  0652  0086               	movwf	6
  1876  0653  0187               	clrf	7
  1877  0654  0801               	movf	1,w
  1878  0655  1903               	btfsc	3,2
  1879  0656  2E5F               	goto	l2207
  1880                           
  1881                           ;main.c: 463: noolite_send(chn, 2, 0, &noo_send_data[0]);
  1882  0657  3002               	movlw	2
  1883  0658  00F0               	movwf	noolite_send@noo_send_command
  1884  0659  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  1885  065A  01F1               	clrf	noolite_send@noo_send_format
  1886  065B  00F2               	movwf	noolite_send@data
  1887  065C  085E               	movf	main@chn_423,w
  1888  065D  2203               	fcall	_noolite_send
  1889                           
  1890                           ;main.c: 464: } else {
  1891  065E  2EA9               	goto	l2229
  1892  065F                     l2207:	
  1893  065F  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  1894                           
  1895                           ;main.c: 465: noolite_send(chn, 0, 0, &noo_send_data[0]);
  1896  0660  01F0               	clrf	noolite_send@noo_send_command
  1897  0661  01F1               	clrf	noolite_send@noo_send_format
  1898  0662  00F2               	movwf	noolite_send@data
  1899  0663  085E               	movf	main@chn_423,w
  1900  0664  2203               	fcall	_noolite_send
  1901  0665  2EA9               	goto	l2229
  1902  0666                     L6:	
  1903                           ;main.c: 468: if (Keys[chn].State == 0) {
  1904                           
  1905  0666  0709               	addwf	9,w
  1906  0667  0709               	addwf	9,w
  1907  0668  3E20               	addlw	(low (_Keys| 0))& (0+255)
  1908  0669  0086               	movwf	6
  1909  066A  0187               	clrf	7
  1910  066B  0801               	movf	1,w
  1911  066C  1D03               	btfss	3,2
  1912  066D  2EA9               	goto	l2229
  1913                           
  1914                           ;main.c: 469: if (Keys[chn].Tick100ms < 10) {
  1915  066E  085E               	movf	main@chn_423,w
  1916  066F  0709               	addwf	9,w
  1917  0670  0709               	addwf	9,w
  1918  0671  3E22               	addlw	(low ((_Keys| 0+2)))& (0+255)
  1919  0672  0086               	movwf	6
  1920  0673  300A               	movlw	10
  1921  0674  0201               	subwf	1,w
  1922  0675  1803               	skipnc
  1923  0676  2E7F               	goto	l2215
  1924                           
  1925                           ;main.c: 470: noolite_send(chn, 4, 0, &noo_send_data[0]);
  1926  0677  3004               	movlw	4
  1927  0678  00F0               	movwf	noolite_send@noo_send_command
  1928  0679  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  1929  067A  01F1               	clrf	noolite_send@noo_send_format
  1930  067B  00F2               	movwf	noolite_send@data
  1931  067C  085E               	movf	main@chn_423,w
  1932  067D  2203               	fcall	_noolite_send
  1933                           
  1934                           ;main.c: 471: } else {
  1935  067E  2EA9               	goto	l2229
  1936  067F                     l2215:	
  1937                           
  1938                           ;main.c: 472: noolite_send(chn, 10, 0, &noo_send_data[0]);
  1939  067F  300A               	movlw	10
  1940  0680  00F0               	movwf	noolite_send@noo_send_command
  1941  0681  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  1942  0682  01F1               	clrf	noolite_send@noo_send_format
  1943  0683  00F2               	movwf	noolite_send@data
  1944  0684  085E               	movf	main@chn_423,w
  1945  0685  2203               	fcall	_noolite_send
  1946                           
  1947                           ;main.c: 473: _delay((unsigned long)((15)*(8000000/4000.0)));
  1948  0686  3027               	movlw	39
  1949  0687  0020               	movlb	0	; select bank0
  1950  0688  00D5               	movwf	??_main
  1951  0689  30F5               	movlw	245
  1952  068A                     u2067:	
  1953  068A  0B89               	decfsz	9,f
  1954  068B  2E8A               	goto	u2067
  1955  068C  0BD5               	decfsz	??_main,f
  1956  068D  2E8A               	goto	u2067
  1957                           
  1958                           ;main.c: 474: noolite_send(chn, 10, 0, &noo_send_data[0]);
  1959  068E  300A               	movlw	10
  1960  068F  00F0               	movwf	noolite_send@noo_send_command
  1961  0690  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  1962  0691  01F1               	clrf	noolite_send@noo_send_format
  1963  0692  00F2               	movwf	noolite_send@data
  1964  0693  0020               	movlb	0	; select bank0
  1965  0694  085E               	movf	main@chn_423,w
  1966  0695  2203               	fcall	_noolite_send
  1967                           
  1968                           ;main.c: 475: _delay((unsigned long)((15)*(8000000/4000.0)));
  1969  0696  3027               	movlw	39
  1970  0697  0020               	movlb	0	; select bank0
  1971  0698  00D5               	movwf	??_main
  1972  0699  30F5               	movlw	245
  1973  069A                     u2077:	
  1974  069A  0B89               	decfsz	9,f
  1975  069B  2E9A               	goto	u2077
  1976  069C  0BD5               	decfsz	??_main,f
  1977  069D  2E9A               	goto	u2077
  1978  069E  2D96               	goto	L1
  1979  069F                     l2227:	
  1980                           ;main.c: 476: noolite_send(chn, 10, 0, &noo_send_data[0]);
  1981                           
  1982  069F  083A               	movf	_DevType,w
  1983                           
  1984                           ; Switch size 1, requested type "speed"
  1985                           ; Number of cases is 4, Range of values is 0 to 3
  1986                           ; switch strategies available:
  1987                           ; Name         Instructions Cycles
  1988                           ; direct_byte           14     6 (fixed)
  1989                           ; simple_byte           13     7 (average)
  1990                           ; jumptable            260     6 (fixed)
  1991                           ;	Chosen strategy is direct_byte
  1992  06A0  0084               	movwf	4
  1993  06A1  3004               	movlw	4
  1994  06A2  0204               	subwf	4,w
  1995  06A3  1803               	skipnc
  1996  06A4  2EA9               	goto	l2229
  1997  06A5  3180               	movlp	high S2517
  1998  06A6  3002               	movlw	low S2517
  1999  06A7  0704               	addwf	4,w
  2000  06A8  0082               	movwf	2
  2001  06A9                     l2229:	
  2002                           
  2003                           ;main.c: 483: Keys[chn].StateTemp = Keys[chn].State;
  2004  06A9  0020               	movlb	0	; select bank0
  2005  06AA  085E               	movf	main@chn_423,w
  2006  06AB  0709               	addwf	9,w
  2007  06AC  0709               	addwf	9,w
  2008  06AD  3E21               	addlw	(low ((_Keys| 0+1)))& (0+255)
  2009  06AE  0086               	movwf	6
  2010  06AF  0187               	clrf	7
  2011  06B0  085E               	movf	main@chn_423,w
  2012  06B1  0709               	addwf	9,w
  2013  06B2  0709               	addwf	9,w
  2014  06B3  3E20               	addlw	(low (_Keys| 0))& (0+255)
  2015  06B4  0084               	movwf	4
  2016  06B5  0185               	clrf	5
  2017  06B6  0800               	movf	0,w
  2018  06B7  0081               	movwf	1
  2019  06B8  2F3F               	goto	l2313
  2020  06B9                     l2231:	
  2021                           
  2022                           ;main.c: 488: if (Keys[chn].State != 0) {
  2023  06B9  085E               	movf	main@chn_423,w
  2024  06BA                     L8:	
  2025  06BA  0709               	addwf	9,w
  2026  06BB  0709               	addwf	9,w
  2027  06BC  3E20               	addlw	(low (_Keys| 0))& (0+255)
  2028  06BD  0086               	movwf	6
  2029  06BE  0187               	clrf	7
  2030  06BF  0801               	movf	1,w
  2031  06C0  1903               	btfsc	3,2
  2032  06C1  2EEB               	goto	l2243
  2033                           
  2034                           ;main.c: 489: if (Keys[chn].Tick100ms > 9) {
  2035  06C2  085E               	movf	main@chn_423,w
  2036  06C3  0709               	addwf	9,w
  2037  06C4  0709               	addwf	9,w
  2038  06C5  3E22               	addlw	(low ((_Keys| 0+2)))& (0+255)
  2039  06C6  0086               	movwf	6
  2040  06C7  300A               	movlw	10
  2041  06C8  0201               	subwf	1,w
  2042                           
  2043                           ;main.c: 490: if (Keys[chn].FirstCmdSent == 0) {
  2044  06C9  085E               	movf	main@chn_423,w
  2045  06CA  1C03               	skipc
  2046  06CB  2EE4               	goto	L7
  2047  06CC  0709               	addwf	9,w
  2048  06CD  0709               	addwf	9,w
  2049  06CE  3E23               	addlw	(low ((_Keys| 0+3)))& (0+255)
  2050  06CF  0086               	movwf	6
  2051  06D0  0801               	movf	1,w
  2052  06D1  1D03               	btfss	3,2
  2053  06D2  2EE3               	goto	l2241
  2054                           
  2055                           ;main.c: 491: noolite_send(chn, 5, 0, &noo_send_data[0]);
  2056  06D3  3005               	movlw	5
  2057  06D4                     L3:	
  2058  06D4  00F0               	movwf	noolite_send@noo_send_command
  2059  06D5  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  2060  06D6                     L2:	
  2061  06D6  01F1               	clrf	noolite_send@noo_send_format
  2062  06D7  00F2               	movwf	noolite_send@data
  2063  06D8  085E               	movf	main@chn_423,w
  2064  06D9  2203               	fcall	_noolite_send
  2065                           
  2066                           ;main.c: 492: Keys[chn].FirstCmdSent = 1;
  2067  06DA  0020               	movlb	0	; select bank0
  2068  06DB  085E               	movf	main@chn_423,w
  2069  06DC  0709               	addwf	9,w
  2070  06DD  0709               	addwf	9,w
  2071  06DE  3E23               	addlw	(low ((_Keys| 0+3)))& (0+255)
  2072  06DF  0086               	movwf	6
  2073  06E0  0187               	clrf	7
  2074  06E1  0181               	clrf	1
  2075  06E2  0A81               	incf	1,f
  2076  06E3                     l2241:	
  2077                           
  2078                           ;main.c: 493: }
  2079                           ;main.c: 494: }
  2080                           ;main.c: 495: Keys[chn].Tick100ms++;
  2081  06E3  085E               	movf	main@chn_423,w
  2082  06E4                     L7:	
  2083  06E4  0709               	addwf	9,w
  2084  06E5  0709               	addwf	9,w
  2085  06E6  3E22               	addlw	(low ((_Keys| 0+2)))& (0+255)
  2086  06E7  0086               	movwf	6
  2087  06E8  0187               	clrf	7
  2088  06E9  0A81               	incf	1,f
  2089                           
  2090                           ;main.c: 496: } else {
  2091  06EA  2F49               	goto	l2315
  2092  06EB                     l2243:	
  2093                           
  2094                           ;main.c: 497: Keys[chn].Tick100ms = 0;
  2095  06EB  085E               	movf	main@chn_423,w
  2096  06EC  0709               	addwf	9,w
  2097  06ED  0709               	addwf	9,w
  2098  06EE  3E22               	addlw	(low ((_Keys| 0+2)))& (0+255)
  2099  06EF  0086               	movwf	6
  2100  06F0  0187               	clrf	7
  2101  06F1  0181               	clrf	1
  2102  06F2  2F49               	goto	l2315
  2103  06F3                     l2245:	
  2104                           
  2105                           ;main.c: 501: if (Keys[chn].State != 0) {
  2106  06F3  085E               	movf	main@chn_423,w
  2107  06F4  0709               	addwf	9,w
  2108  06F5  0709               	addwf	9,w
  2109  06F6  3E20               	addlw	(low (_Keys| 0))& (0+255)
  2110  06F7  0086               	movwf	6
  2111  06F8  0187               	clrf	7
  2112  06F9  0801               	movf	1,w
  2113  06FA  1903               	btfsc	3,2
  2114  06FB  2EEB               	goto	l2243
  2115                           
  2116                           ;main.c: 502: if (Keys[chn].Tick100ms > 9) {
  2117  06FC  085E               	movf	main@chn_423,w
  2118  06FD  0709               	addwf	9,w
  2119  06FE  0709               	addwf	9,w
  2120  06FF  3E22               	addlw	(low ((_Keys| 0+2)))& (0+255)
  2121  0700  0086               	movwf	6
  2122  0701  300A               	movlw	10
  2123  0702  0201               	subwf	1,w
  2124                           
  2125                           ;main.c: 503: if (Keys[chn].FirstCmdSent == 0) {
  2126  0703  085E               	movf	main@chn_423,w
  2127  0704  1C03               	skipc
  2128  0705  2EE4               	goto	L7
  2129  0706  0709               	addwf	9,w
  2130  0707  0709               	addwf	9,w
  2131  0708  3E23               	addlw	(low ((_Keys| 0+3)))& (0+255)
  2132  0709  0086               	movwf	6
  2133  070A  0801               	movf	1,w
  2134  070B  1D03               	btfss	3,2
  2135  070C  2EE3               	goto	l2241
  2136                           
  2137                           ;main.c: 504: if (chn == 0 || chn == 2) {
  2138  070D  085E               	movf	main@chn_423,w
  2139  070E  1903               	btfsc	3,2
  2140  070F  2F14               	goto	l2255
  2141  0710  3002               	movlw	2
  2142  0711  065E               	xorwf	main@chn_423,w
  2143  0712  1D03               	btfss	3,2
  2144  0713  2F18               	goto	l2257
  2145  0714                     l2255:	
  2146  0714  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  2147                           
  2148                           ;main.c: 505: noolite_send(chn, 1, 0, &noo_send_data[0]);
  2149  0715  01F0               	clrf	noolite_send@noo_send_command
  2150  0716  0AF0               	incf	noolite_send@noo_send_command,f
  2151  0717  2ED6               	goto	L2
  2152  0718                     l2257:	
  2153                           ;main.c: 506: } else {
  2154                           
  2155                           
  2156                           ;main.c: 507: noolite_send(chn, 3, 0, &noo_send_data[0]);
  2157  0718  3003               	movlw	3
  2158  0719  2ED4               	goto	L3
  2159  071A                     l2265:	
  2160                           
  2161                           ;main.c: 518: if (chn < 2) {
  2162  071A  3002               	movlw	2
  2163  071B  025E               	subwf	main@chn_423,w
  2164                           
  2165                           ;main.c: 531: if (Keys[chn].State != 0) {
  2166                           
  2167                           ;main.c: 522: noolite_send(chn, 5, 0, &noo_send_data[0]);
  2168                           
  2169                           ;main.c: 521: if (Keys[chn].FirstCmdSent == 0) {
  2170                           
  2171                           ;main.c: 520: if (Keys[chn].Tick100ms > 9) {
  2172                           
  2173                           ;main.c: 519: if (Keys[chn].State != 0) {
  2174  071C  085E               	movf	main@chn_423,w
  2175  071D  1C03               	btfss	3,0
  2176  071E  2EBA               	goto	L8
  2177  071F  0709               	addwf	9,w
  2178  0720  0709               	addwf	9,w
  2179  0721  3E20               	addlw	(low (_Keys| 0))& (0+255)
  2180  0722  0086               	movwf	6
  2181  0723  0187               	clrf	7
  2182  0724  0801               	movf	1,w
  2183  0725  1903               	btfsc	3,2
  2184  0726  2EEB               	goto	l2243
  2185                           
  2186                           ;main.c: 532: if (Keys[chn].Tick100ms > 49) {
  2187  0727  085E               	movf	main@chn_423,w
  2188  0728  0709               	addwf	9,w
  2189  0729  0709               	addwf	9,w
  2190  072A  3E22               	addlw	(low ((_Keys| 0+2)))& (0+255)
  2191  072B  0086               	movwf	6
  2192  072C  3032               	movlw	50
  2193  072D  0201               	subwf	1,w
  2194                           
  2195                           ;main.c: 533: if (Keys[chn].FirstCmdSent == 0) {
  2196  072E  085E               	movf	main@chn_423,w
  2197  072F  1C03               	skipc
  2198  0730  2EE4               	goto	L7
  2199  0731  0709               	addwf	9,w
  2200  0732  0709               	addwf	9,w
  2201  0733  3E23               	addlw	(low ((_Keys| 0+3)))& (0+255)
  2202  0734  0086               	movwf	6
  2203  0735  0801               	movf	1,w
  2204  0736  1D03               	btfss	3,2
  2205  0737  2EE3               	goto	l2241
  2206                           
  2207                           ;main.c: 534: noolite_send(chn, 8, 0, &noo_send_data[0]);
  2208  0738  3008               	movlw	8
  2209  0739  2ED4               	goto	L3
  2210  073A                     l2295:	
  2211                           
  2212                           ;main.c: 545: if (chn < 2) {
  2213  073A  3002               	movlw	2
  2214  073B  025E               	subwf	main@chn_423,w
  2215  073C  1803               	skipnc
  2216  073D  2F49               	goto	l2315
  2217  073E  2EB9               	goto	l2231
  2218  073F                     l2313:	
  2219                           ;main.c: 549: noolite_send(chn, 5, 0, &noo_send_data[0]);
  2220                           
  2221                           ;main.c: 548: if (Keys[chn].FirstCmdSent == 0) {
  2222                           
  2223                           ;main.c: 547: if (Keys[chn].Tick100ms > 9) {
  2224                           
  2225                           ;main.c: 546: if (Keys[chn].State != 0) {
  2226                           
  2227  073F  083A               	movf	_DevType,w
  2228                           
  2229                           ; Switch size 1, requested type "speed"
  2230                           ; Number of cases is 4, Range of values is 0 to 3
  2231                           ; switch strategies available:
  2232                           ; Name         Instructions Cycles
  2233                           ; direct_byte           14     6 (fixed)
  2234                           ; simple_byte           13     7 (average)
  2235                           ; jumptable            260     6 (fixed)
  2236                           ;	Chosen strategy is direct_byte
  2237  0740  0084               	movwf	4
  2238  0741  3004               	movlw	4
  2239  0742  0204               	subwf	4,w
  2240  0743  1803               	skipnc
  2241  0744  2F49               	goto	l2315
  2242  0745  3180               	movlp	high S2519
  2243  0746  3006               	movlw	low S2519
  2244  0747  0704               	addwf	4,w
  2245  0748  0082               	movwf	2
  2246  0749                     l2315:	
  2247  0749  0ADE               	incf	main@chn_423,f
  2248  074A  2D48               	goto	l2129
  2249  074B                     l2335:	
  2250                           
  2251                           ;main.c: 583: }
  2252                           ;main.c: 585: if (((DevMode & 0x07) == 0) && ((PORTA & All_Pressed) == 0)) {
  2253  074B  0839               	movf	_DevMode,w
  2254  074C  3907               	andlw	7
  2255  074D  1D03               	btfss	3,2
  2256  074E  2FA8               	goto	l2359
  2257  074F  080C               	movf	12,w	;volatile
  2258  0750  3917               	andlw	23
  2259  0751  1D03               	btfss	3,2
  2260  0752  2FA8               	goto	l2359
  2261                           
  2262                           ;main.c: 586: for (uint8_t cellNum = 0; cellNum < 8; cellNum++) {
  2263  0753  01DA               	clrf	main@cellNum
  2264                           
  2265                           ;main.c: 590: break;
  2266  0754  2F72               	goto	l2341
  2267  0755                     l2351:	
  2268                           
  2269                           ;main.c: 592: if (cellNum == 7) {
  2270  0755  3007               	movlw	7
  2271  0756  065A               	xorwf	main@cellNum,w
  2272  0757  1D03               	btfss	3,2
  2273  0758  2F70               	goto	l2355
  2274                           
  2275                           ;main.c: 593: FlashEraseRow(0x7D0);
  2276  0759  30D0               	movlw	208
  2277  075A  00F0               	movwf	FlashEraseRow@rowAddr
  2278  075B  3007               	movlw	7
  2279  075C  00F1               	movwf	FlashEraseRow@rowAddr+1
  2280  075D  209E               	fcall	_FlashEraseRow
  2281                           
  2282                           ;main.c: 594: FlashWrite(0x7D0, tx_status & 0x02);
  2283  075E  30D0               	movlw	208
  2284  075F  00F0               	movwf	FlashWrite@addr
  2285  0760  3007               	movlw	7
  2286  0761  00F1               	movwf	FlashWrite@addr+1
  2287  0762  0020               	movlb	0	; select bank0
  2288  0763  083E               	movf	_tx_status,w
  2289  0764  3902               	andlw	2
  2290  0765  00F2               	movwf	FlashWrite@flash_data
  2291  0766  01F3               	clrf	FlashWrite@flash_data+1
  2292  0767  20C8               	fcall	_FlashWrite
  2293                           
  2294                           ;main.c: 595: FlashWrite(0x7D1, 0x5A);
  2295  0768  30D1               	movlw	209
  2296  0769  00F0               	movwf	FlashWrite@addr
  2297  076A  3007               	movlw	7
  2298  076B  00F1               	movwf	FlashWrite@addr+1
  2299  076C  305A               	movlw	90
  2300  076D  00F2               	movwf	FlashWrite@flash_data
  2301  076E  01F3               	clrf	FlashWrite@flash_data+1
  2302  076F  20C8               	fcall	_FlashWrite
  2303  0770                     l2355:	
  2304  0770  0020               	movlb	0	; select bank0
  2305  0771  0ADA               	incf	main@cellNum,f
  2306  0772                     l2341:	
  2307  0772  3008               	movlw	8
  2308  0773  025A               	subwf	main@cellNum,w
  2309  0774  1803               	btfsc	3,0
  2310  0775  2FA5               	goto	l245
  2311                           
  2312                           ;main.c: 587: if (TxStatus[cellNum] == 0xFFFF) {
  2313  0776  085A               	movf	main@cellNum,w
  2314  0777  00D5               	movwf	??_main
  2315  0778  30D0               	movlw	208
  2316  0779  01D6               	clrf	??_main+1
  2317  077A  35D5               	lslf	??_main,f
  2318  077B  0DD6               	rlf	??_main+1,f
  2319  077C  0755               	addwf	??_main,w
  2320  077D  0084               	movwf	4
  2321  077E  3087               	movlw	135
  2322  077F  3D56               	addwfc	??_main+1,w
  2323  0780  0085               	movwf	5
  2324  0781  0012               	moviw fsr0++
  2325  0782  3AFF               	xorlw	255
  2326  0783  00D7               	movwf	??_main+2
  2327  0784  0012               	moviw fsr0++
  2328  0785  3AFF               	xorlw	255
  2329  0786  04D7               	iorwf	??_main+2,f
  2330  0787  1D03               	btfss	3,2
  2331  0788  2F55               	goto	l2351
  2332                           
  2333                           ;main.c: 588: FlashWrite((0x7D0 + (cellNum * 2)), tx_status & 0x02);
  2334  0789  085A               	movf	main@cellNum,w
  2335  078A  00F0               	movwf	FlashWrite@addr
  2336  078B  30D0               	movlw	208
  2337  078C  01F1               	clrf	FlashWrite@addr+1
  2338  078D  35F0               	lslf	FlashWrite@addr,f
  2339  078E  0DF1               	rlf	FlashWrite@addr+1,f
  2340  078F  07F0               	addwf	FlashWrite@addr,f
  2341  0790  3007               	movlw	7
  2342  0791  3DF1               	addwfc	FlashWrite@addr+1,f
  2343  0792  083E               	movf	_tx_status,w
  2344  0793  3902               	andlw	2
  2345  0794  00F2               	movwf	FlashWrite@flash_data
  2346  0795  01F3               	clrf	FlashWrite@flash_data+1
  2347  0796  20C8               	fcall	_FlashWrite
  2348                           
  2349                           ;main.c: 589: FlashWrite((0x7D0 + (cellNum * 2 + 1)), 0x5A);
  2350  0797  0020               	movlb	0	; select bank0
  2351  0798  085A               	movf	main@cellNum,w
  2352  0799  00F0               	movwf	FlashWrite@addr
  2353  079A  30D1               	movlw	209
  2354  079B  01F1               	clrf	FlashWrite@addr+1
  2355  079C  35F0               	lslf	FlashWrite@addr,f
  2356  079D  0DF1               	rlf	FlashWrite@addr+1,f
  2357  079E  07F0               	addwf	FlashWrite@addr,f
  2358  079F  3007               	movlw	7
  2359  07A0  3DF1               	addwfc	FlashWrite@addr+1,f
  2360  07A1  305A               	movlw	90
  2361  07A2  00F2               	movwf	FlashWrite@flash_data
  2362  07A3  01F3               	clrf	FlashWrite@flash_data+1
  2363  07A4  20C8               	fcall	_FlashWrite
  2364  07A5                     l245:	
  2365                           
  2366                           ;main.c: 596: }
  2367                           ;main.c: 597: }
  2368                           ;main.c: 598: }
  2369                           ;main.c: 599: LATCbits.LATC5 = 0;
  2370  07A5  0022               	movlb	2	; select bank2
  2371  07A6  128E               	bcf	14,5	;volatile
  2372                           
  2373                           ;main.c: 600: } else {
  2374  07A7  2BB3               	goto	l1943
  2375  07A8                     l2359:	
  2376                           
  2377                           ;main.c: 601: WDTCONbits.WDTPS = 0b00110;
  2378  07A8  0021               	movlb	1	; select bank1
  2379  07A9  0817               	movf	23,w	;volatile
  2380  07AA  39C1               	andlw	-63
  2381  07AB  380C               	iorlw	12
  2382  07AC  0097               	movwf	23	;volatile
  2383                           
  2384                           ;main.c: 602: __nop();
  2385  07AD  0000               	nop
  2386  07AE  0063               	sleep	;# 
  2387                           
  2388                           ;main.c: 604: __nop();
  2389  07AF  0000               	nop
  2390                           
  2391                           ;main.c: 605: WDTCONbits.WDTPS = 0b00101;
  2392  07B0  0021               	movlb	1	; select bank1
  2393  07B1  0817               	movf	23,w	;volatile
  2394  07B2  39C1               	andlw	-63
  2395  07B3  380A               	iorlw	10
  2396  07B4  0097               	movwf	23	;volatile
  2397                           
  2398                           ;main.c: 606: __nop();
  2399  07B5  0000               	nop
  2400  07B6  0063               	sleep	;# 
  2401                           
  2402                           ;main.c: 608: __nop();
  2403  07B7  0000               	nop
  2404                           
  2405                           ;main.c: 609: WDTCONbits.WDTPS = 0b01011;
  2406  07B8  0021               	movlb	1	; select bank1
  2407  07B9  0817               	movf	23,w	;volatile
  2408  07BA  39C1               	andlw	-63
  2409  07BB  3816               	iorlw	22
  2410  07BC  0097               	movwf	23	;volatile
  2411                           
  2412                           ;main.c: 610: __nop();
  2413  07BD  0000               	nop
  2414  07BE  0064               	clrwdt	;# 
  2415  07BF  2BB3               	goto	l1943
  2416  07C0                     __end_of_main:	
  2417                           
  2418                           	psect	swtext1
  2419  0002                     __pswtext1:	
  2420  0002                     S2517:	
  2421  0002  2D5D               	ljmp	l2137
  2422  0003  2DA7               	ljmp	l2153
  2423  0004  2DEF               	ljmp	l2175
  2424  0005  2E4A               	ljmp	l2201
  2425                           
  2426                           	psect	swtext2
  2427  0006                     __pswtext2:	
  2428  0006                     S2519:	
  2429  0006  2EB9               	ljmp	l2231
  2430  0007  2EF3               	ljmp	l2245
  2431  0008  2F1A               	ljmp	l2265
  2432  0009  2F3A               	ljmp	l2295
  2433                           
  2434                           	psect	text1
  2435  0203                     __ptext1:	
  2436 ;; *************** function _noolite_send *****************
  2437 ;; Defined at:
  2438 ;;		line 174 in file "noolite.c"
  2439 ;; Parameters:    Size  Location     Type
  2440 ;;  chn             1    wreg     unsigned char 
  2441 ;;  noo_send_com    1    0[COMMON] unsigned char 
  2442 ;;  noo_send_for    1    1[COMMON] unsigned char 
  2443 ;;  data            1    2[COMMON] PTR unsigned char 
  2444 ;;		 -> noo_send_data(4), 
  2445 ;; Auto vars:     Size  Location     Type
  2446 ;;  chn             1   14[BANK0 ] unsigned char 
  2447 ;;  noo_send_buf   12    0[BANK0 ] unsigned char [12]
  2448 ;;  endpos          1   17[BANK0 ] unsigned char 
  2449 ;;  temp_send       1   16[BANK0 ] unsigned char 
  2450 ;;  countsend       1   15[BANK0 ] unsigned char 
  2451 ;;  countbit        1   13[BANK0 ] unsigned char 
  2452 ;;  startpos        1   12[BANK0 ] unsigned char 
  2453 ;; Return value:  Size  Location     Type
  2454 ;;                  1    wreg      void 
  2455 ;; Registers used:
  2456 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2457 ;; Tracked objects:
  2458 ;;		On entry : 1F/0
  2459 ;;		On exit  : 1F/2
  2460 ;;		Unchanged: 0/0
  2461 ;; Data sizes:     COMMON   BANK0   BANK1
  2462 ;;      Params:         3       0       0
  2463 ;;      Locals:         0      18       0
  2464 ;;      Temps:          8       0       0
  2465 ;;      Totals:        11      18       0
  2466 ;;Total ram usage:       29 bytes
  2467 ;; Hardware stack levels used:    1
  2468 ;; This function calls:
  2469 ;;		Nothing
  2470 ;; This function is called by:
  2471 ;;		_main
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475                           
  2476                           ;psect for function _noolite_send
  2477  0203                     _noolite_send:	
  2478                           
  2479                           ;incstack = 0
  2480                           ; Regs used in _noolite_send: [wreg+fsr1l+fsr1h+status,2+status,0]
  2481                           ;noolite_send@chn stored from wreg
  2482  0203  00D1               	movwf	noolite_send@chn
  2483                           
  2484                           ;noolite.c: 175: tx_status = (TMR2 & 0x80) >> 7;
  2485  0204  081A               	movf	26,w	;volatile
  2486  0205  00F3               	movwf	??_noolite_send
  2487  0206  3007               	movlw	7
  2488  0207                     u1095:	
  2489  0207  36F3               	lsrf	??_noolite_send,f
  2490  0208  0B89               	decfsz	9,f
  2491  0209  2A07               	goto	u1095
  2492  020A  0873               	movf	??_noolite_send,w
  2493  020B  00BE               	movwf	_tx_status
  2494  020C  3001               	movlw	1
  2495  020D  05BE               	andwf	_tx_status,f
  2496  020E  0064               	clrwdt	;# 
  2497                           
  2498                           ;noolite.c: 186: tx_status ^= (1<<1);
  2499  020F  3002               	movlw	2
  2500  0210  0020               	movlb	0	; select bank0
  2501  0211  06BE               	xorwf	_tx_status,f
  2502                           
  2503                           ;noolite.c: 189: if (noo_send_command < 16) {
  2504  0212  3010               	movlw	16
  2505  0213  0270               	subwf	noolite_send@noo_send_command,w
  2506  0214  1803               	skipnc
  2507  0215  2A22               	goto	l1741
  2508                           
  2509                           ;noolite.c: 190: startpos = 10;
  2510  0216  300A               	movlw	10
  2511  0217  00CF               	movwf	noolite_send@startpos
  2512                           
  2513                           ;noolite.c: 191: noo_send_buffer[1] = (noo_send_command << 4) | (1 << 2);
  2514  0218  0E70               	swapf	noolite_send@noo_send_command,w
  2515  0219  39F0               	andlw	240
  2516  021A  3804               	iorlw	4
  2517  021B  00C4               	movwf	noolite_send@noo_send_buffer+1
  2518                           
  2519                           ;noolite.c: 192: if (((tx_status & (1<<1)) != 0)) {
  2520  021C  1CBE               	btfss	_tx_status,1
  2521  021D  2A20               	goto	l289
  2522                           
  2523                           ;noolite.c: 193: noo_send_buffer[1] |= (1<<3);
  2524  021E  15C4               	bsf	noolite_send@noo_send_buffer+1,3
  2525                           
  2526                           ;noolite.c: 194: } else {
  2527  021F  2A2E               	goto	l291
  2528  0220                     l289:	
  2529                           
  2530                           ;noolite.c: 195: noo_send_buffer[1] &= (~(1<<3));
  2531  0220  11C4               	bcf	noolite_send@noo_send_buffer+1,3
  2532  0221  2A2E               	goto	l291
  2533  0222                     l1741:	
  2534                           
  2535                           ;noolite.c: 198: startpos = 6;
  2536  0222  3006               	movlw	6
  2537  0223  00CF               	movwf	noolite_send@startpos
  2538                           
  2539                           ;noolite.c: 199: noo_send_buffer[0] = (1 << 6);
  2540  0224  3040               	movlw	64
  2541  0225  00C3               	movwf	noolite_send@noo_send_buffer
  2542                           
  2543                           ;noolite.c: 200: if (((tx_status & (1<<1)) != 0)) {
  2544  0226  1CBE               	btfss	_tx_status,1
  2545  0227  2A2A               	goto	l292
  2546                           
  2547                           ;noolite.c: 201: noo_send_buffer[0] |= (1<<7);
  2548  0228  17C3               	bsf	noolite_send@noo_send_buffer,7
  2549                           
  2550                           ;noolite.c: 202: } else {
  2551  0229  2A2B               	goto	l1747
  2552  022A                     l292:	
  2553                           
  2554                           ;noolite.c: 203: noo_send_buffer[0] &= (~(1<<7));
  2555  022A  13C3               	bcf	noolite_send@noo_send_buffer,7
  2556  022B                     l1747:	
  2557                           
  2558                           ;noolite.c: 204: };
  2559                           ;noolite.c: 205: noo_send_buffer[1] = noo_send_command;
  2560  022B  0870               	movf	noolite_send@noo_send_command,w
  2561  022C  00C4               	movwf	noolite_send@noo_send_buffer+1
  2562                           
  2563                           ;noolite.c: 206: noo_send_format = noo_send_format | 4;
  2564  022D  1571               	bsf	noolite_send@noo_send_format,2
  2565  022E                     l291:	
  2566                           
  2567                           ;noolite.c: 207: }
  2568                           ;noolite.c: 208: endpos = 2;
  2569  022E  3002               	movlw	2
  2570  022F  00D4               	movwf	noolite_send@endpos
  2571                           
  2572                           ;noolite.c: 209: temp_send = noo_send_format & 3;
  2573  0230  0871               	movf	noolite_send@noo_send_format,w
  2574  0231  00D3               	movwf	noolite_send@temp_send
  2575  0232  3003               	movlw	3
  2576  0233  05D3               	andwf	noolite_send@temp_send,f
  2577                           
  2578                           ;noolite.c: 210: if (temp_send == 1) {
  2579  0234  0B53               	decfsz	noolite_send@temp_send,w
  2580  0235  2A3D               	goto	l1759
  2581                           
  2582                           ;noolite.c: 212: noo_send_buffer[2] = data[0];
  2583  0236  0872               	movf	noolite_send@data,w
  2584  0237  0086               	movwf	6
  2585  0238  0187               	clrf	7
  2586  0239  0801               	movf	1,w
  2587  023A  00C5               	movwf	noolite_send@noo_send_buffer+2
  2588                           
  2589                           ;noolite.c: 213: endpos++;
  2590  023B  0AD4               	incf	noolite_send@endpos,f
  2591                           
  2592                           ;noolite.c: 214: } else if (temp_send == 3) {
  2593  023C  2A54               	goto	l1765
  2594  023D                     l1759:	
  2595  023D  3003               	movlw	3
  2596  023E  0653               	xorwf	noolite_send@temp_send,w
  2597  023F  1D03               	btfss	3,2
  2598  0240  2A54               	goto	l1765
  2599                           
  2600                           ;noolite.c: 219: noo_send_buffer[2] = data[0];
  2601  0241  0872               	movf	noolite_send@data,w
  2602  0242  0086               	movwf	6
  2603  0243  0187               	clrf	7
  2604  0244  0801               	movf	1,w
  2605  0245  00C5               	movwf	noolite_send@noo_send_buffer+2
  2606                           
  2607                           ;noolite.c: 220: noo_send_buffer[3] = data[1];
  2608  0246  0872               	movf	noolite_send@data,w
  2609  0247  0086               	movwf	6
  2610  0248  3F41               	moviw [1]fsr1
  2611  0249  00C6               	movwf	noolite_send@noo_send_buffer+3
  2612                           
  2613                           ;noolite.c: 221: noo_send_buffer[4] = data[2];
  2614  024A  0872               	movf	noolite_send@data,w
  2615  024B  0086               	movwf	6
  2616  024C  3F42               	moviw [2]fsr1
  2617  024D  00C7               	movwf	noolite_send@noo_send_buffer+4
  2618                           
  2619                           ;noolite.c: 222: noo_send_buffer[5] = data[3];
  2620  024E  0872               	movf	noolite_send@data,w
  2621  024F  0086               	movwf	6
  2622  0250  3F43               	moviw [3]fsr1
  2623  0251  00C8               	movwf	noolite_send@noo_send_buffer+5
  2624                           
  2625                           ;noolite.c: 223: endpos += 4;
  2626  0252  3004               	movlw	4
  2627  0253  07D4               	addwf	noolite_send@endpos,f
  2628  0254                     l1765:	
  2629                           
  2630                           ;noolite.c: 224: }
  2631                           ;noolite.c: 225: if (noo_address_type != 0) {
  2632  0254  087B               	movf	_noo_address_type,w
  2633  0255  1903               	btfsc	3,2
  2634  0256  2ABE               	goto	l1781
  2635                           
  2636                           ;noolite.c: 226: noo_send_format = noo_send_format | 0x10;
  2637  0257  1671               	bsf	noolite_send@noo_send_format,4
  2638                           
  2639                           ;noolite.c: 227: noo_send_buffer[endpos] = (unsigned char) (startaddress + chn);
  2640  0258  0854               	movf	noolite_send@endpos,w
  2641  0259  3E43               	addlw	(low (noolite_send@noo_send_buffer| 0))& (0+255)
  2642  025A  0086               	movwf	6
  2643  025B  0187               	clrf	7
  2644  025C  0851               	movf	noolite_send@chn,w
  2645  025D  0734               	addwf	_startaddress,w
  2646  025E  0081               	movwf	1
  2647                           
  2648                           ;noolite.c: 228: endpos++;
  2649  025F  0AD4               	incf	noolite_send@endpos,f
  2650                           
  2651                           ;noolite.c: 229: noo_send_buffer[endpos] = (unsigned char) ((startaddress + chn) >> 8);
  2652  0260  0854               	movf	noolite_send@endpos,w
  2653  0261  3E43               	addlw	(low (noolite_send@noo_send_buffer| 0))& (0+255)
  2654  0262  0086               	movwf	6
  2655  0263  0834               	movf	_startaddress,w
  2656  0264  00F3               	movwf	??_noolite_send
  2657  0265  0835               	movf	_startaddress+1,w
  2658  0266  00F4               	movwf	??_noolite_send+1
  2659  0267  0836               	movf	_startaddress+2,w
  2660  0268  00F5               	movwf	??_noolite_send+2
  2661  0269  0837               	movf	_startaddress+3,w
  2662  026A  00F6               	movwf	??_noolite_send+3
  2663  026B  0851               	movf	noolite_send@chn,w
  2664  026C  00F7               	movwf	??_noolite_send+4
  2665  026D  01F8               	clrf	??_noolite_send+5
  2666  026E  01F9               	clrf	??_noolite_send+6
  2667  026F  01FA               	clrf	??_noolite_send+7
  2668  0270  07F3               	addwf	??_noolite_send,f
  2669  0271  0878               	movf	??_noolite_send+5,w
  2670  0272  3DF4               	addwfc	??_noolite_send+1,f
  2671  0273  0879               	movf	??_noolite_send+6,w
  2672  0274  3DF5               	addwfc	??_noolite_send+2,f
  2673  0275  087A               	movf	??_noolite_send+7,w
  2674  0276  3DF6               	addwfc	??_noolite_send+3,f
  2675  0277  0874               	movf	??_noolite_send+1,w
  2676  0278  00F3               	movwf	??_noolite_send
  2677  0279  0875               	movf	??_noolite_send+2,w
  2678  027A  00F4               	movwf	??_noolite_send+1
  2679  027B  0876               	movf	??_noolite_send+3,w
  2680  027C  00F5               	movwf	??_noolite_send+2
  2681  027D  01F6               	clrf	??_noolite_send+3
  2682  027E  0873               	movf	??_noolite_send,w
  2683  027F  0081               	movwf	1
  2684                           
  2685                           ;noolite.c: 230: endpos++;
  2686  0280  0AD4               	incf	noolite_send@endpos,f
  2687                           
  2688                           ;noolite.c: 231: noo_send_buffer[endpos] = (unsigned char) ((startaddress + chn) >> 16);
  2689  0281  0854               	movf	noolite_send@endpos,w
  2690  0282  3E43               	addlw	(low (noolite_send@noo_send_buffer| 0))& (0+255)
  2691  0283  0086               	movwf	6
  2692  0284  0834               	movf	_startaddress,w
  2693  0285  00F3               	movwf	??_noolite_send
  2694  0286  0835               	movf	_startaddress+1,w
  2695  0287  00F4               	movwf	??_noolite_send+1
  2696  0288  0836               	movf	_startaddress+2,w
  2697  0289  00F5               	movwf	??_noolite_send+2
  2698  028A  0837               	movf	_startaddress+3,w
  2699  028B  00F6               	movwf	??_noolite_send+3
  2700  028C  0851               	movf	noolite_send@chn,w
  2701  028D  00F7               	movwf	??_noolite_send+4
  2702  028E  01F8               	clrf	??_noolite_send+5
  2703  028F  01F9               	clrf	??_noolite_send+6
  2704  0290  01FA               	clrf	??_noolite_send+7
  2705  0291  07F3               	addwf	??_noolite_send,f
  2706  0292  0878               	movf	??_noolite_send+5,w
  2707  0293  3DF4               	addwfc	??_noolite_send+1,f
  2708  0294  0879               	movf	??_noolite_send+6,w
  2709  0295  3DF5               	addwfc	??_noolite_send+2,f
  2710  0296  087A               	movf	??_noolite_send+7,w
  2711  0297  3DF6               	addwfc	??_noolite_send+3,f
  2712  0298  0875               	movf	??_noolite_send+2,w
  2713  0299  00F3               	movwf	??_noolite_send
  2714  029A  0876               	movf	??_noolite_send+3,w
  2715  029B  00F4               	movwf	??_noolite_send+1
  2716  029C  01F5               	clrf	??_noolite_send+2
  2717  029D  01F6               	clrf	??_noolite_send+3
  2718  029E  0873               	movf	??_noolite_send,w
  2719  029F  0081               	movwf	1
  2720                           
  2721                           ;noolite.c: 232: endpos++;
  2722  02A0  0AD4               	incf	noolite_send@endpos,f
  2723                           
  2724                           ;noolite.c: 233: noo_send_buffer[endpos] = (unsigned char) ((startaddress + chn) >> 24);
  2725  02A1  0854               	movf	noolite_send@endpos,w
  2726  02A2  3E43               	addlw	(low (noolite_send@noo_send_buffer| 0))& (0+255)
  2727  02A3  0086               	movwf	6
  2728  02A4  0834               	movf	_startaddress,w
  2729  02A5  00F3               	movwf	??_noolite_send
  2730  02A6  0835               	movf	_startaddress+1,w
  2731  02A7  00F4               	movwf	??_noolite_send+1
  2732  02A8  0836               	movf	_startaddress+2,w
  2733  02A9  00F5               	movwf	??_noolite_send+2
  2734  02AA  0837               	movf	_startaddress+3,w
  2735  02AB  00F6               	movwf	??_noolite_send+3
  2736  02AC  0851               	movf	noolite_send@chn,w
  2737  02AD  00F7               	movwf	??_noolite_send+4
  2738  02AE  01F8               	clrf	??_noolite_send+5
  2739  02AF  01F9               	clrf	??_noolite_send+6
  2740  02B0  01FA               	clrf	??_noolite_send+7
  2741  02B1  07F3               	addwf	??_noolite_send,f
  2742  02B2  0878               	movf	??_noolite_send+5,w
  2743  02B3  3DF4               	addwfc	??_noolite_send+1,f
  2744  02B4  0879               	movf	??_noolite_send+6,w
  2745  02B5  3DF5               	addwfc	??_noolite_send+2,f
  2746  02B6  087A               	movf	??_noolite_send+7,w
  2747  02B7  3DF6               	addwfc	??_noolite_send+3,f
  2748  02B8  0876               	movf	??_noolite_send+3,w
  2749  02B9  00F3               	movwf	??_noolite_send
  2750  02BA  01F4               	clrf	??_noolite_send+1
  2751  02BB  01F5               	clrf	??_noolite_send+2
  2752  02BC  01F6               	clrf	??_noolite_send+3
  2753  02BD  2AE5               	goto	L9
  2754  02BE                     l1781:	
  2755                           ;noolite.c: 235: } else {
  2756                           
  2757                           ;noolite.c: 234: endpos++;
  2758                           
  2759                           
  2760                           ;noolite.c: 236: noo_send_buffer[endpos] = (unsigned char) (startaddress + chn);
  2761  02BE  0854               	movf	noolite_send@endpos,w
  2762  02BF  3E43               	addlw	(low (noolite_send@noo_send_buffer| 0))& (0+255)
  2763  02C0  0086               	movwf	6
  2764  02C1  0187               	clrf	7
  2765  02C2  0851               	movf	noolite_send@chn,w
  2766  02C3  0734               	addwf	_startaddress,w
  2767  02C4  0081               	movwf	1
  2768                           
  2769                           ;noolite.c: 237: endpos++;
  2770  02C5  0AD4               	incf	noolite_send@endpos,f
  2771                           
  2772                           ;noolite.c: 238: noo_send_buffer[endpos] = (unsigned char) ((startaddress + chn) >> 8);
  2773  02C6  0854               	movf	noolite_send@endpos,w
  2774  02C7  3E43               	addlw	(low (noolite_send@noo_send_buffer| 0))& (0+255)
  2775  02C8  0086               	movwf	6
  2776  02C9  0834               	movf	_startaddress,w
  2777  02CA  00F3               	movwf	??_noolite_send
  2778  02CB  0835               	movf	_startaddress+1,w
  2779  02CC  00F4               	movwf	??_noolite_send+1
  2780  02CD  0836               	movf	_startaddress+2,w
  2781  02CE  00F5               	movwf	??_noolite_send+2
  2782  02CF  0837               	movf	_startaddress+3,w
  2783  02D0  00F6               	movwf	??_noolite_send+3
  2784  02D1  0851               	movf	noolite_send@chn,w
  2785  02D2  00F7               	movwf	??_noolite_send+4
  2786  02D3  01F8               	clrf	??_noolite_send+5
  2787  02D4  01F9               	clrf	??_noolite_send+6
  2788  02D5  01FA               	clrf	??_noolite_send+7
  2789  02D6  07F3               	addwf	??_noolite_send,f
  2790  02D7  0878               	movf	??_noolite_send+5,w
  2791  02D8  3DF4               	addwfc	??_noolite_send+1,f
  2792  02D9  0879               	movf	??_noolite_send+6,w
  2793  02DA  3DF5               	addwfc	??_noolite_send+2,f
  2794  02DB  087A               	movf	??_noolite_send+7,w
  2795  02DC  3DF6               	addwfc	??_noolite_send+3,f
  2796  02DD  0874               	movf	??_noolite_send+1,w
  2797  02DE  00F3               	movwf	??_noolite_send
  2798  02DF  0875               	movf	??_noolite_send+2,w
  2799  02E0  00F4               	movwf	??_noolite_send+1
  2800  02E1  0876               	movf	??_noolite_send+3,w
  2801  02E2  00F5               	movwf	??_noolite_send+2
  2802  02E3  01F6               	clrf	??_noolite_send+3
  2803  02E4  0873               	movf	??_noolite_send,w
  2804  02E5                     L9:	
  2805  02E5  0081               	movwf	1
  2806                           
  2807                           ;noolite.c: 239: endpos++;
  2808  02E6  0AD4               	incf	noolite_send@endpos,f
  2809                           
  2810                           ;noolite.c: 240: }
  2811                           ;noolite.c: 241: noo_send_buffer[endpos] = noo_send_format;
  2812  02E7  0854               	movf	noolite_send@endpos,w
  2813  02E8  3E43               	addlw	(low (noolite_send@noo_send_buffer| 0))& (0+255)
  2814  02E9  0086               	movwf	6
  2815  02EA  0187               	clrf	7
  2816  02EB  0871               	movf	noolite_send@noo_send_format,w
  2817  02EC  0081               	movwf	1
  2818                           
  2819                           ;noolite.c: 242: endpos++;
  2820  02ED  0AD4               	incf	noolite_send@endpos,f
  2821                           
  2822                           ;noolite.c: 243: temp_send = 0;
  2823  02EE  01D3               	clrf	noolite_send@temp_send
  2824                           
  2825                           ;noolite.c: 244: countbit = (unsigned char) (endpos * 8);
  2826  02EF  0854               	movf	noolite_send@endpos,w
  2827  02F0  0709               	addwf	9,w
  2828  02F1  0709               	addwf	9,w
  2829  02F2  0709               	addwf	9,w
  2830  02F3  00D0               	movwf	noolite_send@countbit
  2831                           
  2832                           ;noolite.c: 245: countsend = startpos + 1;
  2833  02F4  084F               	movf	noolite_send@startpos,w
  2834  02F5  3E01               	addlw	1
  2835  02F6  00D2               	movwf	noolite_send@countsend
  2836  02F7                     l1819:	
  2837                           ;noolite.c: 246: while (countsend < countbit) {
  2838                           
  2839  02F7  0020               	movlb	0	; select bank0
  2840  02F8  0850               	movf	noolite_send@countbit,w
  2841  02F9  0252               	subwf	noolite_send@countsend,w
  2842  02FA  1803               	btfsc	3,0
  2843  02FB  2B21               	goto	l1821
  2844                           
  2845                           ;noolite.c: 247: if (((noo_send_buffer[(countsend / 8)] & (1<<(countsend % 8))) != 0)) {
  2846  02FC  0852               	movf	noolite_send@countsend,w
  2847  02FD  00F3               	movwf	??_noolite_send
  2848  02FE  36F3               	lsrf	??_noolite_send,f
  2849  02FF  36F3               	lsrf	??_noolite_send,f
  2850  0300  36F3               	lsrf	??_noolite_send,f
  2851  0301  0873               	movf	??_noolite_send,w
  2852  0302  3E43               	addlw	(low (noolite_send@noo_send_buffer| 0))& (0+255)
  2853  0303  0086               	movwf	6
  2854  0304  3001               	movlw	1
  2855  0305  0187               	clrf	7
  2856  0306  00F4               	movwf	??_noolite_send+1
  2857  0307  0852               	movf	noolite_send@countsend,w
  2858  0308  3907               	andlw	7
  2859  0309  0A89               	incf	9,f
  2860  030A  2B0C               	goto	u1164
  2861  030B                     u1165:	
  2862  030B  35F4               	lslf	??_noolite_send+1,f
  2863  030C                     u1164:	
  2864  030C  0B89               	decfsz	9,f
  2865  030D  2B0B               	goto	u1165
  2866  030E  0874               	movf	??_noolite_send+1,w
  2867  030F  0501               	andwf	1,w
  2868  0310  1903               	btfsc	3,2
  2869  0311  2B14               	goto	l1801
  2870                           
  2871                           ;noolite.c: 248: temp_send = temp_send^0x01;
  2872  0312  3001               	movlw	1
  2873  0313  06D3               	xorwf	noolite_send@temp_send,f
  2874  0314                     l1801:	
  2875                           
  2876                           ;noolite.c: 249: }
  2877                           ;noolite.c: 250: tx_status &= (~(1<<4));
  2878  0314  123E               	bcf	_tx_status,4
  2879                           
  2880                           ;noolite.c: 251: if (((temp_send & (1<<0)) != 0)) {
  2881  0315  1C53               	btfss	noolite_send@temp_send,0
  2882  0316  2B1A               	goto	l1809
  2883                           
  2884                           ;noolite.c: 252: temp_send = temp_send^0x18;
  2885  0317  3018               	movlw	24
  2886  0318  06D3               	xorwf	noolite_send@temp_send,f
  2887                           
  2888                           ;noolite.c: 253: tx_status |= (1<<4);
  2889  0319  163E               	bsf	_tx_status,4
  2890  031A                     l1809:	
  2891                           
  2892                           ;noolite.c: 254: }
  2893                           ;noolite.c: 255: temp_send = temp_send >> 1;
  2894  031A  36D3               	lsrf	noolite_send@temp_send,f
  2895                           
  2896                           ;noolite.c: 256: temp_send &= (~(1<<7));
  2897  031B  13D3               	bcf	noolite_send@temp_send,7
  2898                           
  2899                           ;noolite.c: 257: if (((tx_status & (1<<4)) != 0)) {
  2900  031C  1A3E               	btfsc	_tx_status,4
  2901                           
  2902                           ;noolite.c: 258: temp_send |= (1<<7);
  2903  031D  17D3               	bsf	noolite_send@temp_send,7
  2904                           
  2905                           ;noolite.c: 259: }
  2906                           ;noolite.c: 260: countsend++;
  2907  031E  0AD2               	incf	noolite_send@countsend,f
  2908  031F  0064               	clrwdt	;# 
  2909  0320  2AF7               	goto	l1819
  2910  0321                     l1821:	
  2911                           
  2912                           ;noolite.c: 262: }
  2913                           ;noolite.c: 263: noo_send_buffer[endpos] = temp_send;
  2914  0321  0854               	movf	noolite_send@endpos,w
  2915  0322  3E43               	addlw	(low (noolite_send@noo_send_buffer| 0))& (0+255)
  2916  0323  0086               	movwf	6
  2917  0324  0187               	clrf	7
  2918  0325  0853               	movf	noolite_send@temp_send,w
  2919  0326  0081               	movwf	1
  2920  0327  30C0               	movlw	192
  2921                           
  2922                           ;noolite.c: 264: endpos++;
  2923  0328  0AD4               	incf	noolite_send@endpos,f
  2924                           
  2925                           ;noolite.c: 265: OPTION_REG &= 0b11000000; OPTION_REG |= 0b00000011;
  2926  0329  0021               	movlb	1	; select bank1
  2927  032A  0595               	andwf	21,f	;volatile
  2928  032B  3003               	movlw	3
  2929  032C  0495               	iorwf	21,f	;volatile
  2930                           
  2931                           ;noolite.c: 266: temp_send = 3;
  2932  032D  0020               	movlb	0	; select bank0
  2933  032E  00D3               	movwf	noolite_send@temp_send
  2934  032F  3026               	movlw	38
  2935                           
  2936                           ;noolite.c: 267: tx_status &= (~(1<<2));
  2937  0330  113E               	bcf	_tx_status,2
  2938                           
  2939                           ;noolite.c: 268: tx_status &= (~(1<<3));
  2940  0331  11BE               	bcf	_tx_status,3
  2941                           
  2942                           ;noolite.c: 269: tx_status |= (1<<0);
  2943  0332  143E               	bsf	_tx_status,0
  2944                           
  2945                           ;noolite.c: 270: tx_status |= (1<<5);
  2946  0333  16BE               	bsf	_tx_status,5
  2947                           
  2948                           ;noolite.c: 271: countsend = 0;
  2949  0334  01D2               	clrf	noolite_send@countsend
  2950                           
  2951                           ;noolite.c: 272: countbit = 38;
  2952  0335  00D0               	movwf	noolite_send@countbit
  2953  0336  0064               	clrwdt	;# 
  2954                           
  2955                           ;noolite.c: 274: LATCbits.LATC3 = 1;
  2956  0337  0022               	movlb	2	; select bank2
  2957  0338  158E               	bsf	14,3	;volatile
  2958                           
  2959                           ;noolite.c: 275: _delay((unsigned long)((15)*(8000000/4000.0)));
  2960  0339  3027               	movlw	39
  2961  033A  00F3               	movwf	??_noolite_send
  2962  033B  30F5               	movlw	245
  2963  033C                     u2087:	
  2964  033C  0B89               	decfsz	9,f
  2965  033D  2B3C               	goto	u2087
  2966  033E  0BF3               	decfsz	??_noolite_send,f
  2967  033F  2B3C               	goto	u2087
  2968  0340  0000               	nop
  2969                           
  2970                           ;noolite.c: 276: LATCbits.LATC3 = 0;
  2971  0341  0022               	movlb	2	; select bank2
  2972  0342  118E               	bcf	14,3	;volatile
  2973                           
  2974                           ;noolite.c: 277: TMR0 = 196;
  2975  0343  30C4               	movlw	196
  2976  0344  0020               	movlb	0	; select bank0
  2977  0345  0095               	movwf	21	;volatile
  2978                           
  2979                           ;noolite.c: 278: TMR0IF = 0;
  2980  0346  110B               	bcf	11,2	;volatile
  2981                           
  2982                           ;noolite.c: 279: TMR0IE = 0;
  2983  0347  128B               	bcf	11,5	;volatile
  2984  0348                     l305:	
  2985                           ;noolite.c: 280: while (((tx_status & (1<<3)) == 0)) {
  2986                           
  2987  0348  19BE               	btfsc	_tx_status,3
  2988  0349  2BA2               	goto	l316
  2989                           
  2990                           ;noolite.c: 281: if (TMR0IF) {
  2991  034A  1D0B               	btfss	11,2	;volatile
  2992  034B  2B48               	goto	l305
  2993                           
  2994                           ;noolite.c: 282: __nop();
  2995  034C  0000               	nop
  2996                           
  2997                           ;noolite.c: 283: if (countsend < countbit) {
  2998  034D  0020               	movlb	0	; select bank0
  2999  034E  0850               	movf	noolite_send@countbit,w
  3000  034F  0252               	subwf	noolite_send@countsend,w
  3001  0350  1803               	skipnc
  3002  0351  2B69               	goto	l308
  3003                           
  3004                           ;noolite.c: 284: if (((tx_status & (1<<2)) == 0)) {
  3005  0352  193E               	btfsc	_tx_status,2
  3006  0353  2B60               	goto	l1869
  3007                           
  3008                           ;noolite.c: 285: if (((tx_status & (1<<0)) == 0)) {
  3009  0354  183E               	btfsc	_tx_status,0
  3010  0355  2B59               	goto	l310
  3011                           
  3012                           ;noolite.c: 286: LATAbits.LATA5 = 1;
  3013  0356  0022               	movlb	2	; select bank2
  3014  0357  168C               	bsf	12,5	;volatile
  3015                           
  3016                           ;noolite.c: 287: } else {
  3017  0358  2B5B               	goto	l1865
  3018  0359                     l310:	
  3019                           
  3020                           ;noolite.c: 288: LATAbits.LATA5 = 0;
  3021  0359  0022               	movlb	2	; select bank2
  3022  035A  128C               	bcf	12,5	;volatile
  3023  035B                     l1865:	
  3024                           
  3025                           ;noolite.c: 289: }
  3026                           ;noolite.c: 290: TMR0 = 196;
  3027  035B  30C4               	movlw	196
  3028  035C  0020               	movlb	0	; select bank0
  3029  035D  0095               	movwf	21	;volatile
  3030                           
  3031                           ;noolite.c: 291: tx_status |= (1<<2);
  3032  035E  153E               	bsf	_tx_status,2
  3033                           
  3034                           ;noolite.c: 292: } else {
  3035  035F  2B85               	goto	l313
  3036  0360                     l1869:	
  3037                           
  3038                           ;noolite.c: 293: LATA ^= (1<<5);
  3039  0360  3020               	movlw	32
  3040  0361  0022               	movlb	2	; select bank2
  3041  0362  068C               	xorwf	12,f	;volatile
  3042                           
  3043                           ;noolite.c: 294: TMR0 = 196;
  3044  0363  30C4               	movlw	196
  3045  0364  0020               	movlb	0	; select bank0
  3046  0365  0095               	movwf	21	;volatile
  3047                           
  3048                           ;noolite.c: 295: tx_status &= (~(1<<2));
  3049  0366  113E               	bcf	_tx_status,2
  3050                           
  3051                           ;noolite.c: 296: countsend++;
  3052  0367  0AD2               	incf	noolite_send@countsend,f
  3053  0368  2B85               	goto	l313
  3054  0369                     l308:	
  3055                           
  3056                           ;noolite.c: 299: LATAbits.LATA5 = 0;
  3057  0369  0022               	movlb	2	; select bank2
  3058  036A  128C               	bcf	12,5	;volatile
  3059                           
  3060                           ;noolite.c: 300: OPTION_REG &= 0b11000000; OPTION_REG |= 0b00000011;
  3061  036B  30C0               	movlw	192
  3062  036C  0021               	movlb	1	; select bank1
  3063  036D  0595               	andwf	21,f	;volatile
  3064  036E  3003               	movlw	3
  3065  036F  0495               	iorwf	21,f	;volatile
  3066                           
  3067                           ;noolite.c: 301: TMR0 = 67;
  3068  0370  3043               	movlw	67
  3069  0371  0020               	movlb	0	; select bank0
  3070  0372  0095               	movwf	21	;volatile
  3071  0373  0064               	clrwdt	;# 
  3072                           
  3073                           ;noolite.c: 303: tx_status &= (~(1<<5));
  3074  0374  0020               	movlb	0	; select bank0
  3075  0375  12BE               	bcf	_tx_status,5
  3076                           
  3077                           ;noolite.c: 304: countsend = startpos;
  3078  0376  084F               	movf	noolite_send@startpos,w
  3079  0377  00D2               	movwf	noolite_send@countsend
  3080                           
  3081                           ;noolite.c: 305: countbit = endpos * 8;
  3082  0378  0854               	movf	noolite_send@endpos,w
  3083  0379  0709               	addwf	9,w
  3084  037A  0709               	addwf	9,w
  3085  037B  0709               	addwf	9,w
  3086  037C  00D0               	movwf	noolite_send@countbit
  3087                           
  3088                           ;noolite.c: 306: if (temp_send != 0) {
  3089  037D  0853               	movf	noolite_send@temp_send,w
  3090  037E  1903               	btfsc	3,2
  3091  037F  2B82               	goto	l1885
  3092                           
  3093                           ;noolite.c: 307: temp_send--;
  3094  0380  03D3               	decf	noolite_send@temp_send,f
  3095                           
  3096                           ;noolite.c: 308: } else {
  3097  0381  2B85               	goto	l313
  3098  0382                     l1885:	
  3099                           
  3100                           ;noolite.c: 309: TMR0 = 0;
  3101  0382  0195               	clrf	21	;volatile
  3102                           
  3103                           ;noolite.c: 310: tx_status |= (1<<3);
  3104  0383  15BE               	bsf	_tx_status,3
  3105                           
  3106                           ;noolite.c: 311: break;
  3107  0384  2BA2               	goto	l316
  3108  0385                     l313:	
  3109                           
  3110                           ;noolite.c: 312: }
  3111                           ;noolite.c: 313: }
  3112                           ;noolite.c: 314: if (((tx_status & (1<<5)) == 0)) {
  3113  0385  1ABE               	btfsc	_tx_status,5
  3114  0386  2BA0               	goto	l317
  3115                           
  3116                           ;noolite.c: 315: if (((noo_send_buffer[(countsend / 8)] & (1<<(countsend % 8))) != 0)) {
  3117  0387  0852               	movf	noolite_send@countsend,w
  3118  0388  00F3               	movwf	??_noolite_send
  3119  0389  36F3               	lsrf	??_noolite_send,f
  3120  038A  36F3               	lsrf	??_noolite_send,f
  3121  038B  36F3               	lsrf	??_noolite_send,f
  3122  038C  0873               	movf	??_noolite_send,w
  3123  038D  3E43               	addlw	(low (noolite_send@noo_send_buffer| 0))& (0+255)
  3124  038E  0086               	movwf	6
  3125  038F  3001               	movlw	1
  3126  0390  0187               	clrf	7
  3127  0391  00F4               	movwf	??_noolite_send+1
  3128  0392  0852               	movf	noolite_send@countsend,w
  3129  0393  3907               	andlw	7
  3130  0394  0A89               	incf	9,f
  3131  0395  2B97               	goto	u1274
  3132  0396                     u1275:	
  3133  0396  35F4               	lslf	??_noolite_send+1,f
  3134  0397                     u1274:	
  3135  0397  0B89               	decfsz	9,f
  3136  0398  2B96               	goto	u1275
  3137  0399  0874               	movf	??_noolite_send+1,w
  3138  039A  0501               	andwf	1,w
  3139  039B  1903               	btfsc	3,2
  3140  039C  2B9F               	goto	l318
  3141                           
  3142                           ;noolite.c: 316: tx_status |= (1<<0);
  3143  039D  143E               	bsf	_tx_status,0
  3144                           
  3145                           ;noolite.c: 317: } else {
  3146  039E  2BA0               	goto	l317
  3147  039F                     l318:	
  3148                           
  3149                           ;noolite.c: 318: tx_status &= (~(1<<0));
  3150  039F  103E               	bcf	_tx_status,0
  3151  03A0                     l317:	
  3152                           
  3153                           ;noolite.c: 319: }
  3154                           ;noolite.c: 320: }
  3155                           ;noolite.c: 321: TMR0IF = 0;
  3156  03A0  110B               	bcf	11,2	;volatile
  3157  03A1  2B48               	goto	l305
  3158  03A2                     l316:	
  3159                           
  3160                           ;noolite.c: 322: }
  3161                           ;noolite.c: 323: }
  3162                           ;noolite.c: 324: TMR0IF = 0;
  3163  03A2  110B               	bcf	11,2	;volatile
  3164                           
  3165                           ;noolite.c: 325: LATAbits.LATA5 = 0;
  3166  03A3  0022               	movlb	2	; select bank2
  3167  03A4  128C               	bcf	12,5	;volatile
  3168  03A5  0008               	return
  3169  03A6                     __end_of_noolite_send:	
  3170                           
  3171                           	psect	text2
  3172  0178                     __ptext2:	
  3173 ;; *************** function _RF_Init *****************
  3174 ;; Defined at:
  3175 ;;		line 25 in file "noolite.c"
  3176 ;; Parameters:    Size  Location     Type
  3177 ;;		None
  3178 ;; Auto vars:     Size  Location     Type
  3179 ;;		None
  3180 ;; Return value:  Size  Location     Type
  3181 ;;                  1    wreg      void 
  3182 ;; Registers used:
  3183 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3184 ;; Tracked objects:
  3185 ;;		On entry : B1F/1
  3186 ;;		On exit  : 0/0
  3187 ;;		Unchanged: 0/0
  3188 ;; Data sizes:     COMMON   BANK0   BANK1
  3189 ;;      Params:         0       0       0
  3190 ;;      Locals:         0       0       0
  3191 ;;      Temps:          7       0       0
  3192 ;;      Totals:         7       0       0
  3193 ;;Total ram usage:        7 bytes
  3194 ;; Hardware stack levels used:    1
  3195 ;; This function calls:
  3196 ;;		Nothing
  3197 ;; This function is called by:
  3198 ;;		_main
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201                           
  3202                           
  3203                           ;psect for function _RF_Init
  3204  0178                     _RF_Init:	
  3205                           
  3206                           ;noolite.c: 27: startaddress = 0;
  3207                           
  3208                           ;incstack = 0
  3209                           ; Regs used in _RF_Init: [wreg-fsr0h+status,2+status,0+pclath]
  3210  0178  0020               	movlb	0	; select bank0
  3211  0179  30F3               	movlw	243
  3212  017A  01B4               	clrf	_startaddress
  3213  017B  01B5               	clrf	_startaddress+1
  3214  017C  01B6               	clrf	_startaddress+2
  3215  017D  01B7               	clrf	_startaddress+3
  3216                           
  3217                           ;noolite.c: 28: startaddress |= ((unsigned int) system_settings[5]) << 8;
  3218  017E  0084               	movwf	4
  3219  017F  3087               	movlw	135
  3220  0180  0085               	movwf	5
  3221  0181  0800               	movf	0,w	;code access
  3222  0182  00F0               	movwf	??_RF_Init
  3223  0183  01F1               	clrf	??_RF_Init+1
  3224  0184  00F1               	movwf	??_RF_Init+1
  3225  0185  01F0               	clrf	??_RF_Init
  3226  0186  0870               	movf	??_RF_Init,w
  3227  0187  00F3               	movwf	??_RF_Init+3
  3228  0188  0871               	movf	??_RF_Init+1,w
  3229  0189  00F4               	movwf	??_RF_Init+4
  3230  018A  01F5               	clrf	??_RF_Init+5
  3231  018B  01F6               	clrf	??_RF_Init+6
  3232  018C  0873               	movf	??_RF_Init+3,w
  3233  018D  04B4               	iorwf	_startaddress,f
  3234  018E  0874               	movf	??_RF_Init+4,w
  3235  018F  04B5               	iorwf	_startaddress+1,f
  3236  0190  0875               	movf	??_RF_Init+5,w
  3237  0191  04B6               	iorwf	_startaddress+2,f
  3238  0192  0876               	movf	??_RF_Init+6,w
  3239  0193  04B7               	iorwf	_startaddress+3,f
  3240                           
  3241                           ;noolite.c: 29: startaddress |= system_settings[4];
  3242  0194  30F2               	movlw	242
  3243  0195  0084               	movwf	4
  3244  0196  0800               	movf	0,w	;code access
  3245  0197  00F0               	movwf	??_RF_Init
  3246  0198  01F1               	clrf	??_RF_Init+1
  3247  0199  01F2               	clrf	??_RF_Init+2
  3248  019A  01F3               	clrf	??_RF_Init+3
  3249  019B  04B4               	iorwf	_startaddress,f
  3250  019C  0871               	movf	??_RF_Init+1,w
  3251  019D  04B5               	iorwf	_startaddress+1,f
  3252  019E  0872               	movf	??_RF_Init+2,w
  3253  019F  04B6               	iorwf	_startaddress+2,f
  3254  01A0  0873               	movf	??_RF_Init+3,w
  3255  01A1  04B7               	iorwf	_startaddress+3,f
  3256                           
  3257                           ;noolite.c: 30: if ((startaddress != 0) && (startaddress != 0xFFFF)) {
  3258  01A2  0837               	movf	_startaddress+3,w
  3259  01A3  0436               	iorwf	_startaddress+2,w
  3260  01A4  0435               	iorwf	_startaddress+1,w
  3261  01A5  0434               	iorwf	_startaddress,w
  3262  01A6  1903               	skipnz
  3263  01A7  29B1               	goto	l283
  3264  01A8  0F34               	incfsz	_startaddress,w
  3265  01A9  29AF               	goto	l1723
  3266  01AA  0A35               	incf	_startaddress+1,w
  3267  01AB  0436               	iorwf	_startaddress+2,w
  3268  01AC  0437               	iorwf	_startaddress+3,w
  3269  01AD  1903               	btfsc	3,2
  3270  01AE  29B1               	goto	l283
  3271  01AF                     l1723:	
  3272                           
  3273                           ;noolite.c: 31: noo_address_type = 0;
  3274  01AF  01FB               	clrf	_noo_address_type
  3275                           
  3276                           ;noolite.c: 32: } else {
  3277  01B0  2A01               	goto	l284
  3278  01B1                     l283:	
  3279  01B1  30F9               	movlw	249
  3280                           
  3281                           ;noolite.c: 33: startaddress = 0;
  3282  01B2  01B4               	clrf	_startaddress
  3283  01B3  01B5               	clrf	_startaddress+1
  3284  01B4  01B6               	clrf	_startaddress+2
  3285  01B5  01B7               	clrf	_startaddress+3
  3286                           
  3287                           ;noolite.c: 34: startaddress |= ((unsigned long) system_settings[11]) << 24;
  3288  01B6  0084               	movwf	4
  3289  01B7  3087               	movlw	135
  3290  01B8  0085               	movwf	5
  3291  01B9  0800               	movf	0,w	;code access
  3292  01BA  00F3               	movwf	??_RF_Init+3
  3293  01BB  01F2               	clrf	??_RF_Init+2
  3294  01BC  01F1               	clrf	??_RF_Init+1
  3295  01BD  01F0               	clrf	??_RF_Init
  3296  01BE  0870               	movf	??_RF_Init,w
  3297  01BF  04B4               	iorwf	_startaddress,f
  3298  01C0  0871               	movf	??_RF_Init+1,w
  3299  01C1  04B5               	iorwf	_startaddress+1,f
  3300  01C2  0872               	movf	??_RF_Init+2,w
  3301  01C3  04B6               	iorwf	_startaddress+2,f
  3302  01C4  0873               	movf	??_RF_Init+3,w
  3303  01C5  04B7               	iorwf	_startaddress+3,f
  3304                           
  3305                           ;noolite.c: 35: startaddress |= ((unsigned long) system_settings[10]) << 16;
  3306  01C6  30F8               	movlw	248
  3307  01C7  0084               	movwf	4
  3308  01C8  0800               	movf	0,w	;code access
  3309  01C9  00F0               	movwf	??_RF_Init
  3310  01CA  01F1               	clrf	??_RF_Init+1
  3311  01CB  01F2               	clrf	??_RF_Init+2
  3312  01CC  01F3               	clrf	??_RF_Init+3
  3313  01CD  0871               	movf	??_RF_Init+1,w
  3314  01CE  00F3               	movwf	??_RF_Init+3
  3315  01CF  0870               	movf	??_RF_Init,w
  3316  01D0  00F2               	movwf	??_RF_Init+2
  3317  01D1  01F1               	clrf	??_RF_Init+1
  3318  01D2  01F0               	clrf	??_RF_Init
  3319  01D3  0870               	movf	??_RF_Init,w
  3320  01D4  04B4               	iorwf	_startaddress,f
  3321  01D5  0871               	movf	??_RF_Init+1,w
  3322  01D6  04B5               	iorwf	_startaddress+1,f
  3323  01D7  0872               	movf	??_RF_Init+2,w
  3324  01D8  04B6               	iorwf	_startaddress+2,f
  3325  01D9  0873               	movf	??_RF_Init+3,w
  3326  01DA  04B7               	iorwf	_startaddress+3,f
  3327                           
  3328                           ;noolite.c: 36: startaddress |= ((unsigned long) system_settings[9]) << 8;
  3329  01DB  30F7               	movlw	247
  3330  01DC  0084               	movwf	4
  3331  01DD  0800               	movf	0,w	;code access
  3332  01DE  00F0               	movwf	??_RF_Init
  3333  01DF  01F1               	clrf	??_RF_Init+1
  3334  01E0  01F2               	clrf	??_RF_Init+2
  3335  01E1  01F3               	clrf	??_RF_Init+3
  3336  01E2  0872               	movf	??_RF_Init+2,w
  3337  01E3  00F3               	movwf	??_RF_Init+3
  3338  01E4  0871               	movf	??_RF_Init+1,w
  3339  01E5  00F2               	movwf	??_RF_Init+2
  3340  01E6  0870               	movf	??_RF_Init,w
  3341  01E7  00F1               	movwf	??_RF_Init+1
  3342  01E8  01F0               	clrf	??_RF_Init
  3343  01E9  0870               	movf	??_RF_Init,w
  3344  01EA  04B4               	iorwf	_startaddress,f
  3345  01EB  0871               	movf	??_RF_Init+1,w
  3346  01EC  04B5               	iorwf	_startaddress+1,f
  3347  01ED  0872               	movf	??_RF_Init+2,w
  3348  01EE  04B6               	iorwf	_startaddress+2,f
  3349  01EF  0873               	movf	??_RF_Init+3,w
  3350  01F0  04B7               	iorwf	_startaddress+3,f
  3351                           
  3352                           ;noolite.c: 37: startaddress |= system_settings[8];
  3353  01F1  30F6               	movlw	246
  3354  01F2  0084               	movwf	4
  3355  01F3  0800               	movf	0,w	;code access
  3356  01F4  00F0               	movwf	??_RF_Init
  3357  01F5  01F1               	clrf	??_RF_Init+1
  3358  01F6  01F2               	clrf	??_RF_Init+2
  3359  01F7  01F3               	clrf	??_RF_Init+3
  3360  01F8  04B4               	iorwf	_startaddress,f
  3361  01F9  0871               	movf	??_RF_Init+1,w
  3362  01FA  04B5               	iorwf	_startaddress+1,f
  3363  01FB  0872               	movf	??_RF_Init+2,w
  3364  01FC  04B6               	iorwf	_startaddress+2,f
  3365  01FD  0873               	movf	??_RF_Init+3,w
  3366  01FE  04B7               	iorwf	_startaddress+3,f
  3367                           
  3368                           ;noolite.c: 38: noo_address_type = 1;
  3369  01FF  01FB               	clrf	_noo_address_type
  3370  0200  0AFB               	incf	_noo_address_type,f
  3371  0201                     l284:	
  3372  0201  0064               	clrwdt	;# 
  3373  0202  0008               	return
  3374  0203                     __end_of_RF_Init:	
  3375                           
  3376                           	psect	text3
  3377  00DB                     __ptext3:	
  3378 ;; *************** function _Init_TypeFromFlash *****************
  3379 ;; Defined at:
  3380 ;;		line 231 in file "main.c"
  3381 ;; Parameters:    Size  Location     Type
  3382 ;;		None
  3383 ;; Auto vars:     Size  Location     Type
  3384 ;;		None
  3385 ;; Return value:  Size  Location     Type
  3386 ;;                  1    wreg      unsigned char 
  3387 ;; Registers used:
  3388 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3389 ;; Tracked objects:
  3390 ;;		On entry : 0/2
  3391 ;;		On exit  : 0/0
  3392 ;;		Unchanged: 0/0
  3393 ;; Data sizes:     COMMON   BANK0   BANK1
  3394 ;;      Params:         0       0       0
  3395 ;;      Locals:         0       0       0
  3396 ;;      Temps:          1       0       0
  3397 ;;      Totals:         1       0       0
  3398 ;;Total ram usage:        1 bytes
  3399 ;; Hardware stack levels used:    1
  3400 ;; This function calls:
  3401 ;;		Nothing
  3402 ;; This function is called by:
  3403 ;;		_main
  3404 ;; This function uses a non-reentrant model
  3405 ;;
  3406                           
  3407                           
  3408                           ;psect for function _Init_TypeFromFlash
  3409  00DB                     _Init_TypeFromFlash:	
  3410                           
  3411                           ;main.c: 232: if (((Type[0] >> 8) == 0x5A) && ((Type[0] & 0xFF) < 4)) {
  3412                           
  3413                           ;incstack = 0
  3414                           ; Regs used in _Init_TypeFromFlash: [wreg-fsr0h+status,2+status,0+pclath]
  3415  00DB  30C1               	movlw	193
  3416  00DC  0084               	movwf	4
  3417  00DD  3087               	movlw	135
  3418  00DE  0085               	movwf	5
  3419  00DF  0012               	moviw fsr0++
  3420  00E0  3A5A               	xorlw	90
  3421  00E1  1D03               	btfss	3,2
  3422  00E2  3400               	retlw	0
  3423  00E3  30C0               	movlw	192
  3424  00E4  0084               	movwf	4
  3425  00E5  3087               	movlw	135
  3426  00E6  0085               	movwf	5
  3427  00E7  0800               	movf	0,w	;code access
  3428  00E8  00F0               	movwf	??_Init_TypeFromFlash
  3429  00E9  3004               	movlw	4
  3430  00EA  0270               	subwf	??_Init_TypeFromFlash,w
  3431  00EB  1803               	skipnc
  3432  00EC  3400               	retlw	0
  3433                           
  3434                           ;main.c: 233: return (Type[0] & 0xFF);
  3435  00ED  0800               	movf	0,w	;code access
  3436  00EE  0008               	return
  3437  00EF                     __end_of_Init_TypeFromFlash:	
  3438                           ;main.c: 235: return 0;
  3439                           
  3440                           
  3441                           	psect	text4
  3442  00EF                     __ptext4:	
  3443 ;; *************** function _Init_TxStatusFromFlash *****************
  3444 ;; Defined at:
  3445 ;;		line 239 in file "main.c"
  3446 ;; Parameters:    Size  Location     Type
  3447 ;;		None
  3448 ;; Auto vars:     Size  Location     Type
  3449 ;;  cellNum         1    4[COMMON] unsigned char 
  3450 ;; Return value:  Size  Location     Type
  3451 ;;                  1    wreg      unsigned char 
  3452 ;; Registers used:
  3453 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3454 ;; Tracked objects:
  3455 ;;		On entry : 1F/0
  3456 ;;		On exit  : 1F/0
  3457 ;;		Unchanged: 1F/0
  3458 ;; Data sizes:     COMMON   BANK0   BANK1
  3459 ;;      Params:         0       0       0
  3460 ;;      Locals:         1       0       0
  3461 ;;      Temps:          4       0       0
  3462 ;;      Totals:         5       0       0
  3463 ;;Total ram usage:        5 bytes
  3464 ;; Hardware stack levels used:    1
  3465 ;; This function calls:
  3466 ;;		Nothing
  3467 ;; This function is called by:
  3468 ;;		_main
  3469 ;; This function uses a non-reentrant model
  3470 ;;
  3471                           
  3472                           
  3473                           ;psect for function _Init_TxStatusFromFlash
  3474  00EF                     _Init_TxStatusFromFlash:	
  3475                           
  3476                           ;main.c: 240: for (uint8_t cellNum = 0; cellNum < 8; cellNum++) {
  3477                           
  3478                           ;incstack = 0
  3479                           ; Regs used in _Init_TxStatusFromFlash: [wreg-fsr0h+status,2+status,0+pclath]
  3480  00EF  01F4               	clrf	Init_TxStatusFromFlash@cellNum
  3481  00F0                     l1673:	
  3482                           
  3483                           ;main.c: 241: if (TxStatus[cellNum] == 0xFFFF) {
  3484  00F0  0874               	movf	Init_TxStatusFromFlash@cellNum,w
  3485  00F1  00F0               	movwf	??_Init_TxStatusFromFlash
  3486  00F2  30D0               	movlw	208
  3487  00F3  01F1               	clrf	??_Init_TxStatusFromFlash+1
  3488  00F4  35F0               	lslf	??_Init_TxStatusFromFlash,f
  3489  00F5  0DF1               	rlf	??_Init_TxStatusFromFlash+1,f
  3490  00F6  0770               	addwf	??_Init_TxStatusFromFlash,w
  3491  00F7  0084               	movwf	4
  3492  00F8  3087               	movlw	135
  3493  00F9  3D71               	addwfc	??_Init_TxStatusFromFlash+1,w
  3494  00FA  0085               	movwf	5
  3495  00FB  0012               	moviw fsr0++
  3496  00FC  3AFF               	xorlw	255
  3497  00FD  00F2               	movwf	??_Init_TxStatusFromFlash+2
  3498  00FE  0012               	moviw fsr0++
  3499  00FF  3AFF               	xorlw	255
  3500  0100  04F2               	iorwf	??_Init_TxStatusFromFlash+2,f
  3501  0101  1D03               	btfss	3,2
  3502  0102  293A               	goto	l1695
  3503                           
  3504                           ;main.c: 242: if (cellNum > 0) {
  3505  0103  0874               	movf	Init_TxStatusFromFlash@cellNum,w
  3506  0104  1903               	btfsc	3,2
  3507  0105  3400               	retlw	0
  3508                           
  3509                           ;main.c: 243: if (((TxStatus[cellNum - 1] >> 8) == 0x5A) && ((TxStatus[cellNum - 1] & 0x
      +                          FF) < 3)) {
  3510  0106  0874               	movf	Init_TxStatusFromFlash@cellNum,w
  3511  0107  00F0               	movwf	??_Init_TxStatusFromFlash
  3512  0108  30CE               	movlw	206
  3513  0109  01F1               	clrf	??_Init_TxStatusFromFlash+1
  3514  010A  35F0               	lslf	??_Init_TxStatusFromFlash,f
  3515  010B  0DF1               	rlf	??_Init_TxStatusFromFlash+1,f
  3516  010C  0770               	addwf	??_Init_TxStatusFromFlash,w
  3517  010D  0084               	movwf	4
  3518  010E  3087               	movlw	135
  3519  010F  3D71               	addwfc	??_Init_TxStatusFromFlash+1,w
  3520  0110  0085               	movwf	5
  3521  0111  3F00               	moviw [0]fsr0
  3522  0112  00F2               	movwf	??_Init_TxStatusFromFlash+2
  3523  0113  3F01               	moviw [1]fsr0
  3524  0114  00F3               	movwf	??_Init_TxStatusFromFlash+3
  3525  0115  00F2               	movwf	??_Init_TxStatusFromFlash+2
  3526  0116  305A               	movlw	90
  3527  0117  01F3               	clrf	??_Init_TxStatusFromFlash+3
  3528  0118  0672               	xorwf	??_Init_TxStatusFromFlash+2,w
  3529  0119  1D03               	btfss	3,2
  3530  011A  3400               	retlw	0
  3531  011B  0874               	movf	Init_TxStatusFromFlash@cellNum,w
  3532  011C  00F0               	movwf	??_Init_TxStatusFromFlash
  3533  011D  30CE               	movlw	206
  3534  011E  01F1               	clrf	??_Init_TxStatusFromFlash+1
  3535  011F  35F0               	lslf	??_Init_TxStatusFromFlash,f
  3536  0120  0DF1               	rlf	??_Init_TxStatusFromFlash+1,f
  3537  0121  0770               	addwf	??_Init_TxStatusFromFlash,w
  3538  0122  0084               	movwf	4
  3539  0123  3087               	movlw	135
  3540  0124  3D71               	addwfc	??_Init_TxStatusFromFlash+1,w
  3541  0125  0085               	movwf	5
  3542  0126  0800               	movf	0,w	;code access
  3543  0127  00F2               	movwf	??_Init_TxStatusFromFlash+2
  3544  0128  3003               	movlw	3
  3545  0129  0272               	subwf	??_Init_TxStatusFromFlash+2,w
  3546  012A  1803               	skipnc
  3547  012B  3400               	retlw	0
  3548                           
  3549                           ;main.c: 244: return (TxStatus[cellNum - 1] & 0x02);
  3550  012C  0874               	movf	Init_TxStatusFromFlash@cellNum,w
  3551  012D  00F0               	movwf	??_Init_TxStatusFromFlash
  3552  012E  30CE               	movlw	206
  3553  012F  01F1               	clrf	??_Init_TxStatusFromFlash+1
  3554  0130  35F0               	lslf	??_Init_TxStatusFromFlash,f
  3555  0131  0DF1               	rlf	??_Init_TxStatusFromFlash+1,f
  3556  0132  0770               	addwf	??_Init_TxStatusFromFlash,w
  3557  0133  0084               	movwf	4
  3558  0134  3087               	movlw	135
  3559  0135  3D71               	addwfc	??_Init_TxStatusFromFlash+1,w
  3560  0136  0085               	movwf	5
  3561  0137  0800               	movf	0,w	;code access
  3562  0138  3902               	andlw	2
  3563  0139  0008               	return
  3564  013A                     l1695:	
  3565                           ;main.c: 246: return 0;
  3566                           
  3567                           
  3568                           ;main.c: 252: if (cellNum == 7) {
  3569  013A  3007               	movlw	7
  3570  013B  0674               	xorwf	Init_TxStatusFromFlash@cellNum,w
  3571  013C  1D03               	btfss	3,2
  3572  013D  2972               	goto	l1711
  3573                           
  3574                           ;main.c: 253: if (((TxStatus[cellNum] >> 8) == 0x5A) && ((TxStatus[cellNum] & 0xFF) < 3)
      +                          ) {
  3575  013E  0874               	movf	Init_TxStatusFromFlash@cellNum,w
  3576  013F  00F0               	movwf	??_Init_TxStatusFromFlash
  3577  0140  30D0               	movlw	208
  3578  0141  01F1               	clrf	??_Init_TxStatusFromFlash+1
  3579  0142  35F0               	lslf	??_Init_TxStatusFromFlash,f
  3580  0143  0DF1               	rlf	??_Init_TxStatusFromFlash+1,f
  3581  0144  0770               	addwf	??_Init_TxStatusFromFlash,w
  3582  0145  0084               	movwf	4
  3583  0146  3087               	movlw	135
  3584  0147  3D71               	addwfc	??_Init_TxStatusFromFlash+1,w
  3585  0148  0085               	movwf	5
  3586  0149  3F00               	moviw [0]fsr0
  3587  014A  00F2               	movwf	??_Init_TxStatusFromFlash+2
  3588  014B  3F01               	moviw [1]fsr0
  3589  014C  00F3               	movwf	??_Init_TxStatusFromFlash+3
  3590  014D  00F2               	movwf	??_Init_TxStatusFromFlash+2
  3591  014E  305A               	movlw	90
  3592  014F  01F3               	clrf	??_Init_TxStatusFromFlash+3
  3593  0150  0672               	xorwf	??_Init_TxStatusFromFlash+2,w
  3594  0151  1D03               	btfss	3,2
  3595  0152  3400               	retlw	0
  3596  0153  0874               	movf	Init_TxStatusFromFlash@cellNum,w
  3597  0154  00F0               	movwf	??_Init_TxStatusFromFlash
  3598  0155  30D0               	movlw	208
  3599  0156  01F1               	clrf	??_Init_TxStatusFromFlash+1
  3600  0157  35F0               	lslf	??_Init_TxStatusFromFlash,f
  3601  0158  0DF1               	rlf	??_Init_TxStatusFromFlash+1,f
  3602  0159  0770               	addwf	??_Init_TxStatusFromFlash,w
  3603  015A  0084               	movwf	4
  3604  015B  3087               	movlw	135
  3605  015C  3D71               	addwfc	??_Init_TxStatusFromFlash+1,w
  3606  015D  0085               	movwf	5
  3607  015E  0800               	movf	0,w	;code access
  3608  015F  00F2               	movwf	??_Init_TxStatusFromFlash+2
  3609  0160  3003               	movlw	3
  3610  0161  0272               	subwf	??_Init_TxStatusFromFlash+2,w
  3611  0162  1803               	skipnc
  3612  0163  3400               	retlw	0
  3613                           
  3614                           ;main.c: 254: return (TxStatus[cellNum] & 0x02);
  3615  0164  0874               	movf	Init_TxStatusFromFlash@cellNum,w
  3616  0165  00F0               	movwf	??_Init_TxStatusFromFlash
  3617  0166  30D0               	movlw	208
  3618  0167  01F1               	clrf	??_Init_TxStatusFromFlash+1
  3619  0168  35F0               	lslf	??_Init_TxStatusFromFlash,f
  3620  0169  0DF1               	rlf	??_Init_TxStatusFromFlash+1,f
  3621  016A  0770               	addwf	??_Init_TxStatusFromFlash,w
  3622  016B  0084               	movwf	4
  3623  016C  3087               	movlw	135
  3624  016D  3D71               	addwfc	??_Init_TxStatusFromFlash+1,w
  3625  016E  0085               	movwf	5
  3626  016F  0800               	movf	0,w	;code access
  3627  0170  3902               	andlw	2
  3628  0171  0008               	return
  3629  0172                     l1711:	
  3630  0172  3008               	movlw	8
  3631  0173  0AF4               	incf	Init_TxStatusFromFlash@cellNum,f
  3632  0174  0274               	subwf	Init_TxStatusFromFlash@cellNum,w
  3633  0175  1803               	btfsc	3,0
  3634  0176  0008               	return
  3635  0177  28F0               	goto	l1673
  3636  0178                     __end_of_Init_TxStatusFromFlash:	
  3637                           
  3638                           	psect	text5
  3639  00B8                     __ptext5:	
  3640 ;; *************** function _Init_IO *****************
  3641 ;; Defined at:
  3642 ;;		line 120 in file "main.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;		None
  3645 ;; Auto vars:     Size  Location     Type
  3646 ;;		None
  3647 ;; Return value:  Size  Location     Type
  3648 ;;                  1    wreg      void 
  3649 ;; Registers used:
  3650 ;;		wreg, status,2
  3651 ;; Tracked objects:
  3652 ;;		On entry : B1F/0
  3653 ;;		On exit  : B1F/2
  3654 ;;		Unchanged: B00/0
  3655 ;; Data sizes:     COMMON   BANK0   BANK1
  3656 ;;      Params:         0       0       0
  3657 ;;      Locals:         0       0       0
  3658 ;;      Temps:          0       0       0
  3659 ;;      Totals:         0       0       0
  3660 ;;Total ram usage:        0 bytes
  3661 ;; Hardware stack levels used:    1
  3662 ;; This function calls:
  3663 ;;		Nothing
  3664 ;; This function is called by:
  3665 ;;		_main
  3666 ;; This function uses a non-reentrant model
  3667 ;;
  3668                           
  3669                           
  3670                           ;psect for function _Init_IO
  3671  00B8                     _Init_IO:	
  3672                           
  3673                           ;main.c: 121: OPTION_REGbits.nWPUEN = 0;
  3674                           
  3675                           ;incstack = 0
  3676                           ; Regs used in _Init_IO: [wreg+status,2]
  3677  00B8  0021               	movlb	1	; select bank1
  3678  00B9  1395               	bcf	21,7	;volatile
  3679                           
  3680                           ;main.c: 122: TRISA = 0x1F;
  3681  00BA  301F               	movlw	31
  3682  00BB  008C               	movwf	12	;volatile
  3683                           
  3684                           ;main.c: 123: ANSELA = 0;
  3685  00BC  0023               	movlb	3	; select bank3
  3686  00BD  018C               	clrf	12	;volatile
  3687                           
  3688                           ;main.c: 124: WPUA = 0x08;
  3689  00BE  3008               	movlw	8
  3690  00BF  0024               	movlb	4	; select bank4
  3691  00C0  008C               	movwf	12	;volatile
  3692                           
  3693                           ;main.c: 126: TRISC = 0x00;
  3694  00C1  0021               	movlb	1	; select bank1
  3695  00C2  018E               	clrf	14	;volatile
  3696                           
  3697                           ;main.c: 127: ANSELC = 0;
  3698  00C3  0023               	movlb	3	; select bank3
  3699  00C4  018E               	clrf	14	;volatile
  3700                           
  3701                           ;main.c: 128: LATC = 0x00;
  3702  00C5  0022               	movlb	2	; select bank2
  3703  00C6  018E               	clrf	14	;volatile
  3704  00C7  0008               	return
  3705  00C8                     __end_of_Init_IO:	
  3706                           
  3707                           	psect	text6
  3708  00AB                     __ptext6:	
  3709 ;; *************** function _Init_CLK *****************
  3710 ;; Defined at:
  3711 ;;		line 89 in file "main.c"
  3712 ;; Parameters:    Size  Location     Type
  3713 ;;		None
  3714 ;; Auto vars:     Size  Location     Type
  3715 ;;		None
  3716 ;; Return value:  Size  Location     Type
  3717 ;;                  1    wreg      void 
  3718 ;; Registers used:
  3719 ;;		wreg, status,2, status,0
  3720 ;; Tracked objects:
  3721 ;;		On entry : B1F/2
  3722 ;;		On exit  : B1F/1
  3723 ;;		Unchanged: B00/0
  3724 ;; Data sizes:     COMMON   BANK0   BANK1
  3725 ;;      Params:         0       0       0
  3726 ;;      Locals:         0       0       0
  3727 ;;      Temps:          0       0       0
  3728 ;;      Totals:         0       0       0
  3729 ;;Total ram usage:        0 bytes
  3730 ;; Hardware stack levels used:    1
  3731 ;; This function calls:
  3732 ;;		Nothing
  3733 ;; This function is called by:
  3734 ;;		_main
  3735 ;; This function uses a non-reentrant model
  3736 ;;
  3737                           
  3738                           
  3739                           ;psect for function _Init_CLK
  3740  00AB                     _Init_CLK:	
  3741                           
  3742                           ;main.c: 92: OSCCONbits.IRCF = 0b1110;
  3743                           
  3744                           ;incstack = 0
  3745                           ; Regs used in _Init_CLK: [wreg+status,2+status,0]
  3746  00AB  0021               	movlb	1	; select bank1
  3747  00AC  0819               	movf	25,w	;volatile
  3748  00AD  3987               	andlw	-121
  3749  00AE  3870               	iorlw	112
  3750  00AF  0099               	movwf	25	;volatile
  3751                           
  3752                           ;main.c: 108: WDTCONbits.WDTPS = 0b01011;
  3753  00B0  0817               	movf	23,w	;volatile
  3754  00B1  39C1               	andlw	-63
  3755  00B2  3816               	iorlw	22
  3756  00B3  0097               	movwf	23	;volatile
  3757                           
  3758                           ;main.c: 115: WDTCONbits.SWDTEN = 1;
  3759  00B4  1417               	bsf	23,0	;volatile
  3760  00B5                     l67:	
  3761                           ;main.c: 116: while (!OSCSTATbits.HFIOFR) {
  3762                           
  3763  00B5  1A1A               	btfsc	26,4	;volatile
  3764  00B6  0008               	return
  3765  00B7  28B5               	goto	l67
  3766  00B8                     __end_of_Init_CLK:	
  3767                           
  3768                           	psect	text7
  3769  0092                     __ptext7:	
  3770 ;; *************** function _Init_ADC *****************
  3771 ;; Defined at:
  3772 ;;		line 131 in file "main.c"
  3773 ;; Parameters:    Size  Location     Type
  3774 ;;		None
  3775 ;; Auto vars:     Size  Location     Type
  3776 ;;		None
  3777 ;; Return value:  Size  Location     Type
  3778 ;;                  1    wreg      void 
  3779 ;; Registers used:
  3780 ;;		wreg, status,2, status,0
  3781 ;; Tracked objects:
  3782 ;;		On entry : B1F/1
  3783 ;;		On exit  : B1F/1
  3784 ;;		Unchanged: B00/0
  3785 ;; Data sizes:     COMMON   BANK0   BANK1
  3786 ;;      Params:         0       0       0
  3787 ;;      Locals:         0       0       0
  3788 ;;      Temps:          0       0       0
  3789 ;;      Totals:         0       0       0
  3790 ;;Total ram usage:        0 bytes
  3791 ;; Hardware stack levels used:    1
  3792 ;; This function calls:
  3793 ;;		Nothing
  3794 ;; This function is called by:
  3795 ;;		_main
  3796 ;; This function uses a non-reentrant model
  3797 ;;
  3798                           
  3799                           
  3800                           ;psect for function _Init_ADC
  3801  0092                     _Init_ADC:	
  3802                           
  3803                           ;main.c: 132: FVRCON = 0;
  3804                           
  3805                           ;incstack = 0
  3806                           ; Regs used in _Init_ADC: [wreg+status,2+status,0]
  3807  0092  0022               	movlb	2	; select bank2
  3808  0093  0197               	clrf	23	;volatile
  3809                           
  3810                           ;main.c: 134: ADCON1bits.ADFM = 1;
  3811  0094  0021               	movlb	1	; select bank1
  3812  0095  179E               	bsf	30,7	;volatile
  3813                           
  3814                           ;main.c: 135: ADCON1bits.ADCS = 0b001;
  3815  0096  081E               	movf	30,w	;volatile
  3816  0097  398F               	andlw	-113
  3817  0098  3810               	iorlw	16
  3818  0099  009E               	movwf	30	;volatile
  3819                           
  3820                           ;main.c: 138: ADCON1bits.ADPREF = 0b00;
  3821  009A  30FC               	movlw	-4
  3822  009B  059E               	andwf	30,f	;volatile
  3823                           
  3824                           ;main.c: 140: ADCON0bits.ADON = 0;
  3825  009C  101D               	bcf	29,0	;volatile
  3826  009D  0008               	return
  3827  009E                     __end_of_Init_ADC:	
  3828                           
  3829                           	psect	text8
  3830  00C8                     __ptext8:	
  3831 ;; *************** function _FlashWrite *****************
  3832 ;; Defined at:
  3833 ;;		line 41 in file "FLASH.c"
  3834 ;; Parameters:    Size  Location     Type
  3835 ;;  addr            2    0[COMMON] unsigned int 
  3836 ;;  flash_data      2    2[COMMON] unsigned int 
  3837 ;; Auto vars:     Size  Location     Type
  3838 ;;		None
  3839 ;; Return value:  Size  Location     Type
  3840 ;;                  1    wreg      void 
  3841 ;; Registers used:
  3842 ;;		wreg, status,2, status,0, pclath, cstack
  3843 ;; Tracked objects:
  3844 ;;		On entry : 1C/0
  3845 ;;		On exit  : 1F/3
  3846 ;;		Unchanged: 0/0
  3847 ;; Data sizes:     COMMON   BANK0   BANK1
  3848 ;;      Params:         4       0       0
  3849 ;;      Locals:         0       0       0
  3850 ;;      Temps:          0       0       0
  3851 ;;      Totals:         4       0       0
  3852 ;;Total ram usage:        4 bytes
  3853 ;; Hardware stack levels used:    1
  3854 ;; Hardware stack levels required when called:    1
  3855 ;; This function calls:
  3856 ;;		_FlashUnlock
  3857 ;; This function is called by:
  3858 ;;		_main
  3859 ;; This function uses a non-reentrant model
  3860 ;;
  3861                           
  3862                           
  3863                           ;psect for function _FlashWrite
  3864  00C8                     _FlashWrite:	
  3865                           
  3866                           ;FLASH.c: 42: PMCON1bits.CFGS = 0;
  3867                           
  3868                           ;incstack = 0
  3869                           ; Regs used in _FlashWrite: [wreg+status,2+status,0+pclath+cstack]
  3870  00C8  0023               	movlb	3	; select bank3
  3871  00C9  1315               	bcf	21,6	;volatile
  3872                           
  3873                           ;FLASH.c: 43: PMADRH = (unsigned char) (addr >> 8);
  3874  00CA  0871               	movf	FlashWrite@addr+1,w
  3875  00CB  0092               	movwf	18	;volatile
  3876                           
  3877                           ;FLASH.c: 44: PMADRL = (unsigned char) (addr);
  3878  00CC  0870               	movf	FlashWrite@addr,w
  3879  00CD  0091               	movwf	17	;volatile
  3880                           
  3881                           ;FLASH.c: 45: PMCON1bits.FREE = 0;
  3882  00CE  1215               	bcf	21,4	;volatile
  3883                           
  3884                           ;FLASH.c: 46: PMCON1bits.LWLO = 1;
  3885  00CF  1695               	bsf	21,5	;volatile
  3886                           
  3887                           ;FLASH.c: 47: PMCON1bits.WREN = 1;
  3888  00D0  1515               	bsf	21,2	;volatile
  3889                           
  3890                           ;FLASH.c: 48: PMDATH = (unsigned char) (flash_data >> 8);
  3891  00D1  0873               	movf	FlashWrite@flash_data+1,w
  3892  00D2  0094               	movwf	20	;volatile
  3893                           
  3894                           ;FLASH.c: 49: PMDATL = (unsigned char) flash_data;
  3895  00D3  0872               	movf	FlashWrite@flash_data,w
  3896  00D4  0093               	movwf	19	;volatile
  3897                           
  3898                           ;FLASH.c: 50: PMCON1bits.LWLO = 0;
  3899  00D5  1295               	bcf	21,5	;volatile
  3900                           
  3901                           ;FLASH.c: 51: INTCONbits.GIE = 0;
  3902  00D6  138B               	bcf	11,7	;volatile
  3903                           
  3904                           ;FLASH.c: 52: FlashUnlock();
  3905  00D7  2086               	fcall	_FlashUnlock
  3906                           
  3907                           ;FLASH.c: 53: INTCONbits.GIE = 1;
  3908  00D8  178B               	bsf	11,7	;volatile
  3909                           
  3910                           ;FLASH.c: 54: PMCON1bits.WREN = 0;
  3911  00D9  1115               	bcf	21,2	;volatile
  3912  00DA  0008               	return
  3913  00DB                     __end_of_FlashWrite:	
  3914                           
  3915                           	psect	text9
  3916  009E                     __ptext9:	
  3917 ;; *************** function _FlashEraseRow *****************
  3918 ;; Defined at:
  3919 ;;		line 29 in file "FLASH.c"
  3920 ;; Parameters:    Size  Location     Type
  3921 ;;  rowAddr         2    0[COMMON] unsigned int 
  3922 ;; Auto vars:     Size  Location     Type
  3923 ;;		None
  3924 ;; Return value:  Size  Location     Type
  3925 ;;                  1    wreg      void 
  3926 ;; Registers used:
  3927 ;;		wreg, status,2, status,0, pclath, cstack
  3928 ;; Tracked objects:
  3929 ;;		On entry : 1D/2
  3930 ;;		On exit  : 1F/3
  3931 ;;		Unchanged: 0/0
  3932 ;; Data sizes:     COMMON   BANK0   BANK1
  3933 ;;      Params:         2       0       0
  3934 ;;      Locals:         0       0       0
  3935 ;;      Temps:          0       0       0
  3936 ;;      Totals:         2       0       0
  3937 ;;Total ram usage:        2 bytes
  3938 ;; Hardware stack levels used:    1
  3939 ;; Hardware stack levels required when called:    1
  3940 ;; This function calls:
  3941 ;;		_FlashUnlock
  3942 ;; This function is called by:
  3943 ;;		_main
  3944 ;; This function uses a non-reentrant model
  3945 ;;
  3946                           
  3947                           
  3948                           ;psect for function _FlashEraseRow
  3949  009E                     _FlashEraseRow:	
  3950                           
  3951                           ;FLASH.c: 30: PMCON1bits.CFGS = 0;
  3952                           
  3953                           ;incstack = 0
  3954                           ; Regs used in _FlashEraseRow: [wreg+status,2+status,0+pclath+cstack]
  3955  009E  0023               	movlb	3	; select bank3
  3956  009F  1315               	bcf	21,6	;volatile
  3957                           
  3958                           ;FLASH.c: 31: PMADRH = (unsigned char) (rowAddr >> 8);
  3959  00A0  0871               	movf	FlashEraseRow@rowAddr+1,w
  3960  00A1  0092               	movwf	18	;volatile
  3961                           
  3962                           ;FLASH.c: 32: PMADRL = (unsigned char) (rowAddr);
  3963  00A2  0870               	movf	FlashEraseRow@rowAddr,w
  3964  00A3  0091               	movwf	17	;volatile
  3965                           
  3966                           ;FLASH.c: 33: PMCON1bits.FREE = 1;
  3967  00A4  1615               	bsf	21,4	;volatile
  3968                           
  3969                           ;FLASH.c: 34: PMCON1bits.WREN = 1;
  3970  00A5  1515               	bsf	21,2	;volatile
  3971                           
  3972                           ;FLASH.c: 35: INTCONbits.GIE = 0;
  3973  00A6  138B               	bcf	11,7	;volatile
  3974                           
  3975                           ;FLASH.c: 36: FlashUnlock();
  3976  00A7  2086               	fcall	_FlashUnlock
  3977                           
  3978                           ;FLASH.c: 37: INTCONbits.GIE = 1;
  3979  00A8  178B               	bsf	11,7	;volatile
  3980                           
  3981                           ;FLASH.c: 38: PMCON1bits.WREN = 0;
  3982  00A9  1115               	bcf	21,2	;volatile
  3983  00AA  0008               	return
  3984  00AB                     __end_of_FlashEraseRow:	
  3985                           
  3986                           	psect	text10
  3987  0086                     __ptext10:	
  3988 ;; *************** function _FlashUnlock *****************
  3989 ;; Defined at:
  3990 ;;		line 23 in file "FLASH.c"
  3991 ;; Parameters:    Size  Location     Type
  3992 ;;		None
  3993 ;; Auto vars:     Size  Location     Type
  3994 ;;		None
  3995 ;; Return value:  Size  Location     Type
  3996 ;;                  1    wreg      void 
  3997 ;; Registers used:
  3998 ;;		wreg
  3999 ;; Tracked objects:
  4000 ;;		On entry : 1F/3
  4001 ;;		On exit  : 1F/3
  4002 ;;		Unchanged: 0/0
  4003 ;; Data sizes:     COMMON   BANK0   BANK1
  4004 ;;      Params:         0       0       0
  4005 ;;      Locals:         0       0       0
  4006 ;;      Temps:          0       0       0
  4007 ;;      Totals:         0       0       0
  4008 ;;Total ram usage:        0 bytes
  4009 ;; Hardware stack levels used:    1
  4010 ;; This function calls:
  4011 ;;		Nothing
  4012 ;; This function is called by:
  4013 ;;		_FlashEraseRow
  4014 ;;		_FlashWrite
  4015 ;; This function uses a non-reentrant model
  4016 ;;
  4017                           
  4018                           
  4019                           ;psect for function _FlashUnlock
  4020  0086                     _FlashUnlock:	
  4021                           
  4022                           ;FLASH.c: 24: PMCON2 = 0x55;
  4023                           
  4024                           ;incstack = 0
  4025                           ; Regs used in _FlashUnlock: [wreg]
  4026  0086  3055               	movlw	85
  4027  0087  0096               	movwf	22	;volsfr
  4028                           
  4029                           ;FLASH.c: 25: PMCON2 = 0xAA;
  4030  0088  30AA               	movlw	170
  4031  0089  0096               	movwf	22	;volsfr
  4032                           
  4033                           ;FLASH.c: 26: PMCON1bits.WR = 1;
  4034  008A  1495               	bsf	21,1	;volatile
  4035  008B  0008               	return
  4036  008C                     __end_of_FlashUnlock:	
  4037  007E                     btemp	set	126	;btemp
  4038  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         36
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     28      63
    BANK1            32      0       0

Pointer List with Targets:

    noolite_send@data	PTR unsigned char  size(1) Largest target is 4
		 -> noo_send_data(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_noolite_send

Critical Paths under _main in BANK0

    _main->_noolite_send

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0   11381
                                             18 BANK0     10    10      0
                      _FlashEraseRow
                         _FlashWrite
                           _Init_ADC
                           _Init_CLK
                            _Init_IO
             _Init_TxStatusFromFlash
                 _Init_TypeFromFlash
                            _RF_Init
                       _noolite_send
 ---------------------------------------------------------------------------------
 (1) _noolite_send                                        29    26      3    7344
                                              0 COMMON    11     8      3
                                              0 BANK0     18    18      0
 ---------------------------------------------------------------------------------
 (1) _RF_Init                                              7     7      0       0
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (1) _Init_TypeFromFlash                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Init_TxStatusFromFlash                               5     5      0     244
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _Init_IO                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_CLK                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _FlashWrite                                           4     0      4     946
                                              0 COMMON     4     0      4
                        _FlashUnlock
 ---------------------------------------------------------------------------------
 (1) _FlashEraseRow                                        2     0      2     173
                                              0 COMMON     2     0      2
                        _FlashUnlock
 ---------------------------------------------------------------------------------
 (2) _FlashUnlock                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FlashEraseRow
     _FlashUnlock
   _FlashWrite
     _FlashUnlock
   _Init_ADC
   _Init_CLK
   _Init_IO
   _Init_TxStatusFromFlash
   _Init_TypeFromFlash
   _RF_Init
   _noolite_send

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      4B       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1C      3F       6       78.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      4B       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Sep 04 22:35:46 2018

                     __CFG_CP$ON 0000                                pc 0002                               l67 00B5  
                            l133 03FE                              l310 0359                              l150 041D  
                            l151 0436                              l152 043F                              l144 0408  
                            l313 0385                              l305 0348                              l161 04B2  
                            l155 0477                              l316 03A2                              l308 0369  
                            l317 03A0                              l245 07A5                              l318 039F  
                            l283 01B1                              l291 022E                              l284 0201  
                            l292 022A                              l289 0220                     __CFG_IDLOC0$ 0000  
                   __CFG_IDLOC1$ 0007                     __CFG_IDLOC2$ 0000                     __CFG_IDLOC3$ 0007  
                   __CFG_BORV$LO 0000                              wreg 0009                      main@chn_421 005C  
                    main@chn_422 005D                      main@chn_423 005E                      main@cellNum 005A  
                           S2517 0002                             S2519 0006         ??_Init_TxStatusFromFlash 0070  
                   __CFG_LVP$OFF 0000                             l2013 040B                             l2031 0434  
                           l2015 0412                             l2007 0402                             l2201 064A  
                           l2121 0536                             l2009 0403                             l2123 0545  
                           l2051 0467                             l2019 0418                             l2027 041E  
                           l2053 0475                             l2029 0432                             l2231 06B9  
                           l2215 067F                             l2207 065F                             l2143 0577  
                           l2127 0547                             l2039 0442                             l2241 06E3  
                           l2161 05C0                             l2153 05A7                             l2137 055D  
                           l2313 073F                             l2129 0548                             l2081 04B5  
                           l2073 04A1                             l2315 0749                             l2243 06EB  
                           l2163 05C7                             l2227 069F                             l2075 04B0  
                           l2059 047A                             l2341 0772                             l2245 06F3  
                           l2165 05CF                             l2229 06A9                             l1711 0172  
                           l2351 0755                             l2255 0714                             l2191 062A  
                           l2175 05EF                             l2335 074B                             l1801 0314  
                           l2265 071A                             l2257 0718                             l1723 01AF  
                           l2355 0770                             l2515 0427                             l1821 0321  
                           l1741 0222                             l2359 07A8                             l2295 073A  
                           l1673 00F0                             l1809 031A                             l1819 02F7  
                           l1747 022B                             l1781 02BE                             l1765 0254  
                           l1695 013A                             l1759 023D                             l1943 03B3  
                           l1865 035B                             l1971 03FC                             l1885 0382  
                           l1869 0360                             l1973 03D5                             l1995 03F5  
                           l1979 03DF                             l1989 03EB                             u2007 0582  
                           u2017 0592                             u2027 05DA                             u1164 030C  
                           u1165 030B                             u2037 05EA                             _LATA 010C  
                           u1095 0207                             u2047 0635                             _LATC 010E  
                           u2057 0645                             u1274 0397                             u1275 0396  
                           u2067 068A                             u2077 069A                             u2087 033C  
                           u1987 04EB                             u1997 0501                             _TMR0 0015  
                           _TMR2 001A                             _WPUA 020C                             _Keys 0020  
                   _startaddress 0034                     __CFG_WRT$OFF 0000                             _Type 07C0  
                           _main 03A6                  __end_of_RF_Init 0203                             fsr0h 0005  
                           fsr1h 0007                             indf0 0000                             fsr0l 0004  
                           indf1 0001                             fsr1l 0006                             btemp 007E  
   noolite_send@noo_send_command 0070                             start 0001              __end_of_FlashUnlock 008C  
                  __CFG_MCLRE$ON 0000                  __end_of_Init_IO 00C8                    __CFG_LPBOR$ON 0000  
                          ?_main 0070                      _BattLowSent 003D                       _FlashWrite 00C8  
                          _PORTA 000C                            _TRISA 008C                            _TRISC 008E  
                  __CFG_PWRTE$ON 0000          __p_system_settings_text 07EE                     _Type_absaddr 07C0  
                          status 0003                            wtemp0 007E                  __initialization 07E0  
                   __end_of_Type 07D0                     __end_of_main 07C0                 __end_of_Init_ADC 009E  
               __end_of_Init_CLK 00B8                           ??_main 0055                 _TxStatus_absaddr 07D0  
               __end_of_TxStatus 07E0  __size_of_Init_TxStatusFromFlash 0089                        ??_RF_Init 0070  
                         _ANSELA 018C                           _ANSELC 018E       __end_of_Init_TypeFromFlash 00EF  
                         _FVRCON 0117                      _FlashUnlock 0086                           _PMADRH 0192  
                         _PMADRL 0191                           _PMDATH 0194                           _PMDATL 0193  
                         _PMCON2 0196                           _TMR0IE 005D                           _TMR0IF 005A  
                   __p_Type_text 07C0                        ??_Init_IO 0070                   __CFG_STVREN$ON 0000  
                _system_settings 07EE             noolite_send@countbit 0050            __end_of_FlashEraseRow 00AB  
                    ?_FlashWrite 0070                  noolite_send@chn 0051             noolite_send@startpos 004F  
        __end_of__initialization 07E7    Init_TxStatusFromFlash@cellNum 0074                   __pcstackCOMMON 0070  
         _Init_TxStatusFromFlash 00EF                   _OPTION_REGbits 0095                       __pbssBANK0 0020  
                      ?_Init_ADC 0070                        ?_Init_CLK 0070          __end_of_system_settings 07FF  
            __size_of_FlashWrite 0013                       __pmaintext 03A6                          _RF_Init 0178  
           FlashEraseRow@rowAddr 0070                       ??_Init_ADC 0070                       ??_Init_CLK 0070  
                        _DevMode 0039                          _DevType 003A                          _Init_IO 00B8  
                  ?_noolite_send 0070                          __ptext1 0203                          __ptext2 0178  
                        __ptext3 00DB                          __ptext4 00EF                          __ptext5 00B8  
                        __ptext6 00AB                          __ptext7 0092                          __ptext8 00C8  
                        __ptext9 009E            noolite_send@countsend 0052                          main@chn 005B  
                        clrloop0 008D             end_of_initialization 07E7                     ?_FlashUnlock 0070  
               noolite_send@data 0072            noolite_send@temp_send 0053                   FlashWrite@addr 0070  
             _Init_TypeFromFlash 00DB                   ??_noolite_send 0073              ?_Init_TypeFromFlash 0070  
                   ??_FlashWrite 0074                 __CFG_FOSC$INTOSC 0000             ??_Init_TypeFromFlash 0070  
        ?_Init_TxStatusFromFlash 0070               __end_of_FlashWrite 00DB              start_initialization 07E0  
 __end_of_Init_TxStatusFromFlash 0178                __size_of_Init_ADC 000C                __size_of_Init_CLK 000D  
         __size_of_FlashEraseRow 000D                 __p_TxStatus_text 07D0                      __pbssCOMMON 007B  
                      ___latbits 0000                    __pcstackBANK0 0043                         ?_RF_Init 0070  
           __end_of_noolite_send 03A6             __size_of_FlashUnlock 0006                         ?_Init_IO 0070  
                  _noo_send_data 003F                        __pswtext1 0002                        __pswtext2 0006  
                  _FlashEraseRow 009E                 __CFG_WDTE$SWDTEN 0000                         _LATAbits 010C  
                       _LATCbits 010E                        clear_ram0 008C      noolite_send@noo_send_buffer 0043  
    noolite_send@noo_send_format 0071                       _ADCON0bits 009D                       _ADCON1bits 009E  
                 ?_FlashEraseRow 0070                        _tx_status 003E                 __size_of_RF_Init 008B  
                       _Init_ADC 0092                         _Init_CLK 00AB                     _SkipHandling 0038  
               _noo_address_type 007B                 __size_of_Init_IO 0010               noolite_send@endpos 0054  
                       _TxStatus 07D0            __size_of_noolite_send 01A3                         __ptext10 0086  
                    _tick3_100ms 003B                    __size_of_main 041A      __size_of_Init_TypeFromFlash 0014  
                ??_FlashEraseRow 0072                     _noolite_send 0203                      _OSCSTATbits 009A  
                     _INTCONbits 000B                __CFG_BOREN$NSLEEP 0000                       _PMCON1bits 0195  
           FlashWrite@flash_data 0072                __CFG_CLKOUTEN$OFF 0000               _LedPulseTick_100ms 003C  
                     _OSCCONbits 0099                       _OPTION_REG 0095                       _WDTCONbits 0097  
                  ??_FlashUnlock 0070          _system_settings_absaddr 07EE  
