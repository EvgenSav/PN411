

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Wed Sep 05 21:50:39 2018

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	16LF1503
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	_system_settings_text,global,class=CODE,delta=2
     5                           	psect	_TxStatus_text,global,class=CODE,delta=2
     6                           	psect	_Type_text,global,class=CODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 1.45
    27                           ; Generated 16/11/2017 GMT
    28                           ; 
    29                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16LF1503 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000E                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  008C                     	;# 
    87  008E                     	;# 
    88  0091                     	;# 
    89  0092                     	;# 
    90  0093                     	;# 
    91  0095                     	;# 
    92  0096                     	;# 
    93  0097                     	;# 
    94  0099                     	;# 
    95  009A                     	;# 
    96  009B                     	;# 
    97  009B                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010E                     	;# 
   104  0111                     	;# 
   105  0112                     	;# 
   106  0113                     	;# 
   107  0114                     	;# 
   108  0115                     	;# 
   109  0116                     	;# 
   110  0117                     	;# 
   111  0118                     	;# 
   112  0119                     	;# 
   113  011D                     	;# 
   114  018C                     	;# 
   115  018E                     	;# 
   116  0191                     	;# 
   117  0191                     	;# 
   118  0192                     	;# 
   119  0193                     	;# 
   120  0193                     	;# 
   121  0194                     	;# 
   122  0195                     	;# 
   123  0196                     	;# 
   124  020C                     	;# 
   125  0211                     	;# 
   126  0211                     	;# 
   127  0212                     	;# 
   128  0212                     	;# 
   129  0213                     	;# 
   130  0213                     	;# 
   131  0214                     	;# 
   132  0214                     	;# 
   133  0215                     	;# 
   134  0215                     	;# 
   135  0215                     	;# 
   136  0216                     	;# 
   137  0216                     	;# 
   138  0217                     	;# 
   139  0217                     	;# 
   140  0391                     	;# 
   141  0392                     	;# 
   142  0393                     	;# 
   143  0498                     	;# 
   144  0498                     	;# 
   145  0499                     	;# 
   146  049A                     	;# 
   147  049B                     	;# 
   148  049B                     	;# 
   149  049C                     	;# 
   150  049D                     	;# 
   151  049E                     	;# 
   152  049F                     	;# 
   153  0611                     	;# 
   154  0612                     	;# 
   155  0613                     	;# 
   156  0613                     	;# 
   157  0614                     	;# 
   158  0615                     	;# 
   159  0616                     	;# 
   160  0616                     	;# 
   161  0617                     	;# 
   162  0618                     	;# 
   163  0619                     	;# 
   164  0619                     	;# 
   165  061A                     	;# 
   166  061B                     	;# 
   167  061C                     	;# 
   168  061C                     	;# 
   169  0691                     	;# 
   170  0692                     	;# 
   171  0693                     	;# 
   172  0694                     	;# 
   173  0695                     	;# 
   174  0F0F                     	;# 
   175  0F10                     	;# 
   176  0F11                     	;# 
   177  0F12                     	;# 
   178  0F13                     	;# 
   179  0F14                     	;# 
   180  0F15                     	;# 
   181  0F16                     	;# 
   182  0F17                     	;# 
   183  0F18                     	;# 
   184  0F19                     	;# 
   185  0F1A                     	;# 
   186  0F1B                     	;# 
   187  0F1C                     	;# 
   188  0F1D                     	;# 
   189  0F1E                     	;# 
   190  0F1F                     	;# 
   191  0FE3                     	;# 
   192  0FE4                     	;# 
   193  0FE5                     	;# 
   194  0FE6                     	;# 
   195  0FE7                     	;# 
   196  0FE8                     	;# 
   197  0FE9                     	;# 
   198  0FEA                     	;# 
   199  0FEB                     	;# 
   200  0FED                     	;# 
   201  0FEE                     	;# 
   202  0FEF                     	;# 
   203  0000                     	;# 
   204  0001                     	;# 
   205  0002                     	;# 
   206  0003                     	;# 
   207  0004                     	;# 
   208  0005                     	;# 
   209  0006                     	;# 
   210  0007                     	;# 
   211  0008                     	;# 
   212  0009                     	;# 
   213  000A                     	;# 
   214  000B                     	;# 
   215  000C                     	;# 
   216  000E                     	;# 
   217  0011                     	;# 
   218  0012                     	;# 
   219  0013                     	;# 
   220  0015                     	;# 
   221  0016                     	;# 
   222  0016                     	;# 
   223  0017                     	;# 
   224  0018                     	;# 
   225  0019                     	;# 
   226  001A                     	;# 
   227  001B                     	;# 
   228  001C                     	;# 
   229  008C                     	;# 
   230  008E                     	;# 
   231  0091                     	;# 
   232  0092                     	;# 
   233  0093                     	;# 
   234  0095                     	;# 
   235  0096                     	;# 
   236  0097                     	;# 
   237  0099                     	;# 
   238  009A                     	;# 
   239  009B                     	;# 
   240  009B                     	;# 
   241  009C                     	;# 
   242  009D                     	;# 
   243  009E                     	;# 
   244  009F                     	;# 
   245  010C                     	;# 
   246  010E                     	;# 
   247  0111                     	;# 
   248  0112                     	;# 
   249  0113                     	;# 
   250  0114                     	;# 
   251  0115                     	;# 
   252  0116                     	;# 
   253  0117                     	;# 
   254  0118                     	;# 
   255  0119                     	;# 
   256  011D                     	;# 
   257  018C                     	;# 
   258  018E                     	;# 
   259  0191                     	;# 
   260  0191                     	;# 
   261  0192                     	;# 
   262  0193                     	;# 
   263  0193                     	;# 
   264  0194                     	;# 
   265  0195                     	;# 
   266  0196                     	;# 
   267  020C                     	;# 
   268  0211                     	;# 
   269  0211                     	;# 
   270  0212                     	;# 
   271  0212                     	;# 
   272  0213                     	;# 
   273  0213                     	;# 
   274  0214                     	;# 
   275  0214                     	;# 
   276  0215                     	;# 
   277  0215                     	;# 
   278  0215                     	;# 
   279  0216                     	;# 
   280  0216                     	;# 
   281  0217                     	;# 
   282  0217                     	;# 
   283  0391                     	;# 
   284  0392                     	;# 
   285  0393                     	;# 
   286  0498                     	;# 
   287  0498                     	;# 
   288  0499                     	;# 
   289  049A                     	;# 
   290  049B                     	;# 
   291  049B                     	;# 
   292  049C                     	;# 
   293  049D                     	;# 
   294  049E                     	;# 
   295  049F                     	;# 
   296  0611                     	;# 
   297  0612                     	;# 
   298  0613                     	;# 
   299  0613                     	;# 
   300  0614                     	;# 
   301  0615                     	;# 
   302  0616                     	;# 
   303  0616                     	;# 
   304  0617                     	;# 
   305  0618                     	;# 
   306  0619                     	;# 
   307  0619                     	;# 
   308  061A                     	;# 
   309  061B                     	;# 
   310  061C                     	;# 
   311  061C                     	;# 
   312  0691                     	;# 
   313  0692                     	;# 
   314  0693                     	;# 
   315  0694                     	;# 
   316  0695                     	;# 
   317  0F0F                     	;# 
   318  0F10                     	;# 
   319  0F11                     	;# 
   320  0F12                     	;# 
   321  0F13                     	;# 
   322  0F14                     	;# 
   323  0F15                     	;# 
   324  0F16                     	;# 
   325  0F17                     	;# 
   326  0F18                     	;# 
   327  0F19                     	;# 
   328  0F1A                     	;# 
   329  0F1B                     	;# 
   330  0F1C                     	;# 
   331  0F1D                     	;# 
   332  0F1E                     	;# 
   333  0F1F                     	;# 
   334  0FE3                     	;# 
   335  0FE4                     	;# 
   336  0FE5                     	;# 
   337  0FE6                     	;# 
   338  0FE7                     	;# 
   339  0FE8                     	;# 
   340  0FE9                     	;# 
   341  0FEA                     	;# 
   342  0FEB                     	;# 
   343  0FED                     	;# 
   344  0FEE                     	;# 
   345  0FEF                     	;# 
   346  0000                     	;# 
   347  0001                     	;# 
   348  0002                     	;# 
   349  0003                     	;# 
   350  0004                     	;# 
   351  0005                     	;# 
   352  0006                     	;# 
   353  0007                     	;# 
   354  0008                     	;# 
   355  0009                     	;# 
   356  000A                     	;# 
   357  000B                     	;# 
   358  000C                     	;# 
   359  000E                     	;# 
   360  0011                     	;# 
   361  0012                     	;# 
   362  0013                     	;# 
   363  0015                     	;# 
   364  0016                     	;# 
   365  0016                     	;# 
   366  0017                     	;# 
   367  0018                     	;# 
   368  0019                     	;# 
   369  001A                     	;# 
   370  001B                     	;# 
   371  001C                     	;# 
   372  008C                     	;# 
   373  008E                     	;# 
   374  0091                     	;# 
   375  0092                     	;# 
   376  0093                     	;# 
   377  0095                     	;# 
   378  0096                     	;# 
   379  0097                     	;# 
   380  0099                     	;# 
   381  009A                     	;# 
   382  009B                     	;# 
   383  009B                     	;# 
   384  009C                     	;# 
   385  009D                     	;# 
   386  009E                     	;# 
   387  009F                     	;# 
   388  010C                     	;# 
   389  010E                     	;# 
   390  0111                     	;# 
   391  0112                     	;# 
   392  0113                     	;# 
   393  0114                     	;# 
   394  0115                     	;# 
   395  0116                     	;# 
   396  0117                     	;# 
   397  0118                     	;# 
   398  0119                     	;# 
   399  011D                     	;# 
   400  018C                     	;# 
   401  018E                     	;# 
   402  0191                     	;# 
   403  0191                     	;# 
   404  0192                     	;# 
   405  0193                     	;# 
   406  0193                     	;# 
   407  0194                     	;# 
   408  0195                     	;# 
   409  0196                     	;# 
   410  020C                     	;# 
   411  0211                     	;# 
   412  0211                     	;# 
   413  0212                     	;# 
   414  0212                     	;# 
   415  0213                     	;# 
   416  0213                     	;# 
   417  0214                     	;# 
   418  0214                     	;# 
   419  0215                     	;# 
   420  0215                     	;# 
   421  0215                     	;# 
   422  0216                     	;# 
   423  0216                     	;# 
   424  0217                     	;# 
   425  0217                     	;# 
   426  0391                     	;# 
   427  0392                     	;# 
   428  0393                     	;# 
   429  0498                     	;# 
   430  0498                     	;# 
   431  0499                     	;# 
   432  049A                     	;# 
   433  049B                     	;# 
   434  049B                     	;# 
   435  049C                     	;# 
   436  049D                     	;# 
   437  049E                     	;# 
   438  049F                     	;# 
   439  0611                     	;# 
   440  0612                     	;# 
   441  0613                     	;# 
   442  0613                     	;# 
   443  0614                     	;# 
   444  0615                     	;# 
   445  0616                     	;# 
   446  0616                     	;# 
   447  0617                     	;# 
   448  0618                     	;# 
   449  0619                     	;# 
   450  0619                     	;# 
   451  061A                     	;# 
   452  061B                     	;# 
   453  061C                     	;# 
   454  061C                     	;# 
   455  0691                     	;# 
   456  0692                     	;# 
   457  0693                     	;# 
   458  0694                     	;# 
   459  0695                     	;# 
   460  0F0F                     	;# 
   461  0F10                     	;# 
   462  0F11                     	;# 
   463  0F12                     	;# 
   464  0F13                     	;# 
   465  0F14                     	;# 
   466  0F15                     	;# 
   467  0F16                     	;# 
   468  0F17                     	;# 
   469  0F18                     	;# 
   470  0F19                     	;# 
   471  0F1A                     	;# 
   472  0F1B                     	;# 
   473  0F1C                     	;# 
   474  0F1D                     	;# 
   475  0F1E                     	;# 
   476  0F1F                     	;# 
   477  0FE3                     	;# 
   478  0FE4                     	;# 
   479  0FE5                     	;# 
   480  0FE6                     	;# 
   481  0FE7                     	;# 
   482  0FE8                     	;# 
   483  0FE9                     	;# 
   484  0FEA                     	;# 
   485  0FEB                     	;# 
   486  0FED                     	;# 
   487  0FEE                     	;# 
   488  0FEF                     	;# 
   489  07EE                     _system_settings_absaddr	set	2030
   490  07D0                     _TxStatus_absaddr	set	2000
   491  07C0                     _Type_absaddr	set	1984
   492  07EE                     _system_settings_absaddr	set	2030
   493                           
   494                           	psect	_system_settings_text
   495  07EE                     __p_system_settings_text:	
   496  07EE                     _system_settings:	
   497  07EE  3443               	retlw	67
   498  07EF  3404               	retlw	4
   499  07F0  345F               	retlw	95
   500  07F1  3441               	retlw	65
   501  07F2  341F               	retlw	31
   502  07F3  34FB               	retlw	251
   503  07F4  345F               	retlw	95
   504  07F5  3441               	retlw	65
   505  07F6  3478               	retlw	120
   506  07F7  3456               	retlw	86
   507  07F8  3434               	retlw	52
   508  07F9  3412               	retlw	18
   509  07FA  345F               	retlw	95
   510  07FB  3442               	retlw	66
   511  07FC  3410               	retlw	16
   512  07FD  3400               	retlw	0
   513  07FE  345F               	retlw	95
   514  07FF                     __end_of_system_settings:	
   515  07D0                     _TxStatus_absaddr	set	2000
   516                           
   517                           	psect	_TxStatus_text
   518  07D0                     __p_TxStatus_text:	
   519  07D0                     _TxStatus:	
   520  07D0  34FF               	retlw	255
   521  07D1  34FF               	retlw	255
   522  07D2  34FF               	retlw	255
   523  07D3  34FF               	retlw	255
   524  07D4  34FF               	retlw	255
   525  07D5  34FF               	retlw	255
   526  07D6  34FF               	retlw	255
   527  07D7  34FF               	retlw	255
   528  07D8  34FF               	retlw	255
   529  07D9  34FF               	retlw	255
   530  07DA  34FF               	retlw	255
   531  07DB  34FF               	retlw	255
   532  07DC  34FF               	retlw	255
   533  07DD  34FF               	retlw	255
   534  07DE  34FF               	retlw	255
   535  07DF  34FF               	retlw	255
   536  07E0                     __end_of_TxStatus:	
   537  07C0                     _Type_absaddr	set	1984
   538                           
   539                           	psect	_Type_text
   540  07C0                     __p_Type_text:	
   541  07C0                     _Type:	
   542  07C0  34FF               	retlw	255
   543  07C1  34FF               	retlw	255
   544  07C2  34FF               	retlw	255
   545  07C3  34FF               	retlw	255
   546  07C4  34FF               	retlw	255
   547  07C5  34FF               	retlw	255
   548  07C6  34FF               	retlw	255
   549  07C7  34FF               	retlw	255
   550  07C8  34FF               	retlw	255
   551  07C9  34FF               	retlw	255
   552  07CA  34FF               	retlw	255
   553  07CB  34FF               	retlw	255
   554  07CC  34FF               	retlw	255
   555  07CD  34FF               	retlw	255
   556  07CE  34FF               	retlw	255
   557  07CF  34FF               	retlw	255
   558  07D0                     __end_of_Type:	
   559  0015                     _TMR0	set	21
   560  000C                     _PORTA	set	12
   561  000B                     _INTCONbits	set	11
   562  005D                     _TMR0IE	set	93
   563  005A                     _TMR0IF	set	90
   564  0095                     _OPTION_REG	set	149
   565  009D                     _ADCON0bits	set	157
   566  009E                     _ADCON1bits	set	158
   567  008E                     _TRISC	set	142
   568  008C                     _TRISA	set	140
   569  0095                     _OPTION_REGbits	set	149
   570  009A                     _OSCSTATbits	set	154
   571  0097                     _WDTCONbits	set	151
   572  0099                     _OSCCONbits	set	153
   573  010C                     _LATA	set	268
   574  010C                     _LATAbits	set	268
   575  010E                     _LATCbits	set	270
   576  0117                     _FVRCON	set	279
   577  010E                     _LATC	set	270
   578  0196                     _PMCON2	set	406
   579  0193                     _PMDATL	set	403
   580  0194                     _PMDATH	set	404
   581  0191                     _PMADRL	set	401
   582  0192                     _PMADRH	set	402
   583  0195                     _PMCON1bits	set	405
   584  018E                     _ANSELC	set	398
   585  018C                     _ANSELA	set	396
   586  020C                     _WPUA	set	524
   587                           
   588                           ; #config settings
   589  0007                     
   590                           	psect	cinit
   591  07E0                     start_initialization:	
   592  07E0                     __initialization:	
   593                           
   594                           ; Clear objects allocated to BANK0
   595  07E0  3020               	movlw	low __pbssBANK0
   596  07E1  0084               	movwf	4
   597  07E2  3000               	movlw	high __pbssBANK0
   598  07E3  0085               	movwf	5
   599  07E4  3024               	movlw	36
   600  07E5  27E8               	fcall	clear_ram0
   601  07E6                     end_of_initialization:	
   602                           ;End of C runtime variable initialization code
   603                           
   604  07E6                     __end_of__initialization:	
   605  07E6  0020               	movlb	0
   606  07E7  2C53               	ljmp	_main	;jump to C main() function
   607                           
   608                           	psect	bssBANK0
   609  0020                     __pbssBANK0:	
   610  0020                     _startaddress:	
   611  0020                     	ds	4
   612  0024                     _noo_address_type:	
   613  0024                     	ds	1
   614  0025                     _SkipHandling:	
   615  0025                     	ds	1
   616  0026                     _DevMode:	
   617  0026                     	ds	1
   618  0027                     _DevType:	
   619  0027                     	ds	1
   620  0028                     _tick3_100ms:	
   621  0028                     	ds	1
   622  0029                     _LedPulseTick_100ms:	
   623  0029                     	ds	1
   624  002A                     _BattLowSent:	
   625  002A                     	ds	1
   626  002B                     _tx_status:	
   627  002B                     	ds	1
   628  002C                     _Keys:	
   629  002C                     	ds	20
   630  0040                     _noo_send_data:	
   631  0040                     	ds	4
   632                           
   633                           	psect	clrtext
   634  07E8                     clear_ram0:	
   635                           ;	Called with FSR0 containing the base address, and
   636                           ;	WREG with the size to clear
   637                           
   638  07E8  0064               	clrwdt	;clear the watchdog before getting into this loop
   639  07E9                     clrloop0:	
   640  07E9  0180               	clrf	0	;clear RAM location pointed to by FSR
   641  07EA  3101               	addfsr 0,1
   642  07EB  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   643  07EC  2FE9               	goto	clrloop0	;have we reached the end yet?
   644  07ED  3400               	retlw	0	;all done for this memory range, return
   645                           
   646                           	psect	cstackCOMMON
   647  0070                     __pcstackCOMMON:	
   648  0070                     ?_noolite_send:	
   649  0070                     ?_RF_Init:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ??_RF_Init:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ?_FlashEraseRow:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ?_FlashWrite:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ?_Init_CLK:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ??_Init_CLK:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ?_Init_IO:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ??_Init_IO:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ?_Init_ADC:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ??_Init_ADC:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ?_Init_TypeFromFlash:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ??_Init_TypeFromFlash:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ?_Init_TxStatusFromFlash:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ??_Init_TxStatusFromFlash:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ?_main:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ?_FlashUnlock:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ??_FlashUnlock:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     noolite_send@noo_send_command:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     FlashEraseRow@rowAddr:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0070                     FlashWrite@addr:	
   707                           ; 2 bytes @ 0x0
   708                           
   709                           
   710                           ; 2 bytes @ 0x0
   711  0070                     	ds	1
   712  0071                     noolite_send@noo_send_format:	
   713                           
   714                           ; 1 bytes @ 0x1
   715  0071                     	ds	1
   716  0072                     ??_FlashEraseRow:	
   717  0072                     noolite_send@data:	
   718                           ; 1 bytes @ 0x2
   719                           
   720  0072                     FlashWrite@flash_data:	
   721                           ; 1 bytes @ 0x2
   722                           
   723                           
   724                           ; 2 bytes @ 0x2
   725  0072                     	ds	1
   726  0073                     ??_noolite_send:	
   727                           
   728                           ; 1 bytes @ 0x3
   729  0073                     	ds	1
   730  0074                     ??_FlashWrite:	
   731  0074                     Init_TxStatusFromFlash@cellNum:	
   732                           ; 1 bytes @ 0x4
   733                           
   734                           
   735                           ; 1 bytes @ 0x4
   736  0074                     	ds	7
   737  007B                     ?_KeyOffHandler:	
   738  007B                     KeyOffHandler@chn:	
   739                           ; 1 bytes @ 0xB
   740                           
   741                           
   742                           ; 1 bytes @ 0xB
   743  007B                     	ds	1
   744  007C                     KeyOffHandler@cmd:	
   745                           
   746                           ; 1 bytes @ 0xC
   747  007C                     	ds	1
   748  007D                     ??_KeyOffHandler:	
   749                           
   750                           ; 1 bytes @ 0xD
   751  007D                     	ds	1
   752                           
   753                           	psect	cstackBANK0
   754  0044                     __pcstackBANK0:	
   755  0044                     noolite_send@noo_send_buffer:	
   756                           
   757                           ; 12 bytes @ 0x0
   758  0044                     	ds	12
   759  0050                     noolite_send@startpos:	
   760                           
   761                           ; 1 bytes @ 0xC
   762  0050                     	ds	1
   763  0051                     noolite_send@countbit:	
   764                           
   765                           ; 1 bytes @ 0xD
   766  0051                     	ds	1
   767  0052                     noolite_send@chn:	
   768                           
   769                           ; 1 bytes @ 0xE
   770  0052                     	ds	1
   771  0053                     noolite_send@countsend:	
   772                           
   773                           ; 1 bytes @ 0xF
   774  0053                     	ds	1
   775  0054                     noolite_send@temp_send:	
   776                           
   777                           ; 1 bytes @ 0x10
   778  0054                     	ds	1
   779  0055                     noolite_send@endpos:	
   780                           
   781                           ; 1 bytes @ 0x11
   782  0055                     	ds	1
   783  0056                     KeyOffHandler@key:	
   784                           
   785                           ; 1 bytes @ 0x12
   786  0056                     	ds	1
   787  0057                     ??_main:	
   788                           
   789                           ; 1 bytes @ 0x13
   790  0057                     	ds	4
   791  005B                     main@adrToWrite:	
   792                           
   793                           ; 2 bytes @ 0x17
   794  005B                     	ds	3
   795  005E                     main@cellNum:	
   796                           
   797                           ; 1 bytes @ 0x1A
   798  005E                     	ds	1
   799  005F                     main@chn:	
   800                           
   801                           ; 1 bytes @ 0x1B
   802  005F                     	ds	1
   803  0060                     main@chn_427:	
   804                           
   805                           ; 1 bytes @ 0x1C
   806  0060                     	ds	1
   807  0061                     main@chn_428:	
   808                           
   809                           ; 1 bytes @ 0x1D
   810  0061                     	ds	1
   811  0062                     main@chn_429:	
   812                           
   813                           ; 1 bytes @ 0x1E
   814  0062                     	ds	1
   815                           
   816                           	psect	maintext
   817  0453                     __pmaintext:	
   818 ;;
   819 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   820 ;;
   821 ;; *************** function _main *****************
   822 ;; Defined at:
   823 ;;		line 294 in file "main.c"
   824 ;; Parameters:    Size  Location     Type
   825 ;;		None
   826 ;; Auto vars:     Size  Location     Type
   827 ;;  adrToWrite      2   23[BANK0 ] unsigned int 
   828 ;;  chn             1   30[BANK0 ] unsigned char 
   829 ;;  chn             1   29[BANK0 ] unsigned char 
   830 ;;  chn             1   28[BANK0 ] unsigned char 
   831 ;;  chn             1   27[BANK0 ] unsigned char 
   832 ;;  cellNum         1   26[BANK0 ] unsigned char 
   833 ;;  chn             1    0        unsigned char 
   834 ;; Return value:  Size  Location     Type
   835 ;;                  1    wreg      void 
   836 ;; Registers used:
   837 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   838 ;; Tracked objects:
   839 ;;		On entry : B1F/0
   840 ;;		On exit  : 0/0
   841 ;;		Unchanged: 0/0
   842 ;; Data sizes:     COMMON   BANK0   BANK1
   843 ;;      Params:         0       0       0
   844 ;;      Locals:         0       8       0
   845 ;;      Temps:          0       4       0
   846 ;;      Totals:         0      12       0
   847 ;;Total ram usage:       12 bytes
   848 ;; Hardware stack levels required when called:    2
   849 ;; This function calls:
   850 ;;		_FlashEraseRow
   851 ;;		_FlashWrite
   852 ;;		_Init_ADC
   853 ;;		_Init_CLK
   854 ;;		_Init_IO
   855 ;;		_Init_TxStatusFromFlash
   856 ;;		_Init_TypeFromFlash
   857 ;;		_KeyOffHandler
   858 ;;		_RF_Init
   859 ;;		_noolite_send
   860 ;; This function is called by:
   861 ;;		Startup code after reset
   862 ;; This function uses a non-reentrant model
   863 ;;
   864                           
   865                           
   866                           ;psect for function _main
   867  0453                     _main:	
   868                           
   869                           ;main.c: 295: Init_IO();
   870                           
   871                           ;incstack = 0
   872                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   873  0453  2111               	fcall	_Init_IO
   874                           
   875                           ;main.c: 296: Init_CLK();
   876  0454  2104               	fcall	_Init_CLK
   877                           
   878                           ;main.c: 298: Init_ADC();
   879  0455  20EB               	fcall	_Init_ADC
   880                           
   881                           ;main.c: 299: RF_Init();
   882  0456  222E               	fcall	_RF_Init
   883                           
   884                           ;main.c: 301: LATCbits.LATC5 = 1;
   885  0457  0022               	movlb	2	; select bank2
   886  0458  168E               	bsf	14,5	;volatile
   887                           
   888                           ;main.c: 302: DevType = Init_TypeFromFlash();
   889  0459  2134               	fcall	_Init_TypeFromFlash
   890  045A  0020               	movlb	0	; select bank0
   891  045B  00A7               	movwf	_DevType
   892                           
   893                           ;main.c: 303: tx_status = Init_TxStatusFromFlash();
   894  045C  21A7               	fcall	_Init_TxStatusFromFlash
   895  045D  00AB               	movwf	_tx_status
   896                           
   897                           ;main.c: 306: INTCONbits.PEIE = 1;
   898  045E  170B               	bsf	11,6	;volatile
   899                           
   900                           ;main.c: 307: INTCONbits.GIE = 1;
   901  045F  178B               	bsf	11,7	;volatile
   902  0460                     l1870:	
   903                           
   904                           ;main.c: 310: Keys[0].State = (uint8_t) (PORTA & A_Pressed);
   905  0460  0020               	movlb	0	; select bank0
   906  0461  080C               	movf	12,w	;volatile
   907  0462  00AC               	movwf	_Keys
   908  0463  3002               	movlw	2
   909  0464  05AC               	andwf	_Keys,f
   910                           
   911                           ;main.c: 311: Keys[1].State = (uint8_t) (PORTA & B_Pressed);
   912  0465  080C               	movf	12,w	;volatile
   913  0466  00B0               	movwf	_Keys+4
   914  0467  3001               	movlw	1
   915  0468  05B0               	andwf	_Keys+4,f
   916                           
   917                           ;main.c: 312: Keys[2].State = (uint8_t) (PORTA & C_Pressed);
   918  0469  080C               	movf	12,w	;volatile
   919  046A  00B4               	movwf	_Keys+8
   920  046B  3004               	movlw	4
   921  046C  05B4               	andwf	_Keys+8,f
   922                           
   923                           ;main.c: 313: Keys[3].State = (uint8_t) (PORTA & D_Pressed);
   924  046D  080C               	movf	12,w	;volatile
   925  046E  00B8               	movwf	_Keys+12
   926  046F  3010               	movlw	16
   927  0470  05B8               	andwf	_Keys+12,f
   928                           
   929                           ;main.c: 314: Keys[4].State = (uint8_t) (PORTA & (C_Pressed | D_Pressed));
   930  0471  080C               	movf	12,w	;volatile
   931  0472  00BC               	movwf	_Keys+16
   932  0473  3014               	movlw	20
   933  0474  05BC               	andwf	_Keys+16,f
   934                           
   935                           ;main.c: 315: if (Keys[4].State == (C_Pressed | D_Pressed)) {
   936  0475  063C               	xorwf	_Keys+16,w
   937  0476  1D03               	btfss	3,2
   938  0477  2CAF               	goto	l1934
   939                           
   940                           ;main.c: 316: SkipHandling = 10;
   941  0478  300A               	movlw	10
   942  0479  00A5               	movwf	_SkipHandling
   943                           
   944                           ;main.c: 317: if (Keys[4].Tick100ms < 15) {
   945  047A  300F               	movlw	15
   946  047B  023E               	subwf	_Keys+18,w
   947  047C  1803               	skipnc
   948  047D  2C82               	goto	l1900
   949                           
   950                           ;main.c: 318: DevMode &= ~(UNBIND_ACTIVE | MODE_CHANGE_ACTIVE);
   951  047E  30F9               	movlw	249
   952  047F  05A6               	andwf	_DevMode,f
   953                           
   954                           ;main.c: 319: DevMode |= BIND_ACTIVE;
   955  0480  1426               	bsf	_DevMode,0
   956                           
   957                           ;main.c: 321: } else if ((Keys[4].Tick100ms >= 35) && (Keys[4].Tick100ms < 49)) {
   958  0481  2CA9               	goto	l1898
   959  0482                     l1900:	
   960  0482  3023               	movlw	35
   961  0483  023E               	subwf	_Keys+18,w
   962  0484  1C03               	skipc
   963  0485  2C8C               	goto	l1906
   964  0486  3031               	movlw	49
   965  0487  023E               	subwf	_Keys+18,w
   966  0488  1803               	skipnc
   967  0489  2C8C               	goto	l1906
   968                           
   969                           ;main.c: 322: DevMode &= ~BIND_ACTIVE;
   970  048A  1026               	bcf	_DevMode,0
   971                           
   972                           ;main.c: 323: } else if ((Keys[4].Tick100ms >= 50) && (Keys[4].Tick100ms < 85)) {
   973  048B  2CAB               	goto	l142
   974  048C                     l1906:	
   975  048C  3032               	movlw	50
   976  048D  023E               	subwf	_Keys+18,w
   977  048E  3055               	movlw	85
   978  048F  1C03               	skipc
   979  0490  2C99               	goto	L3
   980  0491  023E               	subwf	_Keys+18,w
   981  0492  1803               	skipnc
   982  0493  2C98               	goto	l1916
   983                           
   984                           ;main.c: 324: DevMode &= ~(BIND_ACTIVE | MODE_CHANGE_ACTIVE);
   985  0494  30FA               	movlw	250
   986  0495  05A6               	andwf	_DevMode,f
   987                           
   988                           ;main.c: 325: DevMode |= UNBIND_ACTIVE;
   989  0496  14A6               	bsf	_DevMode,1
   990  0497  2CA9               	goto	l1898
   991  0498                     l1916:	
   992  0498  3055               	movlw	85
   993  0499                     L3:	
   994  0499  023E               	subwf	_Keys+18,w
   995  049A  1C03               	skipc
   996  049B  2CA2               	goto	l1922
   997  049C  3063               	movlw	99
   998  049D  023E               	subwf	_Keys+18,w
   999  049E  1803               	skipnc
  1000  049F  2CA2               	goto	l1922
  1001                           
  1002                           ;main.c: 328: DevMode &= ~UNBIND_ACTIVE;
  1003  04A0  10A6               	bcf	_DevMode,1
  1004                           
  1005                           ;main.c: 329: } else if (Keys[4].Tick100ms >= 100) {
  1006  04A1  2CAB               	goto	l142
  1007  04A2                     l1922:	
  1008  04A2  3064               	movlw	100
  1009  04A3  023E               	subwf	_Keys+18,w
  1010  04A4  1C03               	skipc
  1011  04A5  2CAB               	goto	l142
  1012                           
  1013                           ;main.c: 330: DevMode &= ~(BIND_ACTIVE | UNBIND_ACTIVE);
  1014  04A6  30FC               	movlw	252
  1015  04A7  05A6               	andwf	_DevMode,f
  1016                           
  1017                           ;main.c: 331: DevMode |= MODE_CHANGE_ACTIVE;
  1018  04A8  1526               	bsf	_DevMode,2
  1019  04A9                     l1898:	
  1020                           
  1021                           ;main.c: 320: tick3_100ms = 100;
  1022  04A9  3064               	movlw	100
  1023  04AA  00A8               	movwf	_tick3_100ms
  1024  04AB                     l142:	
  1025                           
  1026                           ;main.c: 333: }
  1027                           ;main.c: 334: Keys[4].Tick100ms++;
  1028  04AB  0ABE               	incf	_Keys+18,f
  1029                           
  1030                           ;main.c: 336: Keys[2].StateTemp = 0;
  1031  04AC  01B5               	clrf	_Keys+9
  1032                           
  1033                           ;main.c: 337: Keys[3].StateTemp = 0;
  1034  04AD  01B9               	clrf	_Keys+13
  1035                           
  1036                           ;main.c: 338: } else {
  1037  04AE  2CB0               	goto	l1936
  1038  04AF                     l1934:	
  1039                           
  1040                           ;main.c: 339: Keys[4].Tick100ms = 0;
  1041  04AF  01BE               	clrf	_Keys+18
  1042  04B0                     l1936:	
  1043                           
  1044                           ;main.c: 340: }
  1045                           ;main.c: 342: if (tick3_100ms != 0) {
  1046  04B0  0828               	movf	_tick3_100ms,w
  1047  04B1  1903               	btfsc	3,2
  1048  04B2  2CDF               	goto	l1956
  1049                           
  1050                           ;main.c: 343: tick3_100ms--;
  1051  04B3  03A8               	decf	_tick3_100ms,f
  1052                           
  1053                           ;main.c: 344: switch (DevMode & 0x07) {
  1054  04B4  2CCB               	goto	l1954
  1055  04B5                     l153:	
  1056                           ;main.c: 345: case BIND_ACTIVE:
  1057                           
  1058                           
  1059                           ;main.c: 346: LATCbits.LATC3 = ON;
  1060  04B5  0022               	movlb	2	; select bank2
  1061  04B6  158E               	bsf	14,3	;volatile
  1062                           
  1063                           ;main.c: 347: break;
  1064  04B7  2CE3               	goto	l160
  1065  04B8                     l1940:	
  1066                           
  1067                           ;main.c: 349: if (LedPulseTick_100ms++ > 2) {
  1068  04B8  0829               	movf	_LedPulseTick_100ms,w
  1069  04B9  0AA9               	incf	_LedPulseTick_100ms,f
  1070  04BA  00D7               	movwf	??_main
  1071  04BB  3003               	movlw	3
  1072  04BC  0257               	subwf	??_main,w
  1073  04BD  1C03               	skipc
  1074  04BE  2CE3               	goto	l160
  1075  04BF                     l1942:	
  1076                           
  1077                           ;main.c: 350: LATCbits.LATC3 = ~LATCbits.LATC3;
  1078  04BF  3008               	movlw	8
  1079  04C0  0022               	movlb	2	; select bank2
  1080  04C1  068E               	xorwf	14,f	;volatile
  1081                           
  1082                           ;main.c: 351: LedPulseTick_100ms = 0;
  1083  04C2  0020               	movlb	0	; select bank0
  1084  04C3  01A9               	clrf	_LedPulseTick_100ms
  1085  04C4  2CE3               	goto	l160
  1086  04C5                     l1946:	
  1087                           
  1088                           ;main.c: 355: if (LedPulseTick_100ms++ > 0) {
  1089  04C5  0AA9               	incf	_LedPulseTick_100ms,f
  1090  04C6  0329               	decf	_LedPulseTick_100ms,w
  1091  04C7  1903               	btfsc	3,2
  1092  04C8  2CE3               	goto	l160
  1093  04C9  2CBF               	goto	l1942
  1094  04CA                     l159:	
  1095                           ;main.c: 360: default:
  1096                           
  1097                           ;main.c: 356: LATCbits.LATC3 = ~LATCbits.LATC3;
  1098                           
  1099  04CA  2CE1               	goto	l1958
  1100  04CB                     l1954:	
  1101                           ;main.c: 362: break;
  1102                           
  1103                           ;main.c: 361: LATCbits.LATC3 = OFF;
  1104                           
  1105  04CB  0826               	movf	_DevMode,w
  1106  04CC  3907               	andlw	7
  1107  04CD  00D7               	movwf	??_main
  1108  04CE  01D8               	clrf	??_main+1
  1109                           
  1110                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1111                           ; Switch size 1, requested type "space"
  1112                           ; Number of cases is 1, Range of values is 0 to 0
  1113                           ; switch strategies available:
  1114                           ; Name         Instructions Cycles
  1115                           ; simple_byte            4     3 (average)
  1116                           ; direct_byte            8     6 (fixed)
  1117                           ; jumptable            260     6 (fixed)
  1118                           ;	Chosen strategy is simple_byte
  1119  04CF  0858               	movf	??_main+1,w
  1120  04D0  3A00               	xorlw	0	; case 0
  1121  04D1  1903               	skipnz
  1122  04D2  2CD4               	goto	l2302
  1123  04D3  2CCA               	goto	l159
  1124  04D4                     l2302:	
  1125                           
  1126                           ; Switch size 1, requested type "space"
  1127                           ; Number of cases is 3, Range of values is 1 to 4
  1128                           ; switch strategies available:
  1129                           ; Name         Instructions Cycles
  1130                           ; simple_byte           10     6 (average)
  1131                           ; direct_byte           17     9 (fixed)
  1132                           ; jumptable            263     9 (fixed)
  1133                           ;	Chosen strategy is simple_byte
  1134  04D4  0857               	movf	??_main,w
  1135  04D5  3A01               	xorlw	1	; case 1
  1136  04D6  1903               	skipnz
  1137  04D7  2CB5               	goto	l153
  1138  04D8  3A03               	xorlw	3	; case 2
  1139  04D9  1903               	skipnz
  1140  04DA  2CB8               	goto	l1940
  1141  04DB  3A06               	xorlw	6	; case 4
  1142  04DC  1903               	skipnz
  1143  04DD  2CC5               	goto	l1946
  1144  04DE  2CCA               	goto	l159
  1145  04DF                     l1956:	
  1146                           
  1147                           ;main.c: 365: DevMode &= ~(BIND_ACTIVE | UNBIND_ACTIVE | MODE_CHANGE_ACTIVE);
  1148  04DF  30F8               	movlw	248
  1149  04E0  05A6               	andwf	_DevMode,f
  1150  04E1                     l1958:	
  1151                           
  1152                           ;main.c: 366: LATCbits.LATC3 = OFF;
  1153  04E1  0022               	movlb	2	; select bank2
  1154  04E2  118E               	bcf	14,3	;volatile
  1155  04E3                     l160:	
  1156                           
  1157                           ;main.c: 367: }
  1158                           ;main.c: 369: if (SkipHandling != 0) {
  1159  04E3  0020               	movlb	0	; select bank0
  1160  04E4  0825               	movf	_SkipHandling,w
  1161  04E5  1903               	btfsc	3,2
  1162  04E6  2CEC               	goto	l161
  1163                           
  1164                           ;main.c: 370: if (Keys[4].State == 0) {
  1165  04E7  083C               	movf	_Keys+16,w
  1166  04E8  1D03               	btfss	3,2
  1167  04E9  2F3B               	goto	l2208
  1168                           
  1169                           ;main.c: 371: SkipHandling--;
  1170  04EA  03A5               	decf	_SkipHandling,f
  1171  04EB  2F3B               	goto	l2208
  1172  04EC                     l161:	
  1173                           
  1174                           ;main.c: 374: if ((DevMode & BIND_ACTIVE) != 0) {
  1175  04EC  1C26               	btfss	_DevMode,0
  1176  04ED  2D24               	goto	l164
  1177                           
  1178                           ;main.c: 375: for (uint8_t chn = 0; chn < 4; chn++) {
  1179  04EE  01DF               	clrf	main@chn
  1180  04EF                     l1970:	
  1181                           
  1182                           ;main.c: 376: if (Keys[chn].State != Keys[chn].StateTemp) {
  1183  04EF  085F               	movf	main@chn,w
  1184  04F0  0709               	addwf	9,w
  1185  04F1  0709               	addwf	9,w
  1186  04F2  3E2D               	addlw	(low ((_Keys| 0+1)))& (0+255)
  1187  04F3  0086               	movwf	6
  1188  04F4  0187               	clrf	7
  1189  04F5  085F               	movf	main@chn,w
  1190  04F6  0709               	addwf	9,w
  1191  04F7  0709               	addwf	9,w
  1192  04F8  3E2C               	addlw	(low (_Keys| 0))& (0+255)
  1193  04F9  0084               	movwf	4
  1194  04FA  0185               	clrf	5
  1195  04FB  0800               	movf	0,w
  1196  04FC  0601               	xorwf	1,w
  1197  04FD  1903               	skipnz
  1198  04FE  2D1E               	goto	l1980
  1199                           
  1200                           ;main.c: 377: if (Keys[chn].State == 0) {
  1201  04FF  085F               	movf	main@chn,w
  1202  0500  0709               	addwf	9,w
  1203  0501  0709               	addwf	9,w
  1204  0502  3E2C               	addlw	(low (_Keys| 0))& (0+255)
  1205  0503  0086               	movwf	6
  1206  0504  0801               	movf	1,w
  1207  0505  1D03               	btfss	3,2
  1208  0506  2D10               	goto	l1978
  1209                           
  1210                           ;main.c: 378: noolite_send(chn, 15, 0, &noo_send_data[0]);
  1211  0507  300F               	movlw	15
  1212  0508  00F0               	movwf	noolite_send@noo_send_command
  1213  0509  3040               	movlw	(low (_noo_send_data| 0))& (0+255)
  1214  050A  01F1               	clrf	noolite_send@noo_send_format
  1215  050B  00F2               	movwf	noolite_send@data
  1216  050C  085F               	movf	main@chn,w
  1217  050D  22B9               	fcall	_noolite_send
  1218                           
  1219                           ;main.c: 379: DevMode &= ~BIND_ACTIVE;
  1220  050E  0020               	movlb	0	; select bank0
  1221  050F  1026               	bcf	_DevMode,0
  1222  0510                     l1978:	
  1223                           
  1224                           ;main.c: 380: }
  1225                           ;main.c: 381: Keys[chn].StateTemp = Keys[chn].State;
  1226  0510  085F               	movf	main@chn,w
  1227  0511  0709               	addwf	9,w
  1228  0512  0709               	addwf	9,w
  1229  0513  3E2D               	addlw	(low ((_Keys| 0+1)))& (0+255)
  1230  0514  0086               	movwf	6
  1231  0515  0187               	clrf	7
  1232  0516  085F               	movf	main@chn,w
  1233  0517  0709               	addwf	9,w
  1234  0518  0709               	addwf	9,w
  1235  0519  3E2C               	addlw	(low (_Keys| 0))& (0+255)
  1236  051A  0084               	movwf	4
  1237  051B  0185               	clrf	5
  1238  051C  0800               	movf	0,w
  1239  051D  0081               	movwf	1
  1240  051E                     l1980:	
  1241  051E  3004               	movlw	4
  1242  051F  0ADF               	incf	main@chn,f
  1243  0520  025F               	subwf	main@chn,w
  1244  0521  1803               	btfsc	3,0
  1245  0522  2F3B               	goto	l2208
  1246  0523  2CEF               	goto	l1970
  1247  0524                     l164:	
  1248  0524  1CA6               	btfss	_DevMode,1
  1249  0525  2D5F               	goto	l170
  1250                           
  1251                           ;main.c: 385: for (uint8_t chn = 0; chn < 4; chn++) {
  1252  0526  01E0               	clrf	main@chn_427
  1253  0527                     l1986:	
  1254  0527  3004               	movlw	4
  1255  0528  0260               	subwf	main@chn_427,w
  1256  0529  1803               	btfsc	3,0
  1257  052A  2F3B               	goto	l2208
  1258                           
  1259                           ;main.c: 386: if (Keys[chn].State != Keys[chn].StateTemp) {
  1260  052B  0860               	movf	main@chn_427,w
  1261  052C  0709               	addwf	9,w
  1262  052D  0709               	addwf	9,w
  1263  052E  3E2D               	addlw	(low ((_Keys| 0+1)))& (0+255)
  1264  052F  0086               	movwf	6
  1265  0530  0187               	clrf	7
  1266  0531  0860               	movf	main@chn_427,w
  1267  0532  0709               	addwf	9,w
  1268  0533  0709               	addwf	9,w
  1269  0534  3E2C               	addlw	(low (_Keys| 0))& (0+255)
  1270  0535  0084               	movwf	4
  1271  0536  0185               	clrf	5
  1272  0537  0800               	movf	0,w
  1273  0538  0601               	xorwf	1,w
  1274  0539  1903               	skipnz
  1275  053A  2D5D               	goto	l2002
  1276                           
  1277                           ;main.c: 387: if (Keys[chn].State == 0) {
  1278  053B  0860               	movf	main@chn_427,w
  1279  053C  0709               	addwf	9,w
  1280  053D  0709               	addwf	9,w
  1281  053E  3E2C               	addlw	(low (_Keys| 0))& (0+255)
  1282  053F  0086               	movwf	6
  1283  0540  0801               	movf	1,w
  1284  0541  1D03               	btfss	3,2
  1285  0542  2D4E               	goto	l2000
  1286                           
  1287                           ;main.c: 388: noolite_send(chn, 9, 0, &noo_send_data[0]);
  1288  0543  3009               	movlw	9
  1289  0544  00F0               	movwf	noolite_send@noo_send_command
  1290  0545  3040               	movlw	(low (_noo_send_data| 0))& (0+255)
  1291  0546  01F1               	clrf	noolite_send@noo_send_format
  1292  0547  00F2               	movwf	noolite_send@data
  1293  0548  0860               	movf	main@chn_427,w
  1294  0549  22B9               	fcall	_noolite_send
  1295                           
  1296                           ;main.c: 389: DevMode &= ~UNBIND_ACTIVE;
  1297  054A  0020               	movlb	0	; select bank0
  1298  054B  10A6               	bcf	_DevMode,1
  1299                           
  1300                           ;main.c: 390: LATCbits.LATC3 = OFF;
  1301  054C  0022               	movlb	2	; select bank2
  1302  054D  118E               	bcf	14,3	;volatile
  1303  054E                     l2000:	
  1304                           
  1305                           ;main.c: 391: }
  1306                           ;main.c: 392: Keys[chn].StateTemp = Keys[chn].State;
  1307  054E  0020               	movlb	0	; select bank0
  1308  054F  0860               	movf	main@chn_427,w
  1309  0550  0709               	addwf	9,w
  1310  0551  0709               	addwf	9,w
  1311  0552  3E2D               	addlw	(low ((_Keys| 0+1)))& (0+255)
  1312  0553  0086               	movwf	6
  1313  0554  0187               	clrf	7
  1314  0555  0860               	movf	main@chn_427,w
  1315  0556  0709               	addwf	9,w
  1316  0557  0709               	addwf	9,w
  1317  0558  3E2C               	addlw	(low (_Keys| 0))& (0+255)
  1318  0559  0084               	movwf	4
  1319  055A  0185               	clrf	5
  1320  055B  0800               	movf	0,w
  1321  055C  0081               	movwf	1
  1322  055D                     l2002:	
  1323  055D  0AE0               	incf	main@chn_427,f
  1324  055E  2D27               	goto	l1986
  1325  055F                     l170:	
  1326  055F  1D26               	btfss	_DevMode,2
  1327  0560  2DF4               	goto	l2054
  1328                           
  1329                           ;main.c: 396: for (uint8_t chn = 0; chn < 4; chn++) {
  1330  0561  01E1               	clrf	main@chn_428
  1331  0562                     l2008:	
  1332  0562  3004               	movlw	4
  1333  0563  0261               	subwf	main@chn_428,w
  1334  0564  1803               	btfsc	3,0
  1335  0565  2F3B               	goto	l2208
  1336                           
  1337                           ;main.c: 397: if (Keys[chn].State != Keys[chn].StateTemp) {
  1338  0566  0861               	movf	main@chn_428,w
  1339  0567  0709               	addwf	9,w
  1340  0568  0709               	addwf	9,w
  1341  0569  3E2D               	addlw	(low ((_Keys| 0+1)))& (0+255)
  1342  056A  0086               	movwf	6
  1343  056B  0187               	clrf	7
  1344  056C  0861               	movf	main@chn_428,w
  1345  056D  0709               	addwf	9,w
  1346  056E  0709               	addwf	9,w
  1347  056F  3E2C               	addlw	(low (_Keys| 0))& (0+255)
  1348  0570  0084               	movwf	4
  1349  0571  0185               	clrf	5
  1350  0572  0800               	movf	0,w
  1351  0573  0601               	xorwf	1,w
  1352  0574  1903               	skipnz
  1353  0575  2DF2               	goto	l2050
  1354                           
  1355                           ;main.c: 398: if (Keys[chn].State == 0) {
  1356  0576  0861               	movf	main@chn_428,w
  1357  0577  0709               	addwf	9,w
  1358  0578  0709               	addwf	9,w
  1359  0579  3E2C               	addlw	(low (_Keys| 0))& (0+255)
  1360  057A  0086               	movwf	6
  1361  057B  0801               	movf	1,w
  1362  057C  1D03               	btfss	3,2
  1363  057D  2DE3               	goto	l2048
  1364                           
  1365                           ;main.c: 399: noo_send_data[0] = Type[0] >> 8;
  1366  057E  30C1               	movlw	193
  1367  057F  0084               	movwf	4
  1368  0580  3087               	movlw	135
  1369  0581  0085               	movwf	5
  1370  0582  0800               	movf	0,w	;code access
  1371  0583  00C0               	movwf	_noo_send_data
  1372                           
  1373                           ;main.c: 400: noo_send_data[1] = Type[0];
  1374  0584  30C0               	movlw	192
  1375  0585  0084               	movwf	4
  1376  0586  0800               	movf	0,w	;code access
  1377  0587  00C1               	movwf	_noo_send_data+1
  1378                           
  1379                           ;main.c: 401: noo_send_data[2] = DevType;
  1380  0588  0827               	movf	_DevType,w
  1381  0589  00C2               	movwf	_noo_send_data+2
  1382                           
  1383                           ;main.c: 402: noolite_send(chn, 22, 7, &noo_send_data[0]);
  1384  058A  3016               	movlw	22
  1385  058B  00F0               	movwf	noolite_send@noo_send_command
  1386  058C  3007               	movlw	7
  1387  058D  00F1               	movwf	noolite_send@noo_send_format
  1388  058E  3040               	movlw	(low (_noo_send_data| 0))& (0+255)
  1389  058F  00F2               	movwf	noolite_send@data
  1390  0590  0861               	movf	main@chn_428,w
  1391  0591  22B9               	fcall	_noolite_send
  1392                           
  1393                           ;main.c: 403: _delay((unsigned long)((500)*(8000000/4000.0)));
  1394  0592  3006               	movlw	6
  1395  0593  0020               	movlb	0	; select bank0
  1396  0594  00D8               	movwf	??_main+1
  1397  0595  3013               	movlw	19
  1398  0596  00D7               	movwf	??_main
  1399  0597  30AD               	movlw	173
  1400  0598                     u1867:	
  1401  0598  0B89               	decfsz	9,f
  1402  0599  2D98               	goto	u1867
  1403  059A  0BD7               	decfsz	??_main,f
  1404  059B  2D98               	goto	u1867
  1405  059C  0BD8               	decfsz	??_main+1,f
  1406  059D  2D98               	goto	u1867
  1407  059E  3200               	nop2
  1408  059F  0064               	clrwdt	;# 
  1409                           
  1410                           ;main.c: 405: LATCbits.LATC3 = ON;
  1411  05A0  0022               	movlb	2	; select bank2
  1412  05A1  158E               	bsf	14,3	;volatile
  1413                           
  1414                           ;main.c: 406: FlashEraseRow(0x7C0);
  1415  05A2  30C0               	movlw	192
  1416  05A3  00F0               	movwf	FlashEraseRow@rowAddr
  1417  05A4  3007               	movlw	7
  1418  05A5  00F1               	movwf	FlashEraseRow@rowAddr+1
  1419  05A6  20F7               	fcall	_FlashEraseRow
  1420  05A7  0064               	clrwdt	;# 
  1421                           
  1422                           ;main.c: 408: _delay((unsigned long)((500)*(8000000/4000.0)));
  1423  05A8  3006               	movlw	6
  1424  05A9  0020               	movlb	0	; select bank0
  1425  05AA  00D8               	movwf	??_main+1
  1426  05AB  3013               	movlw	19
  1427  05AC  00D7               	movwf	??_main
  1428  05AD  30AD               	movlw	173
  1429  05AE                     u1877:	
  1430  05AE  0B89               	decfsz	9,f
  1431  05AF  2DAE               	goto	u1877
  1432  05B0  0BD7               	decfsz	??_main,f
  1433  05B1  2DAE               	goto	u1877
  1434  05B2  0BD8               	decfsz	??_main+1,f
  1435  05B3  2DAE               	goto	u1877
  1436  05B4  3200               	nop2
  1437  05B5  0064               	clrwdt	;# 
  1438                           
  1439                           ;main.c: 410: FlashWrite(0x7C0, chn);
  1440  05B6  30C0               	movlw	192
  1441  05B7  00F0               	movwf	FlashWrite@addr
  1442  05B8  3007               	movlw	7
  1443  05B9  00F1               	movwf	FlashWrite@addr+1
  1444  05BA  0020               	movlb	0	; select bank0
  1445  05BB  0861               	movf	main@chn_428,w
  1446  05BC  00F2               	movwf	FlashWrite@flash_data
  1447  05BD  01F3               	clrf	FlashWrite@flash_data+1
  1448  05BE  2121               	fcall	_FlashWrite
  1449                           
  1450                           ;main.c: 411: FlashWrite(0x7C1, 0x5A);
  1451  05BF  30C1               	movlw	193
  1452  05C0  00F0               	movwf	FlashWrite@addr
  1453  05C1  3007               	movlw	7
  1454  05C2  00F1               	movwf	FlashWrite@addr+1
  1455  05C3  305A               	movlw	90
  1456  05C4  00F2               	movwf	FlashWrite@flash_data
  1457  05C5  01F3               	clrf	FlashWrite@flash_data+1
  1458  05C6  2121               	fcall	_FlashWrite
  1459  05C7  0064               	clrwdt	;# 
  1460                           
  1461                           ;main.c: 413: DevType = Init_TypeFromFlash();
  1462  05C8  2134               	fcall	_Init_TypeFromFlash
  1463  05C9  0020               	movlb	0	; select bank0
  1464  05CA  00A7               	movwf	_DevType
  1465                           
  1466                           ;main.c: 414: DevMode &= ~MODE_CHANGE_ACTIVE;
  1467  05CB  1126               	bcf	_DevMode,2
  1468                           
  1469                           ;main.c: 415: LATCbits.LATC3 = OFF;
  1470  05CC  0022               	movlb	2	; select bank2
  1471  05CD  118E               	bcf	14,3	;volatile
  1472                           
  1473                           ;main.c: 416: noo_send_data[0] = Type[0] >> 8;
  1474  05CE  30C1               	movlw	193
  1475  05CF  0084               	movwf	4
  1476  05D0  3087               	movlw	135
  1477  05D1  0085               	movwf	5
  1478  05D2  0800               	movf	0,w	;code access
  1479  05D3  0020               	movlb	0	; select bank0
  1480  05D4  00C0               	movwf	_noo_send_data
  1481                           
  1482                           ;main.c: 417: noo_send_data[1] = Type[0];
  1483  05D5  30C0               	movlw	192
  1484  05D6  0084               	movwf	4
  1485  05D7  0800               	movf	0,w	;code access
  1486  05D8  00C1               	movwf	_noo_send_data+1
  1487                           
  1488                           ;main.c: 418: noo_send_data[2] = DevType;
  1489  05D9  0827               	movf	_DevType,w
  1490  05DA  00C2               	movwf	_noo_send_data+2
  1491                           
  1492                           ;main.c: 419: noolite_send(chn, 22, 7, &noo_send_data[0]);
  1493  05DB  3016               	movlw	22
  1494  05DC  00F0               	movwf	noolite_send@noo_send_command
  1495  05DD  3007               	movlw	7
  1496  05DE  00F1               	movwf	noolite_send@noo_send_format
  1497  05DF  3040               	movlw	(low (_noo_send_data| 0))& (0+255)
  1498  05E0  00F2               	movwf	noolite_send@data
  1499  05E1  0861               	movf	main@chn_428,w
  1500  05E2  22B9               	fcall	_noolite_send
  1501  05E3                     l2048:	
  1502                           
  1503                           ;main.c: 420: }
  1504                           ;main.c: 421: Keys[chn].StateTemp = Keys[chn].State;
  1505  05E3  0020               	movlb	0	; select bank0
  1506  05E4  0861               	movf	main@chn_428,w
  1507  05E5  0709               	addwf	9,w
  1508  05E6  0709               	addwf	9,w
  1509  05E7  3E2D               	addlw	(low ((_Keys| 0+1)))& (0+255)
  1510  05E8  0086               	movwf	6
  1511  05E9  0187               	clrf	7
  1512  05EA  0861               	movf	main@chn_428,w
  1513  05EB  0709               	addwf	9,w
  1514  05EC  0709               	addwf	9,w
  1515  05ED  3E2C               	addlw	(low (_Keys| 0))& (0+255)
  1516  05EE  0084               	movwf	4
  1517  05EF  0185               	clrf	5
  1518  05F0  0800               	movf	0,w
  1519  05F1  0081               	movwf	1
  1520  05F2                     l2050:	
  1521  05F2  0AE1               	incf	main@chn_428,f
  1522  05F3  2D62               	goto	l2008
  1523  05F4                     l2054:	
  1524                           
  1525                           ;main.c: 426: for (uint8_t chn = 0; chn < 4; chn++) {
  1526  05F4  01E2               	clrf	main@chn_429
  1527  05F5                     l2056:	
  1528  05F5  3004               	movlw	4
  1529  05F6  0262               	subwf	main@chn_429,w
  1530  05F7  1803               	btfsc	3,0
  1531  05F8  2F3B               	goto	l2208
  1532                           
  1533                           ;main.c: 427: if (Keys[chn].State != Keys[chn].StateTemp) {
  1534  05F9  0862               	movf	main@chn_429,w
  1535  05FA  0709               	addwf	9,w
  1536  05FB  0709               	addwf	9,w
  1537  05FC  3E2D               	addlw	(low ((_Keys| 0+1)))& (0+255)
  1538  05FD  0086               	movwf	6
  1539  05FE  0187               	clrf	7
  1540  05FF  0862               	movf	main@chn_429,w
  1541  0600  0709               	addwf	9,w
  1542  0601  0709               	addwf	9,w
  1543  0602  3E2C               	addlw	(low (_Keys| 0))& (0+255)
  1544  0603  0084               	movwf	4
  1545  0604  0185               	clrf	5
  1546  0605  0800               	movf	0,w
  1547  0606  0601               	xorwf	1,w
  1548  0607  1D03               	btfss	3,2
  1549  0608  2E87               	goto	l2100
  1550  0609  2F2B               	goto	l2186
  1551  060A                     l2064:	
  1552                           
  1553                           ;main.c: 430: KeyOffHandler(&Keys[chn], chn, 4);
  1554  060A  0862               	movf	main@chn_429,w
  1555  060B  00FB               	movwf	KeyOffHandler@chn
  1556  060C  3004               	movlw	4
  1557  060D  00FC               	movwf	KeyOffHandler@cmd
  1558  060E  0862               	movf	main@chn_429,w
  1559  060F  0709               	addwf	9,w
  1560  0610  0709               	addwf	9,w
  1561  0611  3E2C               	addlw	(low (_Keys| 0))& (0+255)
  1562  0612  2148               	fcall	_KeyOffHandler
  1563                           
  1564                           ;main.c: 443: break;
  1565  0613  2E95               	goto	l2102
  1566  0614                     l2066:	
  1567                           
  1568                           ;main.c: 445: if (Keys[chn].State == 0) {
  1569  0614  0862               	movf	main@chn_429,w
  1570  0615  0709               	addwf	9,w
  1571  0616  0709               	addwf	9,w
  1572  0617  3E2C               	addlw	(low (_Keys| 0))& (0+255)
  1573  0618  0086               	movwf	6
  1574  0619  0187               	clrf	7
  1575  061A  0801               	movf	1,w
  1576  061B  1D03               	btfss	3,2
  1577  061C  2E95               	goto	l2102
  1578                           
  1579                           ;main.c: 446: if ((chn == 0) || (chn == 2)) {
  1580  061D  0862               	movf	main@chn_429,w
  1581  061E  1903               	btfsc	3,2
  1582  061F  2E24               	goto	l2072
  1583  0620  3002               	movlw	2
  1584  0621  0662               	xorwf	main@chn_429,w
  1585  0622  1D03               	btfss	3,2
  1586  0623  2E2D               	goto	l2074
  1587  0624                     l2072:	
  1588                           
  1589                           ;main.c: 447: KeyOffHandler(&Keys[chn], chn, 0);
  1590  0624  0862               	movf	main@chn_429,w
  1591  0625  00FB               	movwf	KeyOffHandler@chn
  1592  0626  01FC               	clrf	KeyOffHandler@cmd
  1593  0627  0862               	movf	main@chn_429,w
  1594  0628  0709               	addwf	9,w
  1595  0629  0709               	addwf	9,w
  1596  062A  3E2C               	addlw	(low (_Keys| 0))& (0+255)
  1597  062B  2148               	fcall	_KeyOffHandler
  1598                           
  1599                           ;main.c: 448: } else {
  1600  062C  2E95               	goto	l2102
  1601  062D                     l2074:	
  1602                           
  1603                           ;main.c: 449: KeyOffHandler(&Keys[chn], chn, 2);
  1604  062D  0862               	movf	main@chn_429,w
  1605  062E  00FB               	movwf	KeyOffHandler@chn
  1606  062F  3002               	movlw	2
  1607  0630  00FC               	movwf	KeyOffHandler@cmd
  1608  0631  0862               	movf	main@chn_429,w
  1609  0632  0709               	addwf	9,w
  1610  0633  0709               	addwf	9,w
  1611  0634  3E2C               	addlw	(low (_Keys| 0))& (0+255)
  1612  0635  2148               	fcall	_KeyOffHandler
  1613                           
  1614                           ;main.c: 450: }
  1615                           ;main.c: 465: }
  1616                           ;main.c: 466: break;
  1617  0636  2E95               	goto	l2102
  1618  0637                     l2076:	
  1619                           
  1620                           ;main.c: 468: if (chn > 1) {
  1621  0637  3002               	movlw	2
  1622  0638  0262               	subwf	main@chn_429,w
  1623                           
  1624                           ;main.c: 469: if (Keys[chn].State == 0) {
  1625  0639  0862               	movf	main@chn_429,w
  1626  063A  1C03               	skipc
  1627  063B  2E59               	goto	L4
  1628  063C  0709               	addwf	9,w
  1629  063D  0709               	addwf	9,w
  1630  063E  3E2C               	addlw	(low (_Keys| 0))& (0+255)
  1631  063F  0086               	movwf	6
  1632  0640  0187               	clrf	7
  1633  0641  0801               	movf	1,w
  1634  0642  1D03               	btfss	3,2
  1635  0643  2E95               	goto	l2102
  1636                           
  1637                           ;main.c: 470: if (Keys[chn].Tick100ms < 10) {
  1638  0644  0862               	movf	main@chn_429,w
  1639  0645  0709               	addwf	9,w
  1640  0646  0709               	addwf	9,w
  1641  0647  3E2E               	addlw	(low ((_Keys| 0+2)))& (0+255)
  1642  0648  0086               	movwf	6
  1643  0649  300A               	movlw	10
  1644  064A  0201               	subwf	1,w
  1645  064B  1803               	skipnc
  1646  064C  2E95               	goto	l2102
  1647                           
  1648                           ;main.c: 471: if (chn > 1) {
  1649  064D  3002               	movlw	2
  1650  064E  0262               	subwf	main@chn_429,w
  1651  064F  1C03               	skipc
  1652  0650  2E95               	goto	l2102
  1653                           
  1654                           ;main.c: 472: noolite_send(chn, 7, 0, &noo_send_data[0]);
  1655  0651  3007               	movlw	7
  1656  0652  00F0               	movwf	noolite_send@noo_send_command
  1657  0653  3040               	movlw	(low (_noo_send_data| 0))& (0+255)
  1658  0654  01F1               	clrf	noolite_send@noo_send_format
  1659  0655  00F2               	movwf	noolite_send@data
  1660  0656  0862               	movf	main@chn_429,w
  1661  0657  22B9               	fcall	_noolite_send
  1662  0658  2E95               	goto	l2102
  1663  0659                     L4:	
  1664                           ;main.c: 477: KeyOffHandler(&Keys[chn], chn, 4);
  1665                           
  1666  0659  00FB               	movwf	KeyOffHandler@chn
  1667  065A  3004               	movlw	4
  1668  065B  00FC               	movwf	KeyOffHandler@cmd
  1669  065C  0862               	movf	main@chn_429,w
  1670  065D  0709               	addwf	9,w
  1671  065E  0709               	addwf	9,w
  1672  065F  3E2C               	addlw	(low (_Keys| 0))& (0+255)
  1673  0660  2148               	fcall	_KeyOffHandler
  1674  0661  2E95               	goto	l2102
  1675  0662                     l2088:	
  1676                           
  1677                           ;main.c: 493: if (chn > 1) {
  1678  0662  3002               	movlw	2
  1679  0663  0262               	subwf	main@chn_429,w
  1680                           
  1681                           ;main.c: 494: if (Keys[chn].State) {
  1682  0664  0862               	movf	main@chn_429,w
  1683  0665  1C03               	skipc
  1684  0666  2E7E               	goto	L5
  1685  0667  0709               	addwf	9,w
  1686  0668  0709               	addwf	9,w
  1687  0669  3E2C               	addlw	(low (_Keys| 0))& (0+255)
  1688  066A  0086               	movwf	6
  1689  066B  0187               	clrf	7
  1690  066C  0801               	movf	1,w
  1691  066D  1903               	btfsc	3,2
  1692  066E  2E77               	goto	l2094
  1693                           
  1694                           ;main.c: 495: noolite_send(chn, 2, 0, &noo_send_data[0]);
  1695  066F  3002               	movlw	2
  1696  0670  00F0               	movwf	noolite_send@noo_send_command
  1697  0671  3040               	movlw	(low (_noo_send_data| 0))& (0+255)
  1698  0672  01F1               	clrf	noolite_send@noo_send_format
  1699  0673  00F2               	movwf	noolite_send@data
  1700  0674  0862               	movf	main@chn_429,w
  1701  0675  22B9               	fcall	_noolite_send
  1702                           
  1703                           ;main.c: 496: } else {
  1704  0676  2E95               	goto	l2102
  1705  0677                     l2094:	
  1706  0677  3040               	movlw	(low (_noo_send_data| 0))& (0+255)
  1707                           
  1708                           ;main.c: 497: noolite_send(chn, 0, 0, &noo_send_data[0]);
  1709  0678  01F0               	clrf	noolite_send@noo_send_command
  1710  0679  01F1               	clrf	noolite_send@noo_send_format
  1711  067A  00F2               	movwf	noolite_send@data
  1712  067B  0862               	movf	main@chn_429,w
  1713  067C  22B9               	fcall	_noolite_send
  1714  067D  2E95               	goto	l2102
  1715  067E                     L5:	
  1716                           ;main.c: 500: KeyOffHandler(&Keys[chn], chn, 4);
  1717                           
  1718  067E  00FB               	movwf	KeyOffHandler@chn
  1719  067F  3004               	movlw	4
  1720  0680  00FC               	movwf	KeyOffHandler@cmd
  1721  0681  0862               	movf	main@chn_429,w
  1722  0682  0709               	addwf	9,w
  1723  0683  0709               	addwf	9,w
  1724  0684  3E2C               	addlw	(low (_Keys| 0))& (0+255)
  1725  0685  2148               	fcall	_KeyOffHandler
  1726  0686  2E95               	goto	l2102
  1727  0687                     l2100:	
  1728  0687  0827               	movf	_DevType,w
  1729                           
  1730                           ; Switch size 1, requested type "space"
  1731                           ; Number of cases is 4, Range of values is 0 to 3
  1732                           ; switch strategies available:
  1733                           ; Name         Instructions Cycles
  1734                           ; simple_byte           13     7 (average)
  1735                           ; direct_byte           14     6 (fixed)
  1736                           ; jumptable            260     6 (fixed)
  1737                           ;	Chosen strategy is simple_byte
  1738  0688  3A00               	xorlw	0	; case 0
  1739  0689  1903               	skipnz
  1740  068A  2E0A               	goto	l2064
  1741  068B  3A01               	xorlw	1	; case 1
  1742  068C  1903               	skipnz
  1743  068D  2E14               	goto	l2066
  1744  068E  3A03               	xorlw	3	; case 2
  1745  068F  1903               	skipnz
  1746  0690  2E37               	goto	l2076
  1747  0691  3A01               	xorlw	1	; case 3
  1748  0692  1903               	skipnz
  1749  0693  2E62               	goto	l2088
  1750  0694  2E95               	goto	l2102
  1751  0695                     l2102:	
  1752                           
  1753                           ;main.c: 516: Keys[chn].StateTemp = Keys[chn].State;
  1754  0695  0020               	movlb	0	; select bank0
  1755  0696  0862               	movf	main@chn_429,w
  1756  0697  0709               	addwf	9,w
  1757  0698  0709               	addwf	9,w
  1758  0699  3E2D               	addlw	(low ((_Keys| 0+1)))& (0+255)
  1759  069A  0086               	movwf	6
  1760  069B  0187               	clrf	7
  1761  069C  0862               	movf	main@chn_429,w
  1762  069D  0709               	addwf	9,w
  1763  069E  0709               	addwf	9,w
  1764  069F  3E2C               	addlw	(low (_Keys| 0))& (0+255)
  1765  06A0  0084               	movwf	4
  1766  06A1  0185               	clrf	5
  1767  06A2  0800               	movf	0,w
  1768  06A3  0081               	movwf	1
  1769  06A4  2F2B               	goto	l2186
  1770  06A5                     l2104:	
  1771                           
  1772                           ;main.c: 521: if (Keys[chn].State != 0) {
  1773  06A5  0862               	movf	main@chn_429,w
  1774  06A6                     L7:	
  1775  06A6  0709               	addwf	9,w
  1776  06A7  0709               	addwf	9,w
  1777  06A8  3E2C               	addlw	(low (_Keys| 0))& (0+255)
  1778  06A9  0086               	movwf	6
  1779  06AA  0187               	clrf	7
  1780  06AB  0801               	movf	1,w
  1781  06AC  1903               	btfsc	3,2
  1782  06AD  2ED7               	goto	l2116
  1783                           
  1784                           ;main.c: 522: if (Keys[chn].Tick100ms > 9) {
  1785  06AE  0862               	movf	main@chn_429,w
  1786  06AF  0709               	addwf	9,w
  1787  06B0  0709               	addwf	9,w
  1788  06B1  3E2E               	addlw	(low ((_Keys| 0+2)))& (0+255)
  1789  06B2  0086               	movwf	6
  1790  06B3  300A               	movlw	10
  1791  06B4  0201               	subwf	1,w
  1792                           
  1793                           ;main.c: 523: if (Keys[chn].FirstCmdSent == 0) {
  1794  06B5  0862               	movf	main@chn_429,w
  1795  06B6  1C03               	skipc
  1796  06B7  2ED0               	goto	L6
  1797  06B8  0709               	addwf	9,w
  1798  06B9  0709               	addwf	9,w
  1799  06BA  3E2F               	addlw	(low ((_Keys| 0+3)))& (0+255)
  1800  06BB  0086               	movwf	6
  1801  06BC  0801               	movf	1,w
  1802  06BD  1D03               	btfss	3,2
  1803  06BE  2ECF               	goto	l2114
  1804                           
  1805                           ;main.c: 524: noolite_send(chn, 5, 0, &noo_send_data[0]);
  1806  06BF  3005               	movlw	5
  1807  06C0                     L2:	
  1808  06C0  00F0               	movwf	noolite_send@noo_send_command
  1809  06C1  3040               	movlw	(low (_noo_send_data| 0))& (0+255)
  1810  06C2                     L1:	
  1811  06C2  01F1               	clrf	noolite_send@noo_send_format
  1812  06C3  00F2               	movwf	noolite_send@data
  1813  06C4  0862               	movf	main@chn_429,w
  1814  06C5  22B9               	fcall	_noolite_send
  1815                           
  1816                           ;main.c: 525: Keys[chn].FirstCmdSent = 1;
  1817  06C6  0020               	movlb	0	; select bank0
  1818  06C7  0862               	movf	main@chn_429,w
  1819  06C8  0709               	addwf	9,w
  1820  06C9  0709               	addwf	9,w
  1821  06CA  3E2F               	addlw	(low ((_Keys| 0+3)))& (0+255)
  1822  06CB  0086               	movwf	6
  1823  06CC  0187               	clrf	7
  1824  06CD  0181               	clrf	1
  1825  06CE  0A81               	incf	1,f
  1826  06CF                     l2114:	
  1827                           
  1828                           ;main.c: 526: }
  1829                           ;main.c: 527: }
  1830                           ;main.c: 528: Keys[chn].Tick100ms++;
  1831  06CF  0862               	movf	main@chn_429,w
  1832  06D0                     L6:	
  1833  06D0  0709               	addwf	9,w
  1834  06D1  0709               	addwf	9,w
  1835  06D2  3E2E               	addlw	(low ((_Keys| 0+2)))& (0+255)
  1836  06D3  0086               	movwf	6
  1837  06D4  0187               	clrf	7
  1838  06D5  0A81               	incf	1,f
  1839                           
  1840                           ;main.c: 529: } else {
  1841  06D6  2F39               	goto	l2188
  1842  06D7                     l2116:	
  1843                           
  1844                           ;main.c: 530: Keys[chn].Tick100ms = 0;
  1845  06D7  0862               	movf	main@chn_429,w
  1846  06D8  0709               	addwf	9,w
  1847  06D9  0709               	addwf	9,w
  1848  06DA  3E2E               	addlw	(low ((_Keys| 0+2)))& (0+255)
  1849  06DB  0086               	movwf	6
  1850  06DC  0187               	clrf	7
  1851  06DD  0181               	clrf	1
  1852  06DE  2F39               	goto	l2188
  1853  06DF                     l2118:	
  1854                           
  1855                           ;main.c: 534: if (Keys[chn].State != 0) {
  1856  06DF  0862               	movf	main@chn_429,w
  1857  06E0  0709               	addwf	9,w
  1858  06E1  0709               	addwf	9,w
  1859  06E2  3E2C               	addlw	(low (_Keys| 0))& (0+255)
  1860  06E3  0086               	movwf	6
  1861  06E4  0187               	clrf	7
  1862  06E5  0801               	movf	1,w
  1863  06E6  1903               	btfsc	3,2
  1864  06E7  2ED7               	goto	l2116
  1865                           
  1866                           ;main.c: 535: if (Keys[chn].Tick100ms > 9) {
  1867  06E8  0862               	movf	main@chn_429,w
  1868  06E9  0709               	addwf	9,w
  1869  06EA  0709               	addwf	9,w
  1870  06EB  3E2E               	addlw	(low ((_Keys| 0+2)))& (0+255)
  1871  06EC  0086               	movwf	6
  1872  06ED  300A               	movlw	10
  1873  06EE  0201               	subwf	1,w
  1874                           
  1875                           ;main.c: 536: if (Keys[chn].FirstCmdSent == 0) {
  1876  06EF  0862               	movf	main@chn_429,w
  1877  06F0  1C03               	skipc
  1878  06F1  2ED0               	goto	L6
  1879  06F2  0709               	addwf	9,w
  1880  06F3  0709               	addwf	9,w
  1881  06F4  3E2F               	addlw	(low ((_Keys| 0+3)))& (0+255)
  1882  06F5  0086               	movwf	6
  1883  06F6  0801               	movf	1,w
  1884  06F7  1D03               	btfss	3,2
  1885  06F8  2ECF               	goto	l2114
  1886                           
  1887                           ;main.c: 537: if (chn == 0 || chn == 2) {
  1888  06F9  0862               	movf	main@chn_429,w
  1889  06FA  1903               	btfsc	3,2
  1890  06FB  2F00               	goto	l2128
  1891  06FC  3002               	movlw	2
  1892  06FD  0662               	xorwf	main@chn_429,w
  1893  06FE  1D03               	btfss	3,2
  1894  06FF  2F04               	goto	l2130
  1895  0700                     l2128:	
  1896  0700  3040               	movlw	(low (_noo_send_data| 0))& (0+255)
  1897                           
  1898                           ;main.c: 538: noolite_send(chn, 1, 0, &noo_send_data[0]);
  1899  0701  01F0               	clrf	noolite_send@noo_send_command
  1900  0702  0AF0               	incf	noolite_send@noo_send_command,f
  1901  0703  2EC2               	goto	L1
  1902  0704                     l2130:	
  1903                           ;main.c: 539: } else {
  1904                           
  1905                           
  1906                           ;main.c: 540: noolite_send(chn, 3, 0, &noo_send_data[0]);
  1907  0704  3003               	movlw	3
  1908  0705  2EC0               	goto	L2
  1909  0706                     l2138:	
  1910                           
  1911                           ;main.c: 551: if (chn < 2) {
  1912  0706  3002               	movlw	2
  1913  0707  0262               	subwf	main@chn_429,w
  1914                           
  1915                           ;main.c: 564: if (Keys[chn].State != 0) {
  1916                           
  1917                           ;main.c: 555: noolite_send(chn, 5, 0, &noo_send_data[0]);
  1918                           
  1919                           ;main.c: 554: if (Keys[chn].FirstCmdSent == 0) {
  1920                           
  1921                           ;main.c: 553: if (Keys[chn].Tick100ms > 9) {
  1922                           
  1923                           ;main.c: 552: if (Keys[chn].State != 0) {
  1924  0708  0862               	movf	main@chn_429,w
  1925  0709  1C03               	btfss	3,0
  1926  070A  2EA6               	goto	L7
  1927  070B  0709               	addwf	9,w
  1928  070C  0709               	addwf	9,w
  1929  070D  3E2C               	addlw	(low (_Keys| 0))& (0+255)
  1930  070E  0086               	movwf	6
  1931  070F  0187               	clrf	7
  1932  0710  0801               	movf	1,w
  1933  0711  1903               	btfsc	3,2
  1934  0712  2ED7               	goto	l2116
  1935                           
  1936                           ;main.c: 565: if (Keys[chn].Tick100ms > 49) {
  1937  0713  0862               	movf	main@chn_429,w
  1938  0714  0709               	addwf	9,w
  1939  0715  0709               	addwf	9,w
  1940  0716  3E2E               	addlw	(low ((_Keys| 0+2)))& (0+255)
  1941  0717  0086               	movwf	6
  1942  0718  3032               	movlw	50
  1943  0719  0201               	subwf	1,w
  1944                           
  1945                           ;main.c: 566: if (Keys[chn].FirstCmdSent == 0) {
  1946  071A  0862               	movf	main@chn_429,w
  1947  071B  1C03               	skipc
  1948  071C  2ED0               	goto	L6
  1949  071D  0709               	addwf	9,w
  1950  071E  0709               	addwf	9,w
  1951  071F  3E2F               	addlw	(low ((_Keys| 0+3)))& (0+255)
  1952  0720  0086               	movwf	6
  1953  0721  0801               	movf	1,w
  1954  0722  1D03               	btfss	3,2
  1955  0723  2ECF               	goto	l2114
  1956                           
  1957                           ;main.c: 567: noolite_send(chn, 8, 0, &noo_send_data[0]);
  1958  0724  3008               	movlw	8
  1959  0725  2EC0               	goto	L2
  1960  0726                     l2168:	
  1961                           
  1962                           ;main.c: 578: if (chn < 2) {
  1963  0726  3002               	movlw	2
  1964  0727  0262               	subwf	main@chn_429,w
  1965  0728  1803               	skipnc
  1966  0729  2F39               	goto	l2188
  1967  072A  2EA5               	goto	l2104
  1968  072B                     l2186:	
  1969                           ;main.c: 582: noolite_send(chn, 5, 0, &noo_send_data[0]);
  1970                           
  1971                           ;main.c: 581: if (Keys[chn].FirstCmdSent == 0) {
  1972                           
  1973                           ;main.c: 580: if (Keys[chn].Tick100ms > 9) {
  1974                           
  1975                           ;main.c: 579: if (Keys[chn].State != 0) {
  1976                           
  1977  072B  0827               	movf	_DevType,w
  1978                           
  1979                           ; Switch size 1, requested type "space"
  1980                           ; Number of cases is 4, Range of values is 0 to 3
  1981                           ; switch strategies available:
  1982                           ; Name         Instructions Cycles
  1983                           ; simple_byte           13     7 (average)
  1984                           ; direct_byte           14     6 (fixed)
  1985                           ; jumptable            260     6 (fixed)
  1986                           ;	Chosen strategy is simple_byte
  1987  072C  3A00               	xorlw	0	; case 0
  1988  072D  1903               	skipnz
  1989  072E  2EA5               	goto	l2104
  1990  072F  3A01               	xorlw	1	; case 1
  1991  0730  1903               	skipnz
  1992  0731  2EDF               	goto	l2118
  1993  0732  3A03               	xorlw	3	; case 2
  1994  0733  1903               	skipnz
  1995  0734  2F06               	goto	l2138
  1996  0735  3A01               	xorlw	1	; case 3
  1997  0736  1903               	skipnz
  1998  0737  2F26               	goto	l2168
  1999  0738  2F39               	goto	l2188
  2000  0739                     l2188:	
  2001  0739  0AE2               	incf	main@chn_429,f
  2002  073A  2DF5               	goto	l2056
  2003  073B                     l2208:	
  2004                           
  2005                           ;main.c: 616: }
  2006                           ;main.c: 618: if (((DevMode & 0x07) == 0) && ((PORTA & All_Pressed) == 0)) {
  2007  073B  0826               	movf	_DevMode,w
  2008  073C  3907               	andlw	7
  2009  073D  1D03               	btfss	3,2
  2010  073E  2FA8               	goto	l2242
  2011  073F  080C               	movf	12,w	;volatile
  2012  0740  3917               	andlw	23
  2013  0741  1D03               	btfss	3,2
  2014  0742  2FA8               	goto	l2242
  2015                           
  2016                           ;main.c: 619: for (uint8_t cellNum = 0; cellNum < 8; cellNum++) {
  2017  0743  01DE               	clrf	main@cellNum
  2018                           
  2019                           ;main.c: 626: break;
  2020  0744  2F62               	goto	l2214
  2021  0745                     l2232:	
  2022                           
  2023                           ;main.c: 628: if (cellNum == 7) {
  2024  0745  3007               	movlw	7
  2025  0746  065E               	xorwf	main@cellNum,w
  2026  0747  1D03               	btfss	3,2
  2027  0748  2F60               	goto	l2236
  2028                           
  2029                           ;main.c: 629: FlashEraseRow(0x7D0);
  2030  0749  30D0               	movlw	208
  2031  074A  00F0               	movwf	FlashEraseRow@rowAddr
  2032  074B  3007               	movlw	7
  2033  074C  00F1               	movwf	FlashEraseRow@rowAddr+1
  2034  074D  20F7               	fcall	_FlashEraseRow
  2035                           
  2036                           ;main.c: 630: FlashWrite(0x7D0, tx_status & 0x02);
  2037  074E  30D0               	movlw	208
  2038  074F  00F0               	movwf	FlashWrite@addr
  2039  0750  3007               	movlw	7
  2040  0751  00F1               	movwf	FlashWrite@addr+1
  2041  0752  0020               	movlb	0	; select bank0
  2042  0753  082B               	movf	_tx_status,w
  2043  0754  3902               	andlw	2
  2044  0755  00F2               	movwf	FlashWrite@flash_data
  2045  0756  01F3               	clrf	FlashWrite@flash_data+1
  2046  0757  2121               	fcall	_FlashWrite
  2047                           
  2048                           ;main.c: 631: FlashWrite(0x7D1, 0x5A);
  2049  0758  30D1               	movlw	209
  2050  0759  00F0               	movwf	FlashWrite@addr
  2051  075A  3007               	movlw	7
  2052  075B  00F1               	movwf	FlashWrite@addr+1
  2053  075C  305A               	movlw	90
  2054  075D  00F2               	movwf	FlashWrite@flash_data
  2055  075E  01F3               	clrf	FlashWrite@flash_data+1
  2056  075F  2121               	fcall	_FlashWrite
  2057  0760                     l2236:	
  2058  0760  0020               	movlb	0	; select bank0
  2059  0761  0ADE               	incf	main@cellNum,f
  2060  0762                     l2214:	
  2061  0762  3008               	movlw	8
  2062  0763  025E               	subwf	main@cellNum,w
  2063  0764  1803               	btfsc	3,0
  2064  0765  2F98               	goto	l243
  2065                           
  2066                           ;main.c: 620: uint16_t adrToWrite = (0x7D0 + (cellNum * 2));
  2067  0766  085E               	movf	main@cellNum,w
  2068  0767  00DB               	movwf	main@adrToWrite
  2069  0768  30D0               	movlw	208
  2070  0769  01DC               	clrf	main@adrToWrite+1
  2071  076A  35DB               	lslf	main@adrToWrite,f
  2072  076B  0DDC               	rlf	main@adrToWrite+1,f
  2073  076C  07DB               	addwf	main@adrToWrite,f
  2074  076D  3007               	movlw	7
  2075  076E  3DDC               	addwfc	main@adrToWrite+1,f
  2076                           
  2077                           ;main.c: 621: if (TxStatus[cellNum] == 0xFFFF) {
  2078  076F  085E               	movf	main@cellNum,w
  2079  0770  00D7               	movwf	??_main
  2080  0771  30D0               	movlw	208
  2081  0772  01D8               	clrf	??_main+1
  2082  0773  35D7               	lslf	??_main,f
  2083  0774  0DD8               	rlf	??_main+1,f
  2084  0775  0757               	addwf	??_main,w
  2085  0776  0084               	movwf	4
  2086  0777  3087               	movlw	135
  2087  0778  3D58               	addwfc	??_main+1,w
  2088  0779  0085               	movwf	5
  2089  077A  0012               	moviw fsr0++
  2090  077B  3AFF               	xorlw	255
  2091  077C  00D9               	movwf	??_main+2
  2092  077D  0012               	moviw fsr0++
  2093  077E  3AFF               	xorlw	255
  2094  077F  04D9               	iorwf	??_main+2,f
  2095  0780  1D03               	btfss	3,2
  2096  0781  2F45               	goto	l2232
  2097                           
  2098                           ;main.c: 622: FlashWrite(adrToWrite, tx_status & 0x02);
  2099  0782  085C               	movf	main@adrToWrite+1,w
  2100  0783  00F1               	movwf	FlashWrite@addr+1
  2101  0784  085B               	movf	main@adrToWrite,w
  2102  0785  00F0               	movwf	FlashWrite@addr
  2103  0786  082B               	movf	_tx_status,w
  2104  0787  3902               	andlw	2
  2105  0788  00F2               	movwf	FlashWrite@flash_data
  2106  0789  01F3               	clrf	FlashWrite@flash_data+1
  2107  078A  2121               	fcall	_FlashWrite
  2108                           
  2109                           ;main.c: 623: FlashWrite((adrToWrite + 1), 0x5A);
  2110  078B  0020               	movlb	0	; select bank0
  2111  078C  085B               	movf	main@adrToWrite,w
  2112  078D  3E01               	addlw	1
  2113  078E  00F0               	movwf	FlashWrite@addr
  2114  078F  3000               	movlw	0
  2115  0790  3D5C               	addwfc	main@adrToWrite+1,w
  2116  0791  00F1               	movwf	FlashWrite@addr+1
  2117  0792  305A               	movlw	90
  2118  0793  00F2               	movwf	FlashWrite@flash_data
  2119  0794  01F3               	clrf	FlashWrite@flash_data+1
  2120  0795  2121               	fcall	_FlashWrite
  2121                           
  2122                           ;main.c: 624: __nop();
  2123  0796  0000               	nop
  2124  0797  0064               	clrwdt	;# 
  2125  0798                     l243:	
  2126                           
  2127                           ;main.c: 632: }
  2128                           ;main.c: 633: }
  2129                           ;main.c: 634: }
  2130                           ;main.c: 645: LATCbits.LATC5 = 0;
  2131  0798  0022               	movlb	2	; select bank2
  2132  0799  128E               	bcf	14,5	;volatile
  2133                           
  2134                           ;main.c: 646: _delay((unsigned long)((100)*(8000000/4000.0)));
  2135  079A  3002               	movlw	2
  2136  079B  0020               	movlb	0	; select bank0
  2137  079C  00D8               	movwf	??_main+1
  2138  079D  3004               	movlw	4
  2139  079E  00D7               	movwf	??_main
  2140  079F  30BA               	movlw	186
  2141  07A0                     u1887:	
  2142  07A0  0B89               	decfsz	9,f
  2143  07A1  2FA0               	goto	u1887
  2144  07A2  0BD7               	decfsz	??_main,f
  2145  07A3  2FA0               	goto	u1887
  2146  07A4  0BD8               	decfsz	??_main+1,f
  2147  07A5  2FA0               	goto	u1887
  2148  07A6  0000               	nop
  2149                           
  2150                           ;main.c: 647: } else {
  2151  07A7  2C60               	goto	l1870
  2152  07A8                     l2242:	
  2153                           
  2154                           ;main.c: 648: WDTCONbits.WDTPS = 0b00110;
  2155  07A8  0021               	movlb	1	; select bank1
  2156  07A9  0817               	movf	23,w	;volatile
  2157  07AA  39C1               	andlw	-63
  2158  07AB  380C               	iorlw	12
  2159  07AC  0097               	movwf	23	;volatile
  2160                           
  2161                           ;main.c: 649: __nop();
  2162  07AD  0000               	nop
  2163  07AE  0063               	sleep	;# 
  2164                           
  2165                           ;main.c: 651: __nop();
  2166  07AF  0000               	nop
  2167                           
  2168                           ;main.c: 652: WDTCONbits.WDTPS = 0b00101;
  2169  07B0  0021               	movlb	1	; select bank1
  2170  07B1  0817               	movf	23,w	;volatile
  2171  07B2  39C1               	andlw	-63
  2172  07B3  380A               	iorlw	10
  2173  07B4  0097               	movwf	23	;volatile
  2174                           
  2175                           ;main.c: 653: __nop();
  2176  07B5  0000               	nop
  2177  07B6  0063               	sleep	;# 
  2178                           
  2179                           ;main.c: 655: __nop();
  2180  07B7  0000               	nop
  2181                           
  2182                           ;main.c: 656: WDTCONbits.WDTPS = 0b01011;
  2183  07B8  0021               	movlb	1	; select bank1
  2184  07B9  0817               	movf	23,w	;volatile
  2185  07BA  39C1               	andlw	-63
  2186  07BB  3816               	iorlw	22
  2187  07BC  0097               	movwf	23	;volatile
  2188                           
  2189                           ;main.c: 657: __nop();
  2190  07BD  0000               	nop
  2191  07BE  0064               	clrwdt	;# 
  2192  07BF  2C60               	goto	l1870
  2193  07C0                     __end_of_main:	
  2194                           
  2195                           	psect	text1
  2196  022E                     __ptext1:	
  2197 ;; *************** function _RF_Init *****************
  2198 ;; Defined at:
  2199 ;;		line 25 in file "noolite.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;		None
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;		None
  2204 ;; Return value:  Size  Location     Type
  2205 ;;                  1    wreg      void 
  2206 ;; Registers used:
  2207 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2208 ;; Tracked objects:
  2209 ;;		On entry : B1F/1
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMMON   BANK0   BANK1
  2213 ;;      Params:         0       0       0
  2214 ;;      Locals:         0       0       0
  2215 ;;      Temps:          7       0       0
  2216 ;;      Totals:         7       0       0
  2217 ;;Total ram usage:        7 bytes
  2218 ;; Hardware stack levels used:    1
  2219 ;; This function calls:
  2220 ;;		Nothing
  2221 ;; This function is called by:
  2222 ;;		_main
  2223 ;; This function uses a non-reentrant model
  2224 ;;
  2225                           
  2226                           
  2227                           ;psect for function _RF_Init
  2228  022E                     _RF_Init:	
  2229                           
  2230                           ;noolite.c: 27: startaddress = 0;
  2231                           
  2232                           ;incstack = 0
  2233                           ; Regs used in _RF_Init: [wreg-fsr0h+status,2+status,0+pclath]
  2234  022E  0020               	movlb	0	; select bank0
  2235  022F  30F3               	movlw	243
  2236  0230  01A0               	clrf	_startaddress
  2237  0231  01A1               	clrf	_startaddress+1
  2238  0232  01A2               	clrf	_startaddress+2
  2239  0233  01A3               	clrf	_startaddress+3
  2240                           
  2241                           ;noolite.c: 28: startaddress |= ((unsigned int) system_settings[5]) << 8;
  2242  0234  0084               	movwf	4
  2243  0235  3087               	movlw	135
  2244  0236  0085               	movwf	5
  2245  0237  0800               	movf	0,w	;code access
  2246  0238  00F0               	movwf	??_RF_Init
  2247  0239  01F1               	clrf	??_RF_Init+1
  2248  023A  00F1               	movwf	??_RF_Init+1
  2249  023B  01F0               	clrf	??_RF_Init
  2250  023C  0870               	movf	??_RF_Init,w
  2251  023D  00F3               	movwf	??_RF_Init+3
  2252  023E  0871               	movf	??_RF_Init+1,w
  2253  023F  00F4               	movwf	??_RF_Init+4
  2254  0240  01F5               	clrf	??_RF_Init+5
  2255  0241  01F6               	clrf	??_RF_Init+6
  2256  0242  0873               	movf	??_RF_Init+3,w
  2257  0243  04A0               	iorwf	_startaddress,f
  2258  0244  0874               	movf	??_RF_Init+4,w
  2259  0245  04A1               	iorwf	_startaddress+1,f
  2260  0246  0875               	movf	??_RF_Init+5,w
  2261  0247  04A2               	iorwf	_startaddress+2,f
  2262  0248  0876               	movf	??_RF_Init+6,w
  2263  0249  04A3               	iorwf	_startaddress+3,f
  2264                           
  2265                           ;noolite.c: 29: startaddress |= system_settings[4];
  2266  024A  30F2               	movlw	242
  2267  024B  0084               	movwf	4
  2268  024C  0800               	movf	0,w	;code access
  2269  024D  00F0               	movwf	??_RF_Init
  2270  024E  01F1               	clrf	??_RF_Init+1
  2271  024F  01F2               	clrf	??_RF_Init+2
  2272  0250  01F3               	clrf	??_RF_Init+3
  2273  0251  04A0               	iorwf	_startaddress,f
  2274  0252  0871               	movf	??_RF_Init+1,w
  2275  0253  04A1               	iorwf	_startaddress+1,f
  2276  0254  0872               	movf	??_RF_Init+2,w
  2277  0255  04A2               	iorwf	_startaddress+2,f
  2278  0256  0873               	movf	??_RF_Init+3,w
  2279  0257  04A3               	iorwf	_startaddress+3,f
  2280                           
  2281                           ;noolite.c: 30: if ((startaddress != 0) && (startaddress != 0xFFFF)) {
  2282  0258  0823               	movf	_startaddress+3,w
  2283  0259  0422               	iorwf	_startaddress+2,w
  2284  025A  0421               	iorwf	_startaddress+1,w
  2285  025B  0420               	iorwf	_startaddress,w
  2286  025C  1903               	skipnz
  2287  025D  2A67               	goto	l279
  2288  025E  0F20               	incfsz	_startaddress,w
  2289  025F  2A65               	goto	l1814
  2290  0260  0A21               	incf	_startaddress+1,w
  2291  0261  0422               	iorwf	_startaddress+2,w
  2292  0262  0423               	iorwf	_startaddress+3,w
  2293  0263  1903               	btfsc	3,2
  2294  0264  2A67               	goto	l279
  2295  0265                     l1814:	
  2296                           
  2297                           ;noolite.c: 31: noo_address_type = 0;
  2298  0265  01A4               	clrf	_noo_address_type
  2299                           
  2300                           ;noolite.c: 32: } else {
  2301  0266  2AB7               	goto	l280
  2302  0267                     l279:	
  2303  0267  30F9               	movlw	249
  2304                           
  2305                           ;noolite.c: 33: startaddress = 0;
  2306  0268  01A0               	clrf	_startaddress
  2307  0269  01A1               	clrf	_startaddress+1
  2308  026A  01A2               	clrf	_startaddress+2
  2309  026B  01A3               	clrf	_startaddress+3
  2310                           
  2311                           ;noolite.c: 34: startaddress |= ((unsigned long) system_settings[11]) << 24;
  2312  026C  0084               	movwf	4
  2313  026D  3087               	movlw	135
  2314  026E  0085               	movwf	5
  2315  026F  0800               	movf	0,w	;code access
  2316  0270  00F3               	movwf	??_RF_Init+3
  2317  0271  01F2               	clrf	??_RF_Init+2
  2318  0272  01F1               	clrf	??_RF_Init+1
  2319  0273  01F0               	clrf	??_RF_Init
  2320  0274  0870               	movf	??_RF_Init,w
  2321  0275  04A0               	iorwf	_startaddress,f
  2322  0276  0871               	movf	??_RF_Init+1,w
  2323  0277  04A1               	iorwf	_startaddress+1,f
  2324  0278  0872               	movf	??_RF_Init+2,w
  2325  0279  04A2               	iorwf	_startaddress+2,f
  2326  027A  0873               	movf	??_RF_Init+3,w
  2327  027B  04A3               	iorwf	_startaddress+3,f
  2328                           
  2329                           ;noolite.c: 35: startaddress |= ((unsigned long) system_settings[10]) << 16;
  2330  027C  30F8               	movlw	248
  2331  027D  0084               	movwf	4
  2332  027E  0800               	movf	0,w	;code access
  2333  027F  00F0               	movwf	??_RF_Init
  2334  0280  01F1               	clrf	??_RF_Init+1
  2335  0281  01F2               	clrf	??_RF_Init+2
  2336  0282  01F3               	clrf	??_RF_Init+3
  2337  0283  0871               	movf	??_RF_Init+1,w
  2338  0284  00F3               	movwf	??_RF_Init+3
  2339  0285  0870               	movf	??_RF_Init,w
  2340  0286  00F2               	movwf	??_RF_Init+2
  2341  0287  01F1               	clrf	??_RF_Init+1
  2342  0288  01F0               	clrf	??_RF_Init
  2343  0289  0870               	movf	??_RF_Init,w
  2344  028A  04A0               	iorwf	_startaddress,f
  2345  028B  0871               	movf	??_RF_Init+1,w
  2346  028C  04A1               	iorwf	_startaddress+1,f
  2347  028D  0872               	movf	??_RF_Init+2,w
  2348  028E  04A2               	iorwf	_startaddress+2,f
  2349  028F  0873               	movf	??_RF_Init+3,w
  2350  0290  04A3               	iorwf	_startaddress+3,f
  2351                           
  2352                           ;noolite.c: 36: startaddress |= ((unsigned long) system_settings[9]) << 8;
  2353  0291  30F7               	movlw	247
  2354  0292  0084               	movwf	4
  2355  0293  0800               	movf	0,w	;code access
  2356  0294  00F0               	movwf	??_RF_Init
  2357  0295  01F1               	clrf	??_RF_Init+1
  2358  0296  01F2               	clrf	??_RF_Init+2
  2359  0297  01F3               	clrf	??_RF_Init+3
  2360  0298  0872               	movf	??_RF_Init+2,w
  2361  0299  00F3               	movwf	??_RF_Init+3
  2362  029A  0871               	movf	??_RF_Init+1,w
  2363  029B  00F2               	movwf	??_RF_Init+2
  2364  029C  0870               	movf	??_RF_Init,w
  2365  029D  00F1               	movwf	??_RF_Init+1
  2366  029E  01F0               	clrf	??_RF_Init
  2367  029F  0870               	movf	??_RF_Init,w
  2368  02A0  04A0               	iorwf	_startaddress,f
  2369  02A1  0871               	movf	??_RF_Init+1,w
  2370  02A2  04A1               	iorwf	_startaddress+1,f
  2371  02A3  0872               	movf	??_RF_Init+2,w
  2372  02A4  04A2               	iorwf	_startaddress+2,f
  2373  02A5  0873               	movf	??_RF_Init+3,w
  2374  02A6  04A3               	iorwf	_startaddress+3,f
  2375                           
  2376                           ;noolite.c: 37: startaddress |= system_settings[8];
  2377  02A7  30F6               	movlw	246
  2378  02A8  0084               	movwf	4
  2379  02A9  0800               	movf	0,w	;code access
  2380  02AA  00F0               	movwf	??_RF_Init
  2381  02AB  01F1               	clrf	??_RF_Init+1
  2382  02AC  01F2               	clrf	??_RF_Init+2
  2383  02AD  01F3               	clrf	??_RF_Init+3
  2384  02AE  04A0               	iorwf	_startaddress,f
  2385  02AF  0871               	movf	??_RF_Init+1,w
  2386  02B0  04A1               	iorwf	_startaddress+1,f
  2387  02B1  0872               	movf	??_RF_Init+2,w
  2388  02B2  04A2               	iorwf	_startaddress+2,f
  2389  02B3  0873               	movf	??_RF_Init+3,w
  2390  02B4  04A3               	iorwf	_startaddress+3,f
  2391                           
  2392                           ;noolite.c: 38: noo_address_type = 1;
  2393  02B5  01A4               	clrf	_noo_address_type
  2394  02B6  0AA4               	incf	_noo_address_type,f
  2395  02B7                     l280:	
  2396  02B7  0064               	clrwdt	;# 
  2397  02B8  0008               	return
  2398  02B9                     __end_of_RF_Init:	
  2399                           
  2400                           	psect	text2
  2401  0148                     __ptext2:	
  2402 ;; *************** function _KeyOffHandler *****************
  2403 ;; Defined at:
  2404 ;;		line 264 in file "main.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;  key             1    wreg     PTR struct .
  2407 ;;		 -> Keys(20), 
  2408 ;;  chn             1   11[COMMON] unsigned char 
  2409 ;;  cmd             1   12[COMMON] unsigned char 
  2410 ;; Auto vars:     Size  Location     Type
  2411 ;;  key             1   18[BANK0 ] PTR struct .
  2412 ;;		 -> Keys(20), 
  2413 ;; Return value:  Size  Location     Type
  2414 ;;                  1    wreg      void 
  2415 ;; Registers used:
  2416 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2417 ;; Tracked objects:
  2418 ;;		On entry : 1F/0
  2419 ;;		On exit  : 1D/0
  2420 ;;		Unchanged: 0/0
  2421 ;; Data sizes:     COMMON   BANK0   BANK1
  2422 ;;      Params:         2       0       0
  2423 ;;      Locals:         0       1       0
  2424 ;;      Temps:          1       0       0
  2425 ;;      Totals:         3       1       0
  2426 ;;Total ram usage:        4 bytes
  2427 ;; Hardware stack levels used:    1
  2428 ;; Hardware stack levels required when called:    1
  2429 ;; This function calls:
  2430 ;;		_noolite_send
  2431 ;; This function is called by:
  2432 ;;		_main
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           
  2436                           
  2437                           ;psect for function _KeyOffHandler
  2438  0148                     _KeyOffHandler:	
  2439                           
  2440                           ;incstack = 0
  2441                           ; Regs used in _KeyOffHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2442                           ;KeyOffHandler@key stored from wreg
  2443  0148  00D6               	movwf	KeyOffHandler@key
  2444                           
  2445                           ;main.c: 265: if (key->State == 0) {
  2446  0149  0086               	movwf	6
  2447  014A  0187               	clrf	7
  2448  014B  0801               	movf	1,w
  2449  014C  1D03               	btfss	3,2
  2450  014D  0008               	return
  2451                           
  2452                           ;main.c: 266: if (key->Tick100ms < 10) {
  2453  014E  0856               	movf	KeyOffHandler@key,w
  2454  014F  3E02               	addlw	2
  2455  0150  0086               	movwf	6
  2456  0151  300A               	movlw	10
  2457  0152  0201               	subwf	1,w
  2458  0153  1C03               	btfss	3,0
  2459  0154  2970               	goto	l1794
  2460  0155  297B               	goto	l1796
  2461  0156                     l1784:	
  2462  0156  3040               	movlw	(low (_noo_send_data| 0))& (0+255)
  2463                           
  2464                           ;main.c: 269: noolite_send(chn, 0, 0, &noo_send_data[0]);
  2465  0157  01F0               	clrf	noolite_send@noo_send_command
  2466  0158  01F1               	clrf	noolite_send@noo_send_format
  2467  0159  00F2               	movwf	noolite_send@data
  2468  015A  087B               	movf	KeyOffHandler@chn,w
  2469  015B  2AB9               	ljmp	_noolite_send
  2470  015C                     l1786:	
  2471                           ;main.c: 270: break;
  2472                           
  2473                           
  2474                           ;main.c: 272: noolite_send(chn, 2, 0, &noo_send_data[0]);
  2475  015C  3002               	movlw	2
  2476  015D  00F0               	movwf	noolite_send@noo_send_command
  2477  015E  3040               	movlw	(low (_noo_send_data| 0))& (0+255)
  2478  015F  01F1               	clrf	noolite_send@noo_send_format
  2479  0160  00F2               	movwf	noolite_send@data
  2480  0161  087B               	movf	KeyOffHandler@chn,w
  2481  0162  2AB9               	ljmp	_noolite_send
  2482  0163                     l1788:	
  2483                           ;main.c: 273: break;
  2484                           
  2485                           
  2486                           ;main.c: 275: noolite_send(chn, 4, 0, &noo_send_data[0]);
  2487  0163  3004               	movlw	4
  2488  0164  00F0               	movwf	noolite_send@noo_send_command
  2489  0165  3040               	movlw	(low (_noo_send_data| 0))& (0+255)
  2490  0166  01F1               	clrf	noolite_send@noo_send_format
  2491  0167  00F2               	movwf	noolite_send@data
  2492  0168  087B               	movf	KeyOffHandler@chn,w
  2493  0169  2AB9               	ljmp	_noolite_send
  2494  016A                     l1790:	
  2495                           ;main.c: 276: break;
  2496                           
  2497  016A  3040               	movlw	(low (_noo_send_data| 0))& (0+255)
  2498                           
  2499                           ;main.c: 278: noolite_send(chn, 0, 0, &noo_send_data[0]);
  2500  016B  01F0               	clrf	noolite_send@noo_send_command
  2501  016C  01F1               	clrf	noolite_send@noo_send_format
  2502  016D  00F2               	movwf	noolite_send@data
  2503  016E  087B               	movf	KeyOffHandler@chn,w
  2504  016F  2AB9               	ljmp	_noolite_send
  2505  0170                     l1794:	
  2506                           ;main.c: 279: break;
  2507                           
  2508  0170  087C               	movf	KeyOffHandler@cmd,w
  2509                           
  2510                           ; Switch size 1, requested type "space"
  2511                           ; Number of cases is 3, Range of values is 0 to 4
  2512                           ; switch strategies available:
  2513                           ; Name         Instructions Cycles
  2514                           ; simple_byte           10     6 (average)
  2515                           ; direct_byte           16     6 (fixed)
  2516                           ; jumptable            260     6 (fixed)
  2517                           ;	Chosen strategy is simple_byte
  2518  0171  3A00               	xorlw	0	; case 0
  2519  0172  1903               	skipnz
  2520  0173  2956               	goto	l1784
  2521  0174  3A02               	xorlw	2	; case 2
  2522  0175  1903               	skipnz
  2523  0176  295C               	goto	l1786
  2524  0177  3A06               	xorlw	6	; case 4
  2525  0178  1903               	skipnz
  2526  0179  2963               	goto	l1788
  2527  017A  296A               	goto	l1790
  2528  017B                     l1796:	
  2529                           
  2530                           ;main.c: 282: noolite_send(chn, 10, 0, &noo_send_data[0]);
  2531  017B  300A               	movlw	10
  2532  017C  00F0               	movwf	noolite_send@noo_send_command
  2533  017D  3040               	movlw	(low (_noo_send_data| 0))& (0+255)
  2534  017E  01F1               	clrf	noolite_send@noo_send_format
  2535  017F  00F2               	movwf	noolite_send@data
  2536  0180  087B               	movf	KeyOffHandler@chn,w
  2537  0181  22B9               	fcall	_noolite_send
  2538                           
  2539                           ;main.c: 283: _delay((unsigned long)((15)*(8000000/4000.0)));
  2540  0182  3027               	movlw	39
  2541  0183  00FD               	movwf	??_KeyOffHandler
  2542  0184  30F5               	movlw	245
  2543  0185                     u1897:	
  2544  0185  0B89               	decfsz	9,f
  2545  0186  2985               	goto	u1897
  2546  0187  0BFD               	decfsz	??_KeyOffHandler,f
  2547  0188  2985               	goto	u1897
  2548  0189  0000               	nop
  2549                           
  2550                           ;main.c: 284: noolite_send(chn, 10, 0, &noo_send_data[0]);
  2551  018A  300A               	movlw	10
  2552  018B  00F0               	movwf	noolite_send@noo_send_command
  2553  018C  3040               	movlw	(low (_noo_send_data| 0))& (0+255)
  2554  018D  01F1               	clrf	noolite_send@noo_send_format
  2555  018E  00F2               	movwf	noolite_send@data
  2556  018F  087B               	movf	KeyOffHandler@chn,w
  2557  0190  22B9               	fcall	_noolite_send
  2558                           
  2559                           ;main.c: 285: _delay((unsigned long)((15)*(8000000/4000.0)));
  2560  0191  3027               	movlw	39
  2561  0192  00FD               	movwf	??_KeyOffHandler
  2562  0193  30F5               	movlw	245
  2563  0194                     u1907:	
  2564  0194  0B89               	decfsz	9,f
  2565  0195  2994               	goto	u1907
  2566  0196  0BFD               	decfsz	??_KeyOffHandler,f
  2567  0197  2994               	goto	u1907
  2568  0198  0000               	nop
  2569                           
  2570                           ;main.c: 286: noolite_send(chn, 10, 0, &noo_send_data[0]);
  2571  0199  300A               	movlw	10
  2572  019A  00F0               	movwf	noolite_send@noo_send_command
  2573  019B  3040               	movlw	(low (_noo_send_data| 0))& (0+255)
  2574  019C  01F1               	clrf	noolite_send@noo_send_format
  2575  019D  00F2               	movwf	noolite_send@data
  2576  019E  087B               	movf	KeyOffHandler@chn,w
  2577  019F  22B9               	fcall	_noolite_send
  2578                           
  2579                           ;main.c: 287: key->FirstCmdSent = 0;
  2580  01A0  0020               	movlb	0	; select bank0
  2581  01A1  0856               	movf	KeyOffHandler@key,w
  2582  01A2  3E03               	addlw	3
  2583  01A3  0086               	movwf	6
  2584  01A4  0187               	clrf	7
  2585  01A5  0181               	clrf	1
  2586  01A6  0008               	return
  2587  01A7                     __end_of_KeyOffHandler:	
  2588                           
  2589                           	psect	text3
  2590  02B9                     __ptext3:	
  2591 ;; *************** function _noolite_send *****************
  2592 ;; Defined at:
  2593 ;;		line 174 in file "noolite.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;  chn             1    wreg     unsigned char 
  2596 ;;  noo_send_com    1    0[COMMON] unsigned char 
  2597 ;;  noo_send_for    1    1[COMMON] unsigned char 
  2598 ;;  data            1    2[COMMON] PTR unsigned char 
  2599 ;;		 -> noo_send_data(4), 
  2600 ;; Auto vars:     Size  Location     Type
  2601 ;;  chn             1   14[BANK0 ] unsigned char 
  2602 ;;  noo_send_buf   12    0[BANK0 ] unsigned char [12]
  2603 ;;  endpos          1   17[BANK0 ] unsigned char 
  2604 ;;  temp_send       1   16[BANK0 ] unsigned char 
  2605 ;;  countsend       1   15[BANK0 ] unsigned char 
  2606 ;;  countbit        1   13[BANK0 ] unsigned char 
  2607 ;;  startpos        1   12[BANK0 ] unsigned char 
  2608 ;; Return value:  Size  Location     Type
  2609 ;;                  1    wreg      void 
  2610 ;; Registers used:
  2611 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2612 ;; Tracked objects:
  2613 ;;		On entry : 0/0
  2614 ;;		On exit  : 1F/2
  2615 ;;		Unchanged: 0/0
  2616 ;; Data sizes:     COMMON   BANK0   BANK1
  2617 ;;      Params:         3       0       0
  2618 ;;      Locals:         0      18       0
  2619 ;;      Temps:          8       0       0
  2620 ;;      Totals:        11      18       0
  2621 ;;Total ram usage:       29 bytes
  2622 ;; Hardware stack levels used:    1
  2623 ;; This function calls:
  2624 ;;		Nothing
  2625 ;; This function is called by:
  2626 ;;		_KeyOffHandler
  2627 ;;		_main
  2628 ;; This function uses a non-reentrant model
  2629 ;;
  2630                           
  2631                           
  2632                           ;psect for function _noolite_send
  2633  02B9                     _noolite_send:	
  2634                           
  2635                           ;incstack = 0
  2636                           ; Regs used in _noolite_send: [wreg+fsr1l+fsr1h+status,2+status,0]
  2637                           ;noolite_send@chn stored from wreg
  2638  02B9  0020               	movlb	0	; select bank0
  2639  02BA  00D2               	movwf	noolite_send@chn
  2640  02BB  0064               	clrwdt	;# 
  2641                           
  2642                           ;noolite.c: 185: tx_status ^= (1<<1);
  2643  02BC  3002               	movlw	2
  2644  02BD  0020               	movlb	0	; select bank0
  2645  02BE  06AB               	xorwf	_tx_status,f
  2646                           
  2647                           ;noolite.c: 188: if (noo_send_command < 16) {
  2648  02BF  3010               	movlw	16
  2649  02C0  0270               	subwf	noolite_send@noo_send_command,w
  2650  02C1  1803               	skipnc
  2651  02C2  2ACF               	goto	l1534
  2652                           
  2653                           ;noolite.c: 189: startpos = 10;
  2654  02C3  300A               	movlw	10
  2655  02C4  00D0               	movwf	noolite_send@startpos
  2656                           
  2657                           ;noolite.c: 190: noo_send_buffer[1] = (noo_send_command << 4) | (1 << 2);
  2658  02C5  0E70               	swapf	noolite_send@noo_send_command,w
  2659  02C6  39F0               	andlw	240
  2660  02C7  3804               	iorlw	4
  2661  02C8  00C5               	movwf	noolite_send@noo_send_buffer+1
  2662                           
  2663                           ;noolite.c: 191: if (((tx_status & (1<<1)) != 0)) {
  2664  02C9  1CAB               	btfss	_tx_status,1
  2665  02CA  2ACD               	goto	l285
  2666                           
  2667                           ;noolite.c: 192: noo_send_buffer[1] |= (1<<3);
  2668  02CB  15C5               	bsf	noolite_send@noo_send_buffer+1,3
  2669                           
  2670                           ;noolite.c: 193: } else {
  2671  02CC  2ADB               	goto	l287
  2672  02CD                     l285:	
  2673                           
  2674                           ;noolite.c: 194: noo_send_buffer[1] &= (~(1<<3));
  2675  02CD  11C5               	bcf	noolite_send@noo_send_buffer+1,3
  2676  02CE  2ADB               	goto	l287
  2677  02CF                     l1534:	
  2678                           
  2679                           ;noolite.c: 197: startpos = 6;
  2680  02CF  3006               	movlw	6
  2681  02D0  00D0               	movwf	noolite_send@startpos
  2682                           
  2683                           ;noolite.c: 198: noo_send_buffer[0] = (1 << 6);
  2684  02D1  3040               	movlw	64
  2685  02D2  00C4               	movwf	noolite_send@noo_send_buffer
  2686                           
  2687                           ;noolite.c: 199: if (((tx_status & (1<<1)) != 0)) {
  2688  02D3  1CAB               	btfss	_tx_status,1
  2689  02D4  2AD7               	goto	l288
  2690                           
  2691                           ;noolite.c: 200: noo_send_buffer[0] |= (1<<7);
  2692  02D5  17C4               	bsf	noolite_send@noo_send_buffer,7
  2693                           
  2694                           ;noolite.c: 201: } else {
  2695  02D6  2AD8               	goto	l1540
  2696  02D7                     l288:	
  2697                           
  2698                           ;noolite.c: 202: noo_send_buffer[0] &= (~(1<<7));
  2699  02D7  13C4               	bcf	noolite_send@noo_send_buffer,7
  2700  02D8                     l1540:	
  2701                           
  2702                           ;noolite.c: 203: };
  2703                           ;noolite.c: 204: noo_send_buffer[1] = noo_send_command;
  2704  02D8  0870               	movf	noolite_send@noo_send_command,w
  2705  02D9  00C5               	movwf	noolite_send@noo_send_buffer+1
  2706                           
  2707                           ;noolite.c: 205: noo_send_format = noo_send_format | 4;
  2708  02DA  1571               	bsf	noolite_send@noo_send_format,2
  2709  02DB                     l287:	
  2710                           
  2711                           ;noolite.c: 206: }
  2712                           ;noolite.c: 207: endpos = 2;
  2713  02DB  3002               	movlw	2
  2714  02DC  00D5               	movwf	noolite_send@endpos
  2715                           
  2716                           ;noolite.c: 208: temp_send = noo_send_format & 3;
  2717  02DD  0871               	movf	noolite_send@noo_send_format,w
  2718  02DE  00D4               	movwf	noolite_send@temp_send
  2719  02DF  3003               	movlw	3
  2720  02E0  05D4               	andwf	noolite_send@temp_send,f
  2721                           
  2722                           ;noolite.c: 209: if (temp_send == 1) {
  2723  02E1  0B54               	decfsz	noolite_send@temp_send,w
  2724  02E2  2AEA               	goto	l1552
  2725                           
  2726                           ;noolite.c: 211: noo_send_buffer[2] = data[0];
  2727  02E3  0872               	movf	noolite_send@data,w
  2728  02E4  0086               	movwf	6
  2729  02E5  0187               	clrf	7
  2730  02E6  0801               	movf	1,w
  2731  02E7  00C6               	movwf	noolite_send@noo_send_buffer+2
  2732                           
  2733                           ;noolite.c: 212: endpos++;
  2734  02E8  0AD5               	incf	noolite_send@endpos,f
  2735                           
  2736                           ;noolite.c: 213: } else if (temp_send == 3) {
  2737  02E9  2B01               	goto	l1558
  2738  02EA                     l1552:	
  2739  02EA  3003               	movlw	3
  2740  02EB  0654               	xorwf	noolite_send@temp_send,w
  2741  02EC  1D03               	btfss	3,2
  2742  02ED  2B01               	goto	l1558
  2743                           
  2744                           ;noolite.c: 218: noo_send_buffer[2] = data[0];
  2745  02EE  0872               	movf	noolite_send@data,w
  2746  02EF  0086               	movwf	6
  2747  02F0  0187               	clrf	7
  2748  02F1  0801               	movf	1,w
  2749  02F2  00C6               	movwf	noolite_send@noo_send_buffer+2
  2750                           
  2751                           ;noolite.c: 219: noo_send_buffer[3] = data[1];
  2752  02F3  0872               	movf	noolite_send@data,w
  2753  02F4  0086               	movwf	6
  2754  02F5  3F41               	moviw [1]fsr1
  2755  02F6  00C7               	movwf	noolite_send@noo_send_buffer+3
  2756                           
  2757                           ;noolite.c: 220: noo_send_buffer[4] = data[2];
  2758  02F7  0872               	movf	noolite_send@data,w
  2759  02F8  0086               	movwf	6
  2760  02F9  3F42               	moviw [2]fsr1
  2761  02FA  00C8               	movwf	noolite_send@noo_send_buffer+4
  2762                           
  2763                           ;noolite.c: 221: noo_send_buffer[5] = data[3];
  2764  02FB  0872               	movf	noolite_send@data,w
  2765  02FC  0086               	movwf	6
  2766  02FD  3F43               	moviw [3]fsr1
  2767  02FE  00C9               	movwf	noolite_send@noo_send_buffer+5
  2768                           
  2769                           ;noolite.c: 222: endpos += 4;
  2770  02FF  3004               	movlw	4
  2771  0300  07D5               	addwf	noolite_send@endpos,f
  2772  0301                     l1558:	
  2773                           
  2774                           ;noolite.c: 223: }
  2775                           ;noolite.c: 224: if (noo_address_type != 0) {
  2776  0301  0824               	movf	_noo_address_type,w
  2777  0302  1903               	btfsc	3,2
  2778  0303  2B6B               	goto	l1574
  2779                           
  2780                           ;noolite.c: 225: noo_send_format = noo_send_format | 0x10;
  2781  0304  1671               	bsf	noolite_send@noo_send_format,4
  2782                           
  2783                           ;noolite.c: 226: noo_send_buffer[endpos] = (unsigned char) (startaddress + chn);
  2784  0305  0855               	movf	noolite_send@endpos,w
  2785  0306  3E44               	addlw	(low (noolite_send@noo_send_buffer| 0))& (0+255)
  2786  0307  0086               	movwf	6
  2787  0308  0187               	clrf	7
  2788  0309  0852               	movf	noolite_send@chn,w
  2789  030A  0720               	addwf	_startaddress,w
  2790  030B  0081               	movwf	1
  2791                           
  2792                           ;noolite.c: 227: endpos++;
  2793  030C  0AD5               	incf	noolite_send@endpos,f
  2794                           
  2795                           ;noolite.c: 228: noo_send_buffer[endpos] = (unsigned char) ((startaddress + chn) >> 8);
  2796  030D  0855               	movf	noolite_send@endpos,w
  2797  030E  3E44               	addlw	(low (noolite_send@noo_send_buffer| 0))& (0+255)
  2798  030F  0086               	movwf	6
  2799  0310  0820               	movf	_startaddress,w
  2800  0311  00F3               	movwf	??_noolite_send
  2801  0312  0821               	movf	_startaddress+1,w
  2802  0313  00F4               	movwf	??_noolite_send+1
  2803  0314  0822               	movf	_startaddress+2,w
  2804  0315  00F5               	movwf	??_noolite_send+2
  2805  0316  0823               	movf	_startaddress+3,w
  2806  0317  00F6               	movwf	??_noolite_send+3
  2807  0318  0852               	movf	noolite_send@chn,w
  2808  0319  00F7               	movwf	??_noolite_send+4
  2809  031A  01F8               	clrf	??_noolite_send+5
  2810  031B  01F9               	clrf	??_noolite_send+6
  2811  031C  01FA               	clrf	??_noolite_send+7
  2812  031D  07F3               	addwf	??_noolite_send,f
  2813  031E  0878               	movf	??_noolite_send+5,w
  2814  031F  3DF4               	addwfc	??_noolite_send+1,f
  2815  0320  0879               	movf	??_noolite_send+6,w
  2816  0321  3DF5               	addwfc	??_noolite_send+2,f
  2817  0322  087A               	movf	??_noolite_send+7,w
  2818  0323  3DF6               	addwfc	??_noolite_send+3,f
  2819  0324  0874               	movf	??_noolite_send+1,w
  2820  0325  00F3               	movwf	??_noolite_send
  2821  0326  0875               	movf	??_noolite_send+2,w
  2822  0327  00F4               	movwf	??_noolite_send+1
  2823  0328  0876               	movf	??_noolite_send+3,w
  2824  0329  00F5               	movwf	??_noolite_send+2
  2825  032A  01F6               	clrf	??_noolite_send+3
  2826  032B  0873               	movf	??_noolite_send,w
  2827  032C  0081               	movwf	1
  2828                           
  2829                           ;noolite.c: 229: endpos++;
  2830  032D  0AD5               	incf	noolite_send@endpos,f
  2831                           
  2832                           ;noolite.c: 230: noo_send_buffer[endpos] = (unsigned char) ((startaddress + chn) >> 16);
  2833  032E  0855               	movf	noolite_send@endpos,w
  2834  032F  3E44               	addlw	(low (noolite_send@noo_send_buffer| 0))& (0+255)
  2835  0330  0086               	movwf	6
  2836  0331  0820               	movf	_startaddress,w
  2837  0332  00F3               	movwf	??_noolite_send
  2838  0333  0821               	movf	_startaddress+1,w
  2839  0334  00F4               	movwf	??_noolite_send+1
  2840  0335  0822               	movf	_startaddress+2,w
  2841  0336  00F5               	movwf	??_noolite_send+2
  2842  0337  0823               	movf	_startaddress+3,w
  2843  0338  00F6               	movwf	??_noolite_send+3
  2844  0339  0852               	movf	noolite_send@chn,w
  2845  033A  00F7               	movwf	??_noolite_send+4
  2846  033B  01F8               	clrf	??_noolite_send+5
  2847  033C  01F9               	clrf	??_noolite_send+6
  2848  033D  01FA               	clrf	??_noolite_send+7
  2849  033E  07F3               	addwf	??_noolite_send,f
  2850  033F  0878               	movf	??_noolite_send+5,w
  2851  0340  3DF4               	addwfc	??_noolite_send+1,f
  2852  0341  0879               	movf	??_noolite_send+6,w
  2853  0342  3DF5               	addwfc	??_noolite_send+2,f
  2854  0343  087A               	movf	??_noolite_send+7,w
  2855  0344  3DF6               	addwfc	??_noolite_send+3,f
  2856  0345  0875               	movf	??_noolite_send+2,w
  2857  0346  00F3               	movwf	??_noolite_send
  2858  0347  0876               	movf	??_noolite_send+3,w
  2859  0348  00F4               	movwf	??_noolite_send+1
  2860  0349  01F5               	clrf	??_noolite_send+2
  2861  034A  01F6               	clrf	??_noolite_send+3
  2862  034B  0873               	movf	??_noolite_send,w
  2863  034C  0081               	movwf	1
  2864                           
  2865                           ;noolite.c: 231: endpos++;
  2866  034D  0AD5               	incf	noolite_send@endpos,f
  2867                           
  2868                           ;noolite.c: 232: noo_send_buffer[endpos] = (unsigned char) ((startaddress + chn) >> 24);
  2869  034E  0855               	movf	noolite_send@endpos,w
  2870  034F  3E44               	addlw	(low (noolite_send@noo_send_buffer| 0))& (0+255)
  2871  0350  0086               	movwf	6
  2872  0351  0820               	movf	_startaddress,w
  2873  0352  00F3               	movwf	??_noolite_send
  2874  0353  0821               	movf	_startaddress+1,w
  2875  0354  00F4               	movwf	??_noolite_send+1
  2876  0355  0822               	movf	_startaddress+2,w
  2877  0356  00F5               	movwf	??_noolite_send+2
  2878  0357  0823               	movf	_startaddress+3,w
  2879  0358  00F6               	movwf	??_noolite_send+3
  2880  0359  0852               	movf	noolite_send@chn,w
  2881  035A  00F7               	movwf	??_noolite_send+4
  2882  035B  01F8               	clrf	??_noolite_send+5
  2883  035C  01F9               	clrf	??_noolite_send+6
  2884  035D  01FA               	clrf	??_noolite_send+7
  2885  035E  07F3               	addwf	??_noolite_send,f
  2886  035F  0878               	movf	??_noolite_send+5,w
  2887  0360  3DF4               	addwfc	??_noolite_send+1,f
  2888  0361  0879               	movf	??_noolite_send+6,w
  2889  0362  3DF5               	addwfc	??_noolite_send+2,f
  2890  0363  087A               	movf	??_noolite_send+7,w
  2891  0364  3DF6               	addwfc	??_noolite_send+3,f
  2892  0365  0876               	movf	??_noolite_send+3,w
  2893  0366  00F3               	movwf	??_noolite_send
  2894  0367  01F4               	clrf	??_noolite_send+1
  2895  0368  01F5               	clrf	??_noolite_send+2
  2896  0369  01F6               	clrf	??_noolite_send+3
  2897  036A  2B92               	goto	L8
  2898  036B                     l1574:	
  2899                           ;noolite.c: 234: } else {
  2900                           
  2901                           ;noolite.c: 233: endpos++;
  2902                           
  2903                           
  2904                           ;noolite.c: 235: noo_send_buffer[endpos] = (unsigned char) (startaddress + chn);
  2905  036B  0855               	movf	noolite_send@endpos,w
  2906  036C  3E44               	addlw	(low (noolite_send@noo_send_buffer| 0))& (0+255)
  2907  036D  0086               	movwf	6
  2908  036E  0187               	clrf	7
  2909  036F  0852               	movf	noolite_send@chn,w
  2910  0370  0720               	addwf	_startaddress,w
  2911  0371  0081               	movwf	1
  2912                           
  2913                           ;noolite.c: 236: endpos++;
  2914  0372  0AD5               	incf	noolite_send@endpos,f
  2915                           
  2916                           ;noolite.c: 237: noo_send_buffer[endpos] = (unsigned char) ((startaddress + chn) >> 8);
  2917  0373  0855               	movf	noolite_send@endpos,w
  2918  0374  3E44               	addlw	(low (noolite_send@noo_send_buffer| 0))& (0+255)
  2919  0375  0086               	movwf	6
  2920  0376  0820               	movf	_startaddress,w
  2921  0377  00F3               	movwf	??_noolite_send
  2922  0378  0821               	movf	_startaddress+1,w
  2923  0379  00F4               	movwf	??_noolite_send+1
  2924  037A  0822               	movf	_startaddress+2,w
  2925  037B  00F5               	movwf	??_noolite_send+2
  2926  037C  0823               	movf	_startaddress+3,w
  2927  037D  00F6               	movwf	??_noolite_send+3
  2928  037E  0852               	movf	noolite_send@chn,w
  2929  037F  00F7               	movwf	??_noolite_send+4
  2930  0380  01F8               	clrf	??_noolite_send+5
  2931  0381  01F9               	clrf	??_noolite_send+6
  2932  0382  01FA               	clrf	??_noolite_send+7
  2933  0383  07F3               	addwf	??_noolite_send,f
  2934  0384  0878               	movf	??_noolite_send+5,w
  2935  0385  3DF4               	addwfc	??_noolite_send+1,f
  2936  0386  0879               	movf	??_noolite_send+6,w
  2937  0387  3DF5               	addwfc	??_noolite_send+2,f
  2938  0388  087A               	movf	??_noolite_send+7,w
  2939  0389  3DF6               	addwfc	??_noolite_send+3,f
  2940  038A  0874               	movf	??_noolite_send+1,w
  2941  038B  00F3               	movwf	??_noolite_send
  2942  038C  0875               	movf	??_noolite_send+2,w
  2943  038D  00F4               	movwf	??_noolite_send+1
  2944  038E  0876               	movf	??_noolite_send+3,w
  2945  038F  00F5               	movwf	??_noolite_send+2
  2946  0390  01F6               	clrf	??_noolite_send+3
  2947  0391  0873               	movf	??_noolite_send,w
  2948  0392                     L8:	
  2949  0392  0081               	movwf	1
  2950                           
  2951                           ;noolite.c: 238: endpos++;
  2952  0393  0AD5               	incf	noolite_send@endpos,f
  2953                           
  2954                           ;noolite.c: 239: }
  2955                           ;noolite.c: 240: noo_send_buffer[endpos] = noo_send_format;
  2956  0394  0855               	movf	noolite_send@endpos,w
  2957  0395  3E44               	addlw	(low (noolite_send@noo_send_buffer| 0))& (0+255)
  2958  0396  0086               	movwf	6
  2959  0397  0187               	clrf	7
  2960  0398  0871               	movf	noolite_send@noo_send_format,w
  2961  0399  0081               	movwf	1
  2962                           
  2963                           ;noolite.c: 241: endpos++;
  2964  039A  0AD5               	incf	noolite_send@endpos,f
  2965                           
  2966                           ;noolite.c: 242: temp_send = 0;
  2967  039B  01D4               	clrf	noolite_send@temp_send
  2968                           
  2969                           ;noolite.c: 243: countbit = (unsigned char) (endpos * 8);
  2970  039C  0855               	movf	noolite_send@endpos,w
  2971  039D  0709               	addwf	9,w
  2972  039E  0709               	addwf	9,w
  2973  039F  0709               	addwf	9,w
  2974  03A0  00D1               	movwf	noolite_send@countbit
  2975                           
  2976                           ;noolite.c: 244: countsend = startpos + 1;
  2977  03A1  0850               	movf	noolite_send@startpos,w
  2978  03A2  3E01               	addlw	1
  2979  03A3  00D3               	movwf	noolite_send@countsend
  2980  03A4                     l1612:	
  2981                           ;noolite.c: 245: while (countsend < countbit) {
  2982                           
  2983  03A4  0020               	movlb	0	; select bank0
  2984  03A5  0851               	movf	noolite_send@countbit,w
  2985  03A6  0253               	subwf	noolite_send@countsend,w
  2986  03A7  1803               	btfsc	3,0
  2987  03A8  2BCE               	goto	l1614
  2988                           
  2989                           ;noolite.c: 246: if (((noo_send_buffer[(countsend / 8)] & (1<<(countsend % 8))) != 0)) {
  2990  03A9  0853               	movf	noolite_send@countsend,w
  2991  03AA  00F3               	movwf	??_noolite_send
  2992  03AB  36F3               	lsrf	??_noolite_send,f
  2993  03AC  36F3               	lsrf	??_noolite_send,f
  2994  03AD  36F3               	lsrf	??_noolite_send,f
  2995  03AE  0873               	movf	??_noolite_send,w
  2996  03AF  3E44               	addlw	(low (noolite_send@noo_send_buffer| 0))& (0+255)
  2997  03B0  0086               	movwf	6
  2998  03B1  3001               	movlw	1
  2999  03B2  0187               	clrf	7
  3000  03B3  00F4               	movwf	??_noolite_send+1
  3001  03B4  0853               	movf	noolite_send@countsend,w
  3002  03B5  3907               	andlw	7
  3003  03B6  0A89               	incf	9,f
  3004  03B7  2BB9               	goto	u964
  3005  03B8                     u965:	
  3006  03B8  35F4               	lslf	??_noolite_send+1,f
  3007  03B9                     u964:	
  3008  03B9  0B89               	decfsz	9,f
  3009  03BA  2BB8               	goto	u965
  3010  03BB  0874               	movf	??_noolite_send+1,w
  3011  03BC  0501               	andwf	1,w
  3012  03BD  1903               	btfsc	3,2
  3013  03BE  2BC1               	goto	l1594
  3014                           
  3015                           ;noolite.c: 247: temp_send = temp_send^0x01;
  3016  03BF  3001               	movlw	1
  3017  03C0  06D4               	xorwf	noolite_send@temp_send,f
  3018  03C1                     l1594:	
  3019                           
  3020                           ;noolite.c: 248: }
  3021                           ;noolite.c: 249: tx_status &= (~(1<<4));
  3022  03C1  122B               	bcf	_tx_status,4
  3023                           
  3024                           ;noolite.c: 250: if (((temp_send & (1<<0)) != 0)) {
  3025  03C2  1C54               	btfss	noolite_send@temp_send,0
  3026  03C3  2BC7               	goto	l1602
  3027                           
  3028                           ;noolite.c: 251: temp_send = temp_send^0x18;
  3029  03C4  3018               	movlw	24
  3030  03C5  06D4               	xorwf	noolite_send@temp_send,f
  3031                           
  3032                           ;noolite.c: 252: tx_status |= (1<<4);
  3033  03C6  162B               	bsf	_tx_status,4
  3034  03C7                     l1602:	
  3035                           
  3036                           ;noolite.c: 253: }
  3037                           ;noolite.c: 254: temp_send = temp_send >> 1;
  3038  03C7  36D4               	lsrf	noolite_send@temp_send,f
  3039                           
  3040                           ;noolite.c: 255: temp_send &= (~(1<<7));
  3041  03C8  13D4               	bcf	noolite_send@temp_send,7
  3042                           
  3043                           ;noolite.c: 256: if (((tx_status & (1<<4)) != 0)) {
  3044  03C9  1A2B               	btfsc	_tx_status,4
  3045                           
  3046                           ;noolite.c: 257: temp_send |= (1<<7);
  3047  03CA  17D4               	bsf	noolite_send@temp_send,7
  3048                           
  3049                           ;noolite.c: 258: }
  3050                           ;noolite.c: 259: countsend++;
  3051  03CB  0AD3               	incf	noolite_send@countsend,f
  3052  03CC  0064               	clrwdt	;# 
  3053  03CD  2BA4               	goto	l1612
  3054  03CE                     l1614:	
  3055                           
  3056                           ;noolite.c: 261: }
  3057                           ;noolite.c: 262: noo_send_buffer[endpos] = temp_send;
  3058  03CE  0855               	movf	noolite_send@endpos,w
  3059  03CF  3E44               	addlw	(low (noolite_send@noo_send_buffer| 0))& (0+255)
  3060  03D0  0086               	movwf	6
  3061  03D1  0187               	clrf	7
  3062  03D2  0854               	movf	noolite_send@temp_send,w
  3063  03D3  0081               	movwf	1
  3064  03D4  30C0               	movlw	192
  3065                           
  3066                           ;noolite.c: 263: endpos++;
  3067  03D5  0AD5               	incf	noolite_send@endpos,f
  3068                           
  3069                           ;noolite.c: 264: OPTION_REG &= 0b11000000; OPTION_REG |= 0b00000011;
  3070  03D6  0021               	movlb	1	; select bank1
  3071  03D7  0595               	andwf	21,f	;volatile
  3072  03D8  3003               	movlw	3
  3073  03D9  0495               	iorwf	21,f	;volatile
  3074                           
  3075                           ;noolite.c: 265: temp_send = 3;
  3076  03DA  0020               	movlb	0	; select bank0
  3077  03DB  00D4               	movwf	noolite_send@temp_send
  3078  03DC  3026               	movlw	38
  3079                           
  3080                           ;noolite.c: 266: tx_status &= (~(1<<2));
  3081  03DD  112B               	bcf	_tx_status,2
  3082                           
  3083                           ;noolite.c: 267: tx_status &= (~(1<<3));
  3084  03DE  11AB               	bcf	_tx_status,3
  3085                           
  3086                           ;noolite.c: 268: tx_status |= (1<<0);
  3087  03DF  142B               	bsf	_tx_status,0
  3088                           
  3089                           ;noolite.c: 269: tx_status |= (1<<5);
  3090  03E0  16AB               	bsf	_tx_status,5
  3091                           
  3092                           ;noolite.c: 270: countsend = 0;
  3093  03E1  01D3               	clrf	noolite_send@countsend
  3094                           
  3095                           ;noolite.c: 271: countbit = 38;
  3096  03E2  00D1               	movwf	noolite_send@countbit
  3097  03E3  0064               	clrwdt	;# 
  3098                           
  3099                           ;noolite.c: 273: LATCbits.LATC3 = 1;
  3100  03E4  0022               	movlb	2	; select bank2
  3101  03E5  158E               	bsf	14,3	;volatile
  3102                           
  3103                           ;noolite.c: 274: _delay((unsigned long)((15)*(8000000/4000.0)));
  3104  03E6  3027               	movlw	39
  3105  03E7  00F3               	movwf	??_noolite_send
  3106  03E8  30F5               	movlw	245
  3107  03E9                     u1917:	
  3108  03E9  0B89               	decfsz	9,f
  3109  03EA  2BE9               	goto	u1917
  3110  03EB  0BF3               	decfsz	??_noolite_send,f
  3111  03EC  2BE9               	goto	u1917
  3112  03ED  0000               	nop
  3113                           
  3114                           ;noolite.c: 275: LATCbits.LATC3 = 0;
  3115  03EE  0022               	movlb	2	; select bank2
  3116  03EF  118E               	bcf	14,3	;volatile
  3117                           
  3118                           ;noolite.c: 276: TMR0 = 196;
  3119  03F0  30C4               	movlw	196
  3120  03F1  0020               	movlb	0	; select bank0
  3121  03F2  0095               	movwf	21	;volatile
  3122                           
  3123                           ;noolite.c: 277: TMR0IF = 0;
  3124  03F3  110B               	bcf	11,2	;volatile
  3125                           
  3126                           ;noolite.c: 278: TMR0IE = 0;
  3127  03F4  128B               	bcf	11,5	;volatile
  3128  03F5                     l301:	
  3129                           ;noolite.c: 279: while (((tx_status & (1<<3)) == 0)) {
  3130                           
  3131  03F5  19AB               	btfsc	_tx_status,3
  3132  03F6  2C4F               	goto	l312
  3133                           
  3134                           ;noolite.c: 280: if (TMR0IF) {
  3135  03F7  1D0B               	btfss	11,2	;volatile
  3136  03F8  2BF5               	goto	l301
  3137                           
  3138                           ;noolite.c: 281: __nop();
  3139  03F9  0000               	nop
  3140                           
  3141                           ;noolite.c: 282: if (countsend < countbit) {
  3142  03FA  0020               	movlb	0	; select bank0
  3143  03FB  0851               	movf	noolite_send@countbit,w
  3144  03FC  0253               	subwf	noolite_send@countsend,w
  3145  03FD  1803               	skipnc
  3146  03FE  2C16               	goto	l304
  3147                           
  3148                           ;noolite.c: 283: if (((tx_status & (1<<2)) == 0)) {
  3149  03FF  192B               	btfsc	_tx_status,2
  3150  0400  2C0D               	goto	l1662
  3151                           
  3152                           ;noolite.c: 284: if (((tx_status & (1<<0)) == 0)) {
  3153  0401  182B               	btfsc	_tx_status,0
  3154  0402  2C06               	goto	l306
  3155                           
  3156                           ;noolite.c: 285: LATAbits.LATA5 = 1;
  3157  0403  0022               	movlb	2	; select bank2
  3158  0404  168C               	bsf	12,5	;volatile
  3159                           
  3160                           ;noolite.c: 286: } else {
  3161  0405  2C08               	goto	l1658
  3162  0406                     l306:	
  3163                           
  3164                           ;noolite.c: 287: LATAbits.LATA5 = 0;
  3165  0406  0022               	movlb	2	; select bank2
  3166  0407  128C               	bcf	12,5	;volatile
  3167  0408                     l1658:	
  3168                           
  3169                           ;noolite.c: 288: }
  3170                           ;noolite.c: 289: TMR0 = 196;
  3171  0408  30C4               	movlw	196
  3172  0409  0020               	movlb	0	; select bank0
  3173  040A  0095               	movwf	21	;volatile
  3174                           
  3175                           ;noolite.c: 290: tx_status |= (1<<2);
  3176  040B  152B               	bsf	_tx_status,2
  3177                           
  3178                           ;noolite.c: 291: } else {
  3179  040C  2C32               	goto	l309
  3180  040D                     l1662:	
  3181                           
  3182                           ;noolite.c: 292: LATA ^= (1<<5);
  3183  040D  3020               	movlw	32
  3184  040E  0022               	movlb	2	; select bank2
  3185  040F  068C               	xorwf	12,f	;volatile
  3186                           
  3187                           ;noolite.c: 293: TMR0 = 196;
  3188  0410  30C4               	movlw	196
  3189  0411  0020               	movlb	0	; select bank0
  3190  0412  0095               	movwf	21	;volatile
  3191                           
  3192                           ;noolite.c: 294: tx_status &= (~(1<<2));
  3193  0413  112B               	bcf	_tx_status,2
  3194                           
  3195                           ;noolite.c: 295: countsend++;
  3196  0414  0AD3               	incf	noolite_send@countsend,f
  3197  0415  2C32               	goto	l309
  3198  0416                     l304:	
  3199                           
  3200                           ;noolite.c: 298: LATAbits.LATA5 = 0;
  3201  0416  0022               	movlb	2	; select bank2
  3202  0417  128C               	bcf	12,5	;volatile
  3203                           
  3204                           ;noolite.c: 299: OPTION_REG &= 0b11000000; OPTION_REG |= 0b00000011;
  3205  0418  30C0               	movlw	192
  3206  0419  0021               	movlb	1	; select bank1
  3207  041A  0595               	andwf	21,f	;volatile
  3208  041B  3003               	movlw	3
  3209  041C  0495               	iorwf	21,f	;volatile
  3210                           
  3211                           ;noolite.c: 300: TMR0 = 67;
  3212  041D  3043               	movlw	67
  3213  041E  0020               	movlb	0	; select bank0
  3214  041F  0095               	movwf	21	;volatile
  3215  0420  0064               	clrwdt	;# 
  3216                           
  3217                           ;noolite.c: 302: tx_status &= (~(1<<5));
  3218  0421  0020               	movlb	0	; select bank0
  3219  0422  12AB               	bcf	_tx_status,5
  3220                           
  3221                           ;noolite.c: 303: countsend = startpos;
  3222  0423  0850               	movf	noolite_send@startpos,w
  3223  0424  00D3               	movwf	noolite_send@countsend
  3224                           
  3225                           ;noolite.c: 304: countbit = endpos * 8;
  3226  0425  0855               	movf	noolite_send@endpos,w
  3227  0426  0709               	addwf	9,w
  3228  0427  0709               	addwf	9,w
  3229  0428  0709               	addwf	9,w
  3230  0429  00D1               	movwf	noolite_send@countbit
  3231                           
  3232                           ;noolite.c: 305: if (temp_send != 0) {
  3233  042A  0854               	movf	noolite_send@temp_send,w
  3234  042B  1903               	btfsc	3,2
  3235  042C  2C2F               	goto	l1678
  3236                           
  3237                           ;noolite.c: 306: temp_send--;
  3238  042D  03D4               	decf	noolite_send@temp_send,f
  3239                           
  3240                           ;noolite.c: 307: } else {
  3241  042E  2C32               	goto	l309
  3242  042F                     l1678:	
  3243                           
  3244                           ;noolite.c: 308: TMR0 = 0;
  3245  042F  0195               	clrf	21	;volatile
  3246                           
  3247                           ;noolite.c: 309: tx_status |= (1<<3);
  3248  0430  15AB               	bsf	_tx_status,3
  3249                           
  3250                           ;noolite.c: 310: break;
  3251  0431  2C4F               	goto	l312
  3252  0432                     l309:	
  3253                           
  3254                           ;noolite.c: 311: }
  3255                           ;noolite.c: 312: }
  3256                           ;noolite.c: 313: if (((tx_status & (1<<5)) == 0)) {
  3257  0432  1AAB               	btfsc	_tx_status,5
  3258  0433  2C4D               	goto	l313
  3259                           
  3260                           ;noolite.c: 314: if (((noo_send_buffer[(countsend / 8)] & (1<<(countsend % 8))) != 0)) {
  3261  0434  0853               	movf	noolite_send@countsend,w
  3262  0435  00F3               	movwf	??_noolite_send
  3263  0436  36F3               	lsrf	??_noolite_send,f
  3264  0437  36F3               	lsrf	??_noolite_send,f
  3265  0438  36F3               	lsrf	??_noolite_send,f
  3266  0439  0873               	movf	??_noolite_send,w
  3267  043A  3E44               	addlw	(low (noolite_send@noo_send_buffer| 0))& (0+255)
  3268  043B  0086               	movwf	6
  3269  043C  3001               	movlw	1
  3270  043D  0187               	clrf	7
  3271  043E  00F4               	movwf	??_noolite_send+1
  3272  043F  0853               	movf	noolite_send@countsend,w
  3273  0440  3907               	andlw	7
  3274  0441  0A89               	incf	9,f
  3275  0442  2C44               	goto	u1074
  3276  0443                     u1075:	
  3277  0443  35F4               	lslf	??_noolite_send+1,f
  3278  0444                     u1074:	
  3279  0444  0B89               	decfsz	9,f
  3280  0445  2C43               	goto	u1075
  3281  0446  0874               	movf	??_noolite_send+1,w
  3282  0447  0501               	andwf	1,w
  3283  0448  1903               	btfsc	3,2
  3284  0449  2C4C               	goto	l314
  3285                           
  3286                           ;noolite.c: 315: tx_status |= (1<<0);
  3287  044A  142B               	bsf	_tx_status,0
  3288                           
  3289                           ;noolite.c: 316: } else {
  3290  044B  2C4D               	goto	l313
  3291  044C                     l314:	
  3292                           
  3293                           ;noolite.c: 317: tx_status &= (~(1<<0));
  3294  044C  102B               	bcf	_tx_status,0
  3295  044D                     l313:	
  3296                           
  3297                           ;noolite.c: 318: }
  3298                           ;noolite.c: 319: }
  3299                           ;noolite.c: 320: TMR0IF = 0;
  3300  044D  110B               	bcf	11,2	;volatile
  3301  044E  2BF5               	goto	l301
  3302  044F                     l312:	
  3303                           
  3304                           ;noolite.c: 321: }
  3305                           ;noolite.c: 322: }
  3306                           ;noolite.c: 323: TMR0IF = 0;
  3307  044F  110B               	bcf	11,2	;volatile
  3308                           
  3309                           ;noolite.c: 324: LATAbits.LATA5 = 0;
  3310  0450  0022               	movlb	2	; select bank2
  3311  0451  128C               	bcf	12,5	;volatile
  3312  0452  0008               	return
  3313  0453                     __end_of_noolite_send:	
  3314                           
  3315                           	psect	text4
  3316  0134                     __ptext4:	
  3317 ;; *************** function _Init_TypeFromFlash *****************
  3318 ;; Defined at:
  3319 ;;		line 231 in file "main.c"
  3320 ;; Parameters:    Size  Location     Type
  3321 ;;		None
  3322 ;; Auto vars:     Size  Location     Type
  3323 ;;		None
  3324 ;; Return value:  Size  Location     Type
  3325 ;;                  1    wreg      unsigned char 
  3326 ;; Registers used:
  3327 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3328 ;; Tracked objects:
  3329 ;;		On entry : 0/2
  3330 ;;		On exit  : 0/0
  3331 ;;		Unchanged: 0/0
  3332 ;; Data sizes:     COMMON   BANK0   BANK1
  3333 ;;      Params:         0       0       0
  3334 ;;      Locals:         0       0       0
  3335 ;;      Temps:          1       0       0
  3336 ;;      Totals:         1       0       0
  3337 ;;Total ram usage:        1 bytes
  3338 ;; Hardware stack levels used:    1
  3339 ;; This function calls:
  3340 ;;		Nothing
  3341 ;; This function is called by:
  3342 ;;		_main
  3343 ;; This function uses a non-reentrant model
  3344 ;;
  3345                           
  3346                           
  3347                           ;psect for function _Init_TypeFromFlash
  3348  0134                     _Init_TypeFromFlash:	
  3349                           
  3350                           ;main.c: 232: if (((Type[0] >> 8) == 0x5A) && ((Type[0] & 0xFF) < 4)) {
  3351                           
  3352                           ;incstack = 0
  3353                           ; Regs used in _Init_TypeFromFlash: [wreg-fsr0h+status,2+status,0+pclath]
  3354  0134  30C1               	movlw	193
  3355  0135  0084               	movwf	4
  3356  0136  3087               	movlw	135
  3357  0137  0085               	movwf	5
  3358  0138  0012               	moviw fsr0++
  3359  0139  3A5A               	xorlw	90
  3360  013A  1D03               	btfss	3,2
  3361  013B  3400               	retlw	0
  3362  013C  30C0               	movlw	192
  3363  013D  0084               	movwf	4
  3364  013E  3087               	movlw	135
  3365  013F  0085               	movwf	5
  3366  0140  0800               	movf	0,w	;code access
  3367  0141  00F0               	movwf	??_Init_TypeFromFlash
  3368  0142  3004               	movlw	4
  3369  0143  0270               	subwf	??_Init_TypeFromFlash,w
  3370  0144  1803               	skipnc
  3371  0145  3400               	retlw	0
  3372                           
  3373                           ;main.c: 233: return (Type[0] & 0xFF);
  3374  0146  0800               	movf	0,w	;code access
  3375  0147  0008               	return
  3376  0148                     __end_of_Init_TypeFromFlash:	
  3377                           ;main.c: 235: return 0;
  3378                           
  3379                           
  3380                           	psect	text5
  3381  01A7                     __ptext5:	
  3382 ;; *************** function _Init_TxStatusFromFlash *****************
  3383 ;; Defined at:
  3384 ;;		line 239 in file "main.c"
  3385 ;; Parameters:    Size  Location     Type
  3386 ;;		None
  3387 ;; Auto vars:     Size  Location     Type
  3388 ;;  cellNum         1    4[COMMON] unsigned char 
  3389 ;; Return value:  Size  Location     Type
  3390 ;;                  1    wreg      unsigned char 
  3391 ;; Registers used:
  3392 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3393 ;; Tracked objects:
  3394 ;;		On entry : 1F/0
  3395 ;;		On exit  : 1F/0
  3396 ;;		Unchanged: 1F/0
  3397 ;; Data sizes:     COMMON   BANK0   BANK1
  3398 ;;      Params:         0       0       0
  3399 ;;      Locals:         1       0       0
  3400 ;;      Temps:          4       0       0
  3401 ;;      Totals:         5       0       0
  3402 ;;Total ram usage:        5 bytes
  3403 ;; Hardware stack levels used:    1
  3404 ;; This function calls:
  3405 ;;		Nothing
  3406 ;; This function is called by:
  3407 ;;		_main
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410                           
  3411                           
  3412                           ;psect for function _Init_TxStatusFromFlash
  3413  01A7                     _Init_TxStatusFromFlash:	
  3414                           
  3415                           ;main.c: 240: for (uint8_t cellNum = 0; cellNum < 8; cellNum++) {
  3416                           
  3417                           ;incstack = 0
  3418                           ; Regs used in _Init_TxStatusFromFlash: [wreg-fsr0h+status,2+status,0+pclath]
  3419  01A7  01F4               	clrf	Init_TxStatusFromFlash@cellNum
  3420  01A8                     l1732:	
  3421                           
  3422                           ;main.c: 241: if (TxStatus[cellNum] == 0xFFFF) {
  3423  01A8  0874               	movf	Init_TxStatusFromFlash@cellNum,w
  3424  01A9  00F0               	movwf	??_Init_TxStatusFromFlash
  3425  01AA  30D0               	movlw	208
  3426  01AB  01F1               	clrf	??_Init_TxStatusFromFlash+1
  3427  01AC  35F0               	lslf	??_Init_TxStatusFromFlash,f
  3428  01AD  0DF1               	rlf	??_Init_TxStatusFromFlash+1,f
  3429  01AE  0770               	addwf	??_Init_TxStatusFromFlash,w
  3430  01AF  0084               	movwf	4
  3431  01B0  3087               	movlw	135
  3432  01B1  3D71               	addwfc	??_Init_TxStatusFromFlash+1,w
  3433  01B2  0085               	movwf	5
  3434  01B3  0012               	moviw fsr0++
  3435  01B4  3AFF               	xorlw	255
  3436  01B5  00F2               	movwf	??_Init_TxStatusFromFlash+2
  3437  01B6  0012               	moviw fsr0++
  3438  01B7  3AFF               	xorlw	255
  3439  01B8  04F2               	iorwf	??_Init_TxStatusFromFlash+2,f
  3440  01B9  1D03               	btfss	3,2
  3441  01BA  29F1               	goto	l1754
  3442                           
  3443                           ;main.c: 242: if (cellNum > 0) {
  3444  01BB  0874               	movf	Init_TxStatusFromFlash@cellNum,w
  3445  01BC  1903               	btfsc	3,2
  3446  01BD  3400               	retlw	0
  3447                           
  3448                           ;main.c: 243: if (((TxStatus[cellNum - 1] >> 8) == 0x5A) && ((TxStatus[cellNum - 1] & 0x
      +                          FF) < 3)) {
  3449  01BE  0874               	movf	Init_TxStatusFromFlash@cellNum,w
  3450  01BF  00F0               	movwf	??_Init_TxStatusFromFlash
  3451  01C0  30CE               	movlw	206
  3452  01C1  01F1               	clrf	??_Init_TxStatusFromFlash+1
  3453  01C2  35F0               	lslf	??_Init_TxStatusFromFlash,f
  3454  01C3  0DF1               	rlf	??_Init_TxStatusFromFlash+1,f
  3455  01C4  0770               	addwf	??_Init_TxStatusFromFlash,w
  3456  01C5  0084               	movwf	4
  3457  01C6  3087               	movlw	135
  3458  01C7  3D71               	addwfc	??_Init_TxStatusFromFlash+1,w
  3459  01C8  0085               	movwf	5
  3460  01C9  3F00               	moviw [0]fsr0
  3461  01CA  00F2               	movwf	??_Init_TxStatusFromFlash+2
  3462  01CB  3F01               	moviw [1]fsr0
  3463  01CC  00F3               	movwf	??_Init_TxStatusFromFlash+3
  3464  01CD  00F2               	movwf	??_Init_TxStatusFromFlash+2
  3465  01CE  305A               	movlw	90
  3466  01CF  01F3               	clrf	??_Init_TxStatusFromFlash+3
  3467  01D0  0672               	xorwf	??_Init_TxStatusFromFlash+2,w
  3468  01D1  1D03               	btfss	3,2
  3469  01D2  3400               	retlw	0
  3470  01D3  0874               	movf	Init_TxStatusFromFlash@cellNum,w
  3471  01D4  00F0               	movwf	??_Init_TxStatusFromFlash
  3472  01D5  30CE               	movlw	206
  3473  01D6  01F1               	clrf	??_Init_TxStatusFromFlash+1
  3474  01D7  35F0               	lslf	??_Init_TxStatusFromFlash,f
  3475  01D8  0DF1               	rlf	??_Init_TxStatusFromFlash+1,f
  3476  01D9  0770               	addwf	??_Init_TxStatusFromFlash,w
  3477  01DA  0084               	movwf	4
  3478  01DB  3087               	movlw	135
  3479  01DC  3D71               	addwfc	??_Init_TxStatusFromFlash+1,w
  3480  01DD  0085               	movwf	5
  3481  01DE  0800               	movf	0,w	;code access
  3482  01DF  00F2               	movwf	??_Init_TxStatusFromFlash+2
  3483  01E0  3003               	movlw	3
  3484  01E1  0272               	subwf	??_Init_TxStatusFromFlash+2,w
  3485  01E2  1803               	skipnc
  3486  01E3  3400               	retlw	0
  3487                           
  3488                           ;main.c: 244: return TxStatus[cellNum - 1];
  3489  01E4  0874               	movf	Init_TxStatusFromFlash@cellNum,w
  3490  01E5  00F0               	movwf	??_Init_TxStatusFromFlash
  3491  01E6  30CE               	movlw	206
  3492  01E7  01F1               	clrf	??_Init_TxStatusFromFlash+1
  3493  01E8  35F0               	lslf	??_Init_TxStatusFromFlash,f
  3494  01E9  0DF1               	rlf	??_Init_TxStatusFromFlash+1,f
  3495  01EA  0770               	addwf	??_Init_TxStatusFromFlash,w
  3496  01EB  0084               	movwf	4
  3497  01EC  3087               	movlw	135
  3498  01ED  3D71               	addwfc	??_Init_TxStatusFromFlash+1,w
  3499  01EE  0085               	movwf	5
  3500  01EF  0800               	movf	0,w	;code access
  3501  01F0  0008               	return
  3502  01F1                     l1754:	
  3503                           ;main.c: 246: return 0;
  3504                           
  3505                           
  3506                           ;main.c: 252: if (cellNum == 7) {
  3507  01F1  3007               	movlw	7
  3508  01F2  0674               	xorwf	Init_TxStatusFromFlash@cellNum,w
  3509  01F3  1D03               	btfss	3,2
  3510  01F4  2A28               	goto	l1770
  3511                           
  3512                           ;main.c: 253: if (((TxStatus[cellNum] >> 8) == 0x5A) && ((TxStatus[cellNum] & 0xFF) < 3)
      +                          ) {
  3513  01F5  0874               	movf	Init_TxStatusFromFlash@cellNum,w
  3514  01F6  00F0               	movwf	??_Init_TxStatusFromFlash
  3515  01F7  30D0               	movlw	208
  3516  01F8  01F1               	clrf	??_Init_TxStatusFromFlash+1
  3517  01F9  35F0               	lslf	??_Init_TxStatusFromFlash,f
  3518  01FA  0DF1               	rlf	??_Init_TxStatusFromFlash+1,f
  3519  01FB  0770               	addwf	??_Init_TxStatusFromFlash,w
  3520  01FC  0084               	movwf	4
  3521  01FD  3087               	movlw	135
  3522  01FE  3D71               	addwfc	??_Init_TxStatusFromFlash+1,w
  3523  01FF  0085               	movwf	5
  3524  0200  3F00               	moviw [0]fsr0
  3525  0201  00F2               	movwf	??_Init_TxStatusFromFlash+2
  3526  0202  3F01               	moviw [1]fsr0
  3527  0203  00F3               	movwf	??_Init_TxStatusFromFlash+3
  3528  0204  00F2               	movwf	??_Init_TxStatusFromFlash+2
  3529  0205  305A               	movlw	90
  3530  0206  01F3               	clrf	??_Init_TxStatusFromFlash+3
  3531  0207  0672               	xorwf	??_Init_TxStatusFromFlash+2,w
  3532  0208  1D03               	btfss	3,2
  3533  0209  3400               	retlw	0
  3534  020A  0874               	movf	Init_TxStatusFromFlash@cellNum,w
  3535  020B  00F0               	movwf	??_Init_TxStatusFromFlash
  3536  020C  30D0               	movlw	208
  3537  020D  01F1               	clrf	??_Init_TxStatusFromFlash+1
  3538  020E  35F0               	lslf	??_Init_TxStatusFromFlash,f
  3539  020F  0DF1               	rlf	??_Init_TxStatusFromFlash+1,f
  3540  0210  0770               	addwf	??_Init_TxStatusFromFlash,w
  3541  0211  0084               	movwf	4
  3542  0212  3087               	movlw	135
  3543  0213  3D71               	addwfc	??_Init_TxStatusFromFlash+1,w
  3544  0214  0085               	movwf	5
  3545  0215  0800               	movf	0,w	;code access
  3546  0216  00F2               	movwf	??_Init_TxStatusFromFlash+2
  3547  0217  3003               	movlw	3
  3548  0218  0272               	subwf	??_Init_TxStatusFromFlash+2,w
  3549  0219  1803               	skipnc
  3550  021A  3400               	retlw	0
  3551                           
  3552                           ;main.c: 254: return TxStatus[cellNum];
  3553  021B  0874               	movf	Init_TxStatusFromFlash@cellNum,w
  3554  021C  00F0               	movwf	??_Init_TxStatusFromFlash
  3555  021D  30D0               	movlw	208
  3556  021E  01F1               	clrf	??_Init_TxStatusFromFlash+1
  3557  021F  35F0               	lslf	??_Init_TxStatusFromFlash,f
  3558  0220  0DF1               	rlf	??_Init_TxStatusFromFlash+1,f
  3559  0221  0770               	addwf	??_Init_TxStatusFromFlash,w
  3560  0222  0084               	movwf	4
  3561  0223  3087               	movlw	135
  3562  0224  3D71               	addwfc	??_Init_TxStatusFromFlash+1,w
  3563  0225  0085               	movwf	5
  3564  0226  0800               	movf	0,w	;code access
  3565  0227  0008               	return
  3566  0228                     l1770:	
  3567  0228  3008               	movlw	8
  3568  0229  0AF4               	incf	Init_TxStatusFromFlash@cellNum,f
  3569  022A  0274               	subwf	Init_TxStatusFromFlash@cellNum,w
  3570  022B  1803               	btfsc	3,0
  3571  022C  3400               	retlw	0
  3572  022D  29A8               	goto	l1732
  3573  022E                     __end_of_Init_TxStatusFromFlash:	
  3574                           
  3575                           	psect	text6
  3576  0111                     __ptext6:	
  3577 ;; *************** function _Init_IO *****************
  3578 ;; Defined at:
  3579 ;;		line 120 in file "main.c"
  3580 ;; Parameters:    Size  Location     Type
  3581 ;;		None
  3582 ;; Auto vars:     Size  Location     Type
  3583 ;;		None
  3584 ;; Return value:  Size  Location     Type
  3585 ;;                  1    wreg      void 
  3586 ;; Registers used:
  3587 ;;		wreg, status,2
  3588 ;; Tracked objects:
  3589 ;;		On entry : B1F/0
  3590 ;;		On exit  : B1F/2
  3591 ;;		Unchanged: B00/0
  3592 ;; Data sizes:     COMMON   BANK0   BANK1
  3593 ;;      Params:         0       0       0
  3594 ;;      Locals:         0       0       0
  3595 ;;      Temps:          0       0       0
  3596 ;;      Totals:         0       0       0
  3597 ;;Total ram usage:        0 bytes
  3598 ;; Hardware stack levels used:    1
  3599 ;; This function calls:
  3600 ;;		Nothing
  3601 ;; This function is called by:
  3602 ;;		_main
  3603 ;; This function uses a non-reentrant model
  3604 ;;
  3605                           
  3606                           
  3607                           ;psect for function _Init_IO
  3608  0111                     _Init_IO:	
  3609                           
  3610                           ;main.c: 121: OPTION_REGbits.nWPUEN = 0;
  3611                           
  3612                           ;incstack = 0
  3613                           ; Regs used in _Init_IO: [wreg+status,2]
  3614  0111  0021               	movlb	1	; select bank1
  3615  0112  1395               	bcf	21,7	;volatile
  3616                           
  3617                           ;main.c: 122: TRISA = 0x1F;
  3618  0113  301F               	movlw	31
  3619  0114  008C               	movwf	12	;volatile
  3620                           
  3621                           ;main.c: 123: ANSELA = 0;
  3622  0115  0023               	movlb	3	; select bank3
  3623  0116  018C               	clrf	12	;volatile
  3624                           
  3625                           ;main.c: 124: WPUA = 0x08;
  3626  0117  3008               	movlw	8
  3627  0118  0024               	movlb	4	; select bank4
  3628  0119  008C               	movwf	12	;volatile
  3629                           
  3630                           ;main.c: 126: TRISC = 0x00;
  3631  011A  0021               	movlb	1	; select bank1
  3632  011B  018E               	clrf	14	;volatile
  3633                           
  3634                           ;main.c: 127: ANSELC = 0;
  3635  011C  0023               	movlb	3	; select bank3
  3636  011D  018E               	clrf	14	;volatile
  3637                           
  3638                           ;main.c: 128: LATC = 0x00;
  3639  011E  0022               	movlb	2	; select bank2
  3640  011F  018E               	clrf	14	;volatile
  3641  0120  0008               	return
  3642  0121                     __end_of_Init_IO:	
  3643                           
  3644                           	psect	text7
  3645  0104                     __ptext7:	
  3646 ;; *************** function _Init_CLK *****************
  3647 ;; Defined at:
  3648 ;;		line 89 in file "main.c"
  3649 ;; Parameters:    Size  Location     Type
  3650 ;;		None
  3651 ;; Auto vars:     Size  Location     Type
  3652 ;;		None
  3653 ;; Return value:  Size  Location     Type
  3654 ;;                  1    wreg      void 
  3655 ;; Registers used:
  3656 ;;		wreg, status,2, status,0
  3657 ;; Tracked objects:
  3658 ;;		On entry : B1F/2
  3659 ;;		On exit  : B1F/1
  3660 ;;		Unchanged: B00/0
  3661 ;; Data sizes:     COMMON   BANK0   BANK1
  3662 ;;      Params:         0       0       0
  3663 ;;      Locals:         0       0       0
  3664 ;;      Temps:          0       0       0
  3665 ;;      Totals:         0       0       0
  3666 ;;Total ram usage:        0 bytes
  3667 ;; Hardware stack levels used:    1
  3668 ;; This function calls:
  3669 ;;		Nothing
  3670 ;; This function is called by:
  3671 ;;		_main
  3672 ;; This function uses a non-reentrant model
  3673 ;;
  3674                           
  3675                           
  3676                           ;psect for function _Init_CLK
  3677  0104                     _Init_CLK:	
  3678                           
  3679                           ;main.c: 92: OSCCONbits.IRCF = 0b1110;
  3680                           
  3681                           ;incstack = 0
  3682                           ; Regs used in _Init_CLK: [wreg+status,2+status,0]
  3683  0104  0021               	movlb	1	; select bank1
  3684  0105  0819               	movf	25,w	;volatile
  3685  0106  3987               	andlw	-121
  3686  0107  3870               	iorlw	112
  3687  0108  0099               	movwf	25	;volatile
  3688                           
  3689                           ;main.c: 108: WDTCONbits.WDTPS = 0b01011;
  3690  0109  0817               	movf	23,w	;volatile
  3691  010A  39C1               	andlw	-63
  3692  010B  3816               	iorlw	22
  3693  010C  0097               	movwf	23	;volatile
  3694                           
  3695                           ;main.c: 115: WDTCONbits.SWDTEN = 1;
  3696  010D  1417               	bsf	23,0	;volatile
  3697  010E                     l67:	
  3698                           ;main.c: 116: while (!OSCSTATbits.HFIOFR) {
  3699                           
  3700  010E  1A1A               	btfsc	26,4	;volatile
  3701  010F  0008               	return
  3702  0110  290E               	goto	l67
  3703  0111                     __end_of_Init_CLK:	
  3704                           
  3705                           	psect	text8
  3706  00EB                     __ptext8:	
  3707 ;; *************** function _Init_ADC *****************
  3708 ;; Defined at:
  3709 ;;		line 131 in file "main.c"
  3710 ;; Parameters:    Size  Location     Type
  3711 ;;		None
  3712 ;; Auto vars:     Size  Location     Type
  3713 ;;		None
  3714 ;; Return value:  Size  Location     Type
  3715 ;;                  1    wreg      void 
  3716 ;; Registers used:
  3717 ;;		wreg, status,2, status,0
  3718 ;; Tracked objects:
  3719 ;;		On entry : B1F/1
  3720 ;;		On exit  : B1F/1
  3721 ;;		Unchanged: B00/0
  3722 ;; Data sizes:     COMMON   BANK0   BANK1
  3723 ;;      Params:         0       0       0
  3724 ;;      Locals:         0       0       0
  3725 ;;      Temps:          0       0       0
  3726 ;;      Totals:         0       0       0
  3727 ;;Total ram usage:        0 bytes
  3728 ;; Hardware stack levels used:    1
  3729 ;; This function calls:
  3730 ;;		Nothing
  3731 ;; This function is called by:
  3732 ;;		_main
  3733 ;; This function uses a non-reentrant model
  3734 ;;
  3735                           
  3736                           
  3737                           ;psect for function _Init_ADC
  3738  00EB                     _Init_ADC:	
  3739                           
  3740                           ;main.c: 132: FVRCON = 0;
  3741                           
  3742                           ;incstack = 0
  3743                           ; Regs used in _Init_ADC: [wreg+status,2+status,0]
  3744  00EB  0022               	movlb	2	; select bank2
  3745  00EC  0197               	clrf	23	;volatile
  3746                           
  3747                           ;main.c: 134: ADCON1bits.ADFM = 1;
  3748  00ED  0021               	movlb	1	; select bank1
  3749  00EE  179E               	bsf	30,7	;volatile
  3750                           
  3751                           ;main.c: 135: ADCON1bits.ADCS = 0b001;
  3752  00EF  081E               	movf	30,w	;volatile
  3753  00F0  398F               	andlw	-113
  3754  00F1  3810               	iorlw	16
  3755  00F2  009E               	movwf	30	;volatile
  3756                           
  3757                           ;main.c: 138: ADCON1bits.ADPREF = 0b00;
  3758  00F3  30FC               	movlw	-4
  3759  00F4  059E               	andwf	30,f	;volatile
  3760                           
  3761                           ;main.c: 140: ADCON0bits.ADON = 0;
  3762  00F5  101D               	bcf	29,0	;volatile
  3763  00F6  0008               	return
  3764  00F7                     __end_of_Init_ADC:	
  3765                           
  3766                           	psect	text9
  3767  0121                     __ptext9:	
  3768 ;; *************** function _FlashWrite *****************
  3769 ;; Defined at:
  3770 ;;		line 41 in file "FLASH.c"
  3771 ;; Parameters:    Size  Location     Type
  3772 ;;  addr            2    0[COMMON] unsigned int 
  3773 ;;  flash_data      2    2[COMMON] unsigned int 
  3774 ;; Auto vars:     Size  Location     Type
  3775 ;;		None
  3776 ;; Return value:  Size  Location     Type
  3777 ;;                  1    wreg      void 
  3778 ;; Registers used:
  3779 ;;		wreg, status,2, status,0, pclath, cstack
  3780 ;; Tracked objects:
  3781 ;;		On entry : 1C/0
  3782 ;;		On exit  : 1F/3
  3783 ;;		Unchanged: 0/0
  3784 ;; Data sizes:     COMMON   BANK0   BANK1
  3785 ;;      Params:         4       0       0
  3786 ;;      Locals:         0       0       0
  3787 ;;      Temps:          0       0       0
  3788 ;;      Totals:         4       0       0
  3789 ;;Total ram usage:        4 bytes
  3790 ;; Hardware stack levels used:    1
  3791 ;; Hardware stack levels required when called:    1
  3792 ;; This function calls:
  3793 ;;		_FlashUnlock
  3794 ;; This function is called by:
  3795 ;;		_main
  3796 ;; This function uses a non-reentrant model
  3797 ;;
  3798                           
  3799                           
  3800                           ;psect for function _FlashWrite
  3801  0121                     _FlashWrite:	
  3802                           
  3803                           ;FLASH.c: 42: PMCON1bits.CFGS = 0;
  3804                           
  3805                           ;incstack = 0
  3806                           ; Regs used in _FlashWrite: [wreg+status,2+status,0+pclath+cstack]
  3807  0121  0023               	movlb	3	; select bank3
  3808  0122  1315               	bcf	21,6	;volatile
  3809                           
  3810                           ;FLASH.c: 43: PMADRH = (unsigned char) (addr >> 8);
  3811  0123  0871               	movf	FlashWrite@addr+1,w
  3812  0124  0092               	movwf	18	;volatile
  3813                           
  3814                           ;FLASH.c: 44: PMADRL = (unsigned char) (addr);
  3815  0125  0870               	movf	FlashWrite@addr,w
  3816  0126  0091               	movwf	17	;volatile
  3817                           
  3818                           ;FLASH.c: 45: PMCON1bits.FREE = 0;
  3819  0127  1215               	bcf	21,4	;volatile
  3820                           
  3821                           ;FLASH.c: 46: PMCON1bits.LWLO = 1;
  3822  0128  1695               	bsf	21,5	;volatile
  3823                           
  3824                           ;FLASH.c: 47: PMCON1bits.WREN = 1;
  3825  0129  1515               	bsf	21,2	;volatile
  3826                           
  3827                           ;FLASH.c: 48: PMDATH = (unsigned char) (flash_data >> 8);
  3828  012A  0873               	movf	FlashWrite@flash_data+1,w
  3829  012B  0094               	movwf	20	;volatile
  3830                           
  3831                           ;FLASH.c: 49: PMDATL = (unsigned char) flash_data;
  3832  012C  0872               	movf	FlashWrite@flash_data,w
  3833  012D  0093               	movwf	19	;volatile
  3834                           
  3835                           ;FLASH.c: 50: PMCON1bits.LWLO = 0;
  3836  012E  1295               	bcf	21,5	;volatile
  3837                           
  3838                           ;FLASH.c: 51: INTCONbits.GIE = 0;
  3839  012F  138B               	bcf	11,7	;volatile
  3840                           
  3841                           ;FLASH.c: 52: FlashUnlock();
  3842  0130  20E5               	fcall	_FlashUnlock
  3843                           
  3844                           ;FLASH.c: 53: INTCONbits.GIE = 1;
  3845  0131  178B               	bsf	11,7	;volatile
  3846                           
  3847                           ;FLASH.c: 54: PMCON1bits.WREN = 0;
  3848  0132  1115               	bcf	21,2	;volatile
  3849  0133  0008               	return
  3850  0134                     __end_of_FlashWrite:	
  3851                           
  3852                           	psect	text10
  3853  00F7                     __ptext10:	
  3854 ;; *************** function _FlashEraseRow *****************
  3855 ;; Defined at:
  3856 ;;		line 29 in file "FLASH.c"
  3857 ;; Parameters:    Size  Location     Type
  3858 ;;  rowAddr         2    0[COMMON] unsigned int 
  3859 ;; Auto vars:     Size  Location     Type
  3860 ;;		None
  3861 ;; Return value:  Size  Location     Type
  3862 ;;                  1    wreg      void 
  3863 ;; Registers used:
  3864 ;;		wreg, status,2, status,0, pclath, cstack
  3865 ;; Tracked objects:
  3866 ;;		On entry : 1D/2
  3867 ;;		On exit  : 1F/3
  3868 ;;		Unchanged: 0/0
  3869 ;; Data sizes:     COMMON   BANK0   BANK1
  3870 ;;      Params:         2       0       0
  3871 ;;      Locals:         0       0       0
  3872 ;;      Temps:          0       0       0
  3873 ;;      Totals:         2       0       0
  3874 ;;Total ram usage:        2 bytes
  3875 ;; Hardware stack levels used:    1
  3876 ;; Hardware stack levels required when called:    1
  3877 ;; This function calls:
  3878 ;;		_FlashUnlock
  3879 ;; This function is called by:
  3880 ;;		_main
  3881 ;; This function uses a non-reentrant model
  3882 ;;
  3883                           
  3884                           
  3885                           ;psect for function _FlashEraseRow
  3886  00F7                     _FlashEraseRow:	
  3887                           
  3888                           ;FLASH.c: 30: PMCON1bits.CFGS = 0;
  3889                           
  3890                           ;incstack = 0
  3891                           ; Regs used in _FlashEraseRow: [wreg+status,2+status,0+pclath+cstack]
  3892  00F7  0023               	movlb	3	; select bank3
  3893  00F8  1315               	bcf	21,6	;volatile
  3894                           
  3895                           ;FLASH.c: 31: PMADRH = (unsigned char) (rowAddr >> 8);
  3896  00F9  0871               	movf	FlashEraseRow@rowAddr+1,w
  3897  00FA  0092               	movwf	18	;volatile
  3898                           
  3899                           ;FLASH.c: 32: PMADRL = (unsigned char) (rowAddr);
  3900  00FB  0870               	movf	FlashEraseRow@rowAddr,w
  3901  00FC  0091               	movwf	17	;volatile
  3902                           
  3903                           ;FLASH.c: 33: PMCON1bits.FREE = 1;
  3904  00FD  1615               	bsf	21,4	;volatile
  3905                           
  3906                           ;FLASH.c: 34: PMCON1bits.WREN = 1;
  3907  00FE  1515               	bsf	21,2	;volatile
  3908                           
  3909                           ;FLASH.c: 35: INTCONbits.GIE = 0;
  3910  00FF  138B               	bcf	11,7	;volatile
  3911                           
  3912                           ;FLASH.c: 36: FlashUnlock();
  3913  0100  20E5               	fcall	_FlashUnlock
  3914                           
  3915                           ;FLASH.c: 37: INTCONbits.GIE = 1;
  3916  0101  178B               	bsf	11,7	;volatile
  3917                           
  3918                           ;FLASH.c: 38: PMCON1bits.WREN = 0;
  3919  0102  1115               	bcf	21,2	;volatile
  3920  0103  0008               	return
  3921  0104                     __end_of_FlashEraseRow:	
  3922                           
  3923                           	psect	text11
  3924  00E5                     __ptext11:	
  3925 ;; *************** function _FlashUnlock *****************
  3926 ;; Defined at:
  3927 ;;		line 23 in file "FLASH.c"
  3928 ;; Parameters:    Size  Location     Type
  3929 ;;		None
  3930 ;; Auto vars:     Size  Location     Type
  3931 ;;		None
  3932 ;; Return value:  Size  Location     Type
  3933 ;;                  1    wreg      void 
  3934 ;; Registers used:
  3935 ;;		wreg
  3936 ;; Tracked objects:
  3937 ;;		On entry : 1F/3
  3938 ;;		On exit  : 1F/3
  3939 ;;		Unchanged: 0/0
  3940 ;; Data sizes:     COMMON   BANK0   BANK1
  3941 ;;      Params:         0       0       0
  3942 ;;      Locals:         0       0       0
  3943 ;;      Temps:          0       0       0
  3944 ;;      Totals:         0       0       0
  3945 ;;Total ram usage:        0 bytes
  3946 ;; Hardware stack levels used:    1
  3947 ;; This function calls:
  3948 ;;		Nothing
  3949 ;; This function is called by:
  3950 ;;		_FlashEraseRow
  3951 ;;		_FlashWrite
  3952 ;; This function uses a non-reentrant model
  3953 ;;
  3954                           
  3955                           
  3956                           ;psect for function _FlashUnlock
  3957  00E5                     _FlashUnlock:	
  3958                           
  3959                           ;FLASH.c: 24: PMCON2 = 0x55;
  3960                           
  3961                           ;incstack = 0
  3962                           ; Regs used in _FlashUnlock: [wreg]
  3963  00E5  3055               	movlw	85
  3964  00E6  0096               	movwf	22	;volsfr
  3965                           
  3966                           ;FLASH.c: 25: PMCON2 = 0xAA;
  3967  00E7  30AA               	movlw	170
  3968  00E8  0096               	movwf	22	;volsfr
  3969                           
  3970                           ;FLASH.c: 26: PMCON1bits.WR = 1;
  3971  00E9  1495               	bsf	21,1	;volatile
  3972  00EA  0008               	return
  3973  00EB                     __end_of_FlashUnlock:	
  3974  007E                     btemp	set	126	;btemp
  3975  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         36
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     31      67
    BANK1            32      0       0

Pointer List with Targets:

    noolite_send@data	PTR unsigned char  size(1) Largest target is 4
		 -> noo_send_data(BANK0[4]), 

    KeyOffHandler@key	PTR struct . size(1) Largest target is 20
		 -> Keys(BANK0[20]), 


Critical Paths under _main in COMMON

    _main->_KeyOffHandler
    _KeyOffHandler->_noolite_send

Critical Paths under _main in BANK0

    _main->_KeyOffHandler
    _KeyOffHandler->_noolite_send

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   15458
                                             19 BANK0     12    12      0
                      _FlashEraseRow
                         _FlashWrite
                           _Init_ADC
                           _Init_CLK
                            _Init_IO
             _Init_TxStatusFromFlash
                 _Init_TypeFromFlash
                      _KeyOffHandler
                            _RF_Init
                       _noolite_send
 ---------------------------------------------------------------------------------
 (1) _RF_Init                                              7     7      0       0
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (1) _KeyOffHandler                                        4     2      2    6456
                                             11 COMMON     3     1      2
                                             18 BANK0      1     1      0
                       _noolite_send
 ---------------------------------------------------------------------------------
 (1) _noolite_send                                        29    26      3    5424
                                              0 COMMON    11     8      3
                                              0 BANK0     18    18      0
 ---------------------------------------------------------------------------------
 (1) _Init_TypeFromFlash                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Init_TxStatusFromFlash                               5     5      0     244
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _Init_IO                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_CLK                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _FlashWrite                                           4     0      4     858
                                              0 COMMON     4     0      4
                        _FlashUnlock
 ---------------------------------------------------------------------------------
 (1) _FlashEraseRow                                        2     0      2     173
                                              0 COMMON     2     0      2
                        _FlashUnlock
 ---------------------------------------------------------------------------------
 (2) _FlashUnlock                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FlashEraseRow
     _FlashUnlock
   _FlashWrite
     _FlashUnlock
   _Init_ADC
   _Init_CLK
   _Init_IO
   _Init_TxStatusFromFlash
   _Init_TypeFromFlash
   _KeyOffHandler
     _noolite_send
   _RF_Init
   _noolite_send

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      51       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1F      43       6       83.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      51       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Sep 05 21:50:39 2018

                     __CFG_CP$ON 0000                               l67 010E                              l301 03F5  
                            l142 04AB                              l312 044F                              l304 0416  
                            l160 04E3                              l313 044D                              l161 04EC  
                            l153 04B5                              l314 044C                              l306 0406  
                            l170 055F                              l243 0798                              l164 0524  
                            l309 0432                              l159 04CA                              l280 02B7  
                            l285 02CD                              l287 02DB                              l279 0267  
                            l288 02D7                              u964 03B9                              u965 03B8  
                   __CFG_IDLOC0$ 0000                     __CFG_IDLOC1$ 0007                     __CFG_IDLOC2$ 0000  
                   __CFG_IDLOC3$ 0007                     __CFG_BORV$LO 0000                              wreg 0009  
                    main@chn_427 0060                      main@chn_428 0061                      main@chn_429 0062  
                    main@cellNum 005E         ??_Init_TxStatusFromFlash 0070                     __CFG_LVP$OFF 0000  
                           l2000 054E                             l2002 055D                             l2100 0687  
                           l2102 0695                             l2104 06A5                             l2008 0562  
                           l2130 0704                             l2114 06CF                             l2050 05F2  
                           l2116 06D7                             l2214 0762                             l2118 06DF  
                           l2054 05F4                             l2302 04D4                             l2232 0745  
                           l2128 0700                             l2072 0624                             l2064 060A  
                           l2056 05F5                             l2048 05E3                             l2208 073B  
                           l1602 03C7                             l2242 07A8                             l2138 0706  
                           l2074 062D                             l2066 0614                             l1612 03A4  
                           l1540 02D8                             l2236 0760                             l2076 0637  
                           l1614 03CE                             l1534 02CF                             l2094 0677  
                           l1552 02EA                             l2168 0726                             l2088 0662  
                           l2186 072B                             l1732 01A8                             l2188 0739  
                           l1900 0482                             l1662 040D                             l1574 036B  
                           l1558 0301                             l1814 0265                             l1770 0228  
                           l1754 01F1                             l1658 0408                             l1594 03C1  
                           l1922 04A2                             l1906 048C                             l1940 04B8  
                           l1916 0498                             l1678 042F                             l1790 016A  
                           l1942 04BF                             l1934 04AF                             l1870 0460  
                           l1784 0156                             l1936 04B0                             l1786 015C  
                           l1794 0170                             l1970 04EF                             l1946 04C5  
                           l1954 04CB                             l1788 0163                             l1796 017B  
                           l1980 051E                             l1956 04DF                             l1958 04E1  
                           l1986 0527                             l1978 0510                             l1898 04A9  
                           u1074 0444                             u1075 0443                             _LATA 010C  
                           _LATC 010E                             u1907 0194                             u1917 03E9  
                           u1867 0598                             u1877 05AE                             u1887 07A0  
                           u1897 0185                             _TMR0 0015                             _WPUA 020C  
                           _Keys 002C                     _startaddress 0020                     __CFG_WRT$OFF 0000  
                           _Type 07C0                             _main 0453                  __end_of_RF_Init 02B9  
                           fsr0h 0005                             fsr1h 0007                             indf0 0000  
                           fsr0l 0004                             indf1 0001                             fsr1l 0006  
                           btemp 007E     noolite_send@noo_send_command 0070                             start 0001  
            __end_of_FlashUnlock 00EB                    __CFG_MCLRE$ON 0000                  __end_of_Init_IO 0121  
                  __CFG_LPBOR$ON 0000                            ?_main 0070                      _BattLowSent 002A  
                     _FlashWrite 0121                            _PORTA 000C                            _TRISA 008C  
                          _TRISC 008E                    __CFG_PWRTE$ON 0000                  ??_KeyOffHandler 007D  
        __p_system_settings_text 07EE                     _Type_absaddr 07C0                            status 0003  
                          wtemp0 007E                  __initialization 07E0                     __end_of_Type 07D0  
                   __end_of_main 07C0                 __end_of_Init_ADC 00F7                 __end_of_Init_CLK 0111  
                         ??_main 0057                 _TxStatus_absaddr 07D0                 __end_of_TxStatus 07E0  
__size_of_Init_TxStatusFromFlash 0087                        ??_RF_Init 0070                           _ANSELA 018C  
                         _ANSELC 018E       __end_of_Init_TypeFromFlash 0148                           _FVRCON 0117  
                    _FlashUnlock 00E5                           _PMADRH 0192                           _PMADRL 0191  
                         _PMDATH 0194                           _PMDATL 0193                           _PMCON2 0196  
                         _TMR0IE 005D                           _TMR0IF 005A                     __p_Type_text 07C0  
                      ??_Init_IO 0070                   __CFG_STVREN$ON 0000                  _system_settings 07EE  
           noolite_send@countbit 0051            __end_of_FlashEraseRow 0104                      ?_FlashWrite 0070  
                noolite_send@chn 0052             noolite_send@startpos 0050          __end_of__initialization 07E6  
  Init_TxStatusFromFlash@cellNum 0074                   main@adrToWrite 005B                   __pcstackCOMMON 0070  
         _Init_TxStatusFromFlash 01A7                   _OPTION_REGbits 0095                       __pbssBANK0 0020  
                      ?_Init_ADC 0070                        ?_Init_CLK 0070          __end_of_system_settings 07FF  
            __size_of_FlashWrite 0013                       __pmaintext 0453                          _RF_Init 022E  
           FlashEraseRow@rowAddr 0070                       ??_Init_ADC 0070                       ??_Init_CLK 0070  
                        _DevMode 0026                          _DevType 0027                          _Init_IO 0111  
                  ?_noolite_send 0070                          __ptext1 022E                          __ptext2 0148  
                        __ptext3 02B9                          __ptext4 0134                          __ptext5 01A7  
                        __ptext6 0111                          __ptext7 0104                          __ptext8 00EB  
                        __ptext9 0121            noolite_send@countsend 0053                          main@chn 005F  
          __end_of_KeyOffHandler 01A7                          clrloop0 07E9             end_of_initialization 07E6  
                   ?_FlashUnlock 0070                 noolite_send@data 0072            noolite_send@temp_send 0054  
                 FlashWrite@addr 0070               _Init_TypeFromFlash 0134                   ??_noolite_send 0073  
            ?_Init_TypeFromFlash 0070                     ??_FlashWrite 0074                 __CFG_FOSC$INTOSC 0000  
           ??_Init_TypeFromFlash 0070          ?_Init_TxStatusFromFlash 0070               __end_of_FlashWrite 0134  
            start_initialization 07E0   __end_of_Init_TxStatusFromFlash 022E                __size_of_Init_ADC 000C  
              __size_of_Init_CLK 000D           __size_of_FlashEraseRow 000D                 __p_TxStatus_text 07D0  
                      ___latbits 0000                    __pcstackBANK0 0044                         ?_RF_Init 0070  
           __end_of_noolite_send 0453             __size_of_FlashUnlock 0006                         ?_Init_IO 0070  
                  _noo_send_data 0040                    _FlashEraseRow 00F7                 __CFG_WDTE$SWDTEN 0000  
                       _LATAbits 010C                         _LATCbits 010E                        clear_ram0 07E8  
               KeyOffHandler@cmd 007C                 KeyOffHandler@chn 007B                 KeyOffHandler@key 0056  
    noolite_send@noo_send_buffer 0044      noolite_send@noo_send_format 0071                       _ADCON0bits 009D  
                     _ADCON1bits 009E                   ?_FlashEraseRow 0070                        _tx_status 002B  
               __size_of_RF_Init 008B                         _Init_ADC 00EB                         _Init_CLK 0104  
                   _SkipHandling 0025                 _noo_address_type 0024                 __size_of_Init_IO 0010  
             noolite_send@endpos 0055                         _TxStatus 07D0           __size_of_KeyOffHandler 005F  
          __size_of_noolite_send 019A                         __ptext10 00F7                         __ptext11 00E5  
                    _tick3_100ms 0028                    __size_of_main 036D      __size_of_Init_TypeFromFlash 0014  
                ??_FlashEraseRow 0072                     _noolite_send 02B9                      _OSCSTATbits 009A  
                     _INTCONbits 000B                __CFG_BOREN$NSLEEP 0000                    _KeyOffHandler 0148  
                     _PMCON1bits 0195             FlashWrite@flash_data 0072                __CFG_CLKOUTEN$OFF 0000  
             _LedPulseTick_100ms 0029                       _OSCCONbits 0099                       _OPTION_REG 0095  
                     _WDTCONbits 0097                   ?_KeyOffHandler 007B                    ??_FlashUnlock 0070  
        _system_settings_absaddr 07EE  
