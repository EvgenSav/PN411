

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Fri Aug 31 17:41:56 2018

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	16LF1503
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	_Type_text,global,class=CODE,delta=2
     5                           	psect	_system_settings_text,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	swtext1,local,class=CONST,delta=2
    14                           	psect	swtext2,local,class=CONST,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 1.45
    27                           ; Generated 16/11/2017 GMT
    28                           ; 
    29                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16LF1503 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000E                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  008C                     	;# 
    87  008E                     	;# 
    88  0091                     	;# 
    89  0092                     	;# 
    90  0093                     	;# 
    91  0095                     	;# 
    92  0096                     	;# 
    93  0097                     	;# 
    94  0099                     	;# 
    95  009A                     	;# 
    96  009B                     	;# 
    97  009B                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010E                     	;# 
   104  0111                     	;# 
   105  0112                     	;# 
   106  0113                     	;# 
   107  0114                     	;# 
   108  0115                     	;# 
   109  0116                     	;# 
   110  0117                     	;# 
   111  0118                     	;# 
   112  0119                     	;# 
   113  011D                     	;# 
   114  018C                     	;# 
   115  018E                     	;# 
   116  0191                     	;# 
   117  0191                     	;# 
   118  0192                     	;# 
   119  0193                     	;# 
   120  0193                     	;# 
   121  0194                     	;# 
   122  0195                     	;# 
   123  0196                     	;# 
   124  020C                     	;# 
   125  0211                     	;# 
   126  0211                     	;# 
   127  0212                     	;# 
   128  0212                     	;# 
   129  0213                     	;# 
   130  0213                     	;# 
   131  0214                     	;# 
   132  0214                     	;# 
   133  0215                     	;# 
   134  0215                     	;# 
   135  0215                     	;# 
   136  0216                     	;# 
   137  0216                     	;# 
   138  0217                     	;# 
   139  0217                     	;# 
   140  0391                     	;# 
   141  0392                     	;# 
   142  0393                     	;# 
   143  0498                     	;# 
   144  0498                     	;# 
   145  0499                     	;# 
   146  049A                     	;# 
   147  049B                     	;# 
   148  049B                     	;# 
   149  049C                     	;# 
   150  049D                     	;# 
   151  049E                     	;# 
   152  049F                     	;# 
   153  0611                     	;# 
   154  0612                     	;# 
   155  0613                     	;# 
   156  0613                     	;# 
   157  0614                     	;# 
   158  0615                     	;# 
   159  0616                     	;# 
   160  0616                     	;# 
   161  0617                     	;# 
   162  0618                     	;# 
   163  0619                     	;# 
   164  0619                     	;# 
   165  061A                     	;# 
   166  061B                     	;# 
   167  061C                     	;# 
   168  061C                     	;# 
   169  0691                     	;# 
   170  0692                     	;# 
   171  0693                     	;# 
   172  0694                     	;# 
   173  0695                     	;# 
   174  0F0F                     	;# 
   175  0F10                     	;# 
   176  0F11                     	;# 
   177  0F12                     	;# 
   178  0F13                     	;# 
   179  0F14                     	;# 
   180  0F15                     	;# 
   181  0F16                     	;# 
   182  0F17                     	;# 
   183  0F18                     	;# 
   184  0F19                     	;# 
   185  0F1A                     	;# 
   186  0F1B                     	;# 
   187  0F1C                     	;# 
   188  0F1D                     	;# 
   189  0F1E                     	;# 
   190  0F1F                     	;# 
   191  0FE3                     	;# 
   192  0FE4                     	;# 
   193  0FE5                     	;# 
   194  0FE6                     	;# 
   195  0FE7                     	;# 
   196  0FE8                     	;# 
   197  0FE9                     	;# 
   198  0FEA                     	;# 
   199  0FEB                     	;# 
   200  0FED                     	;# 
   201  0FEE                     	;# 
   202  0FEF                     	;# 
   203  0000                     	;# 
   204  0001                     	;# 
   205  0002                     	;# 
   206  0003                     	;# 
   207  0004                     	;# 
   208  0005                     	;# 
   209  0006                     	;# 
   210  0007                     	;# 
   211  0008                     	;# 
   212  0009                     	;# 
   213  000A                     	;# 
   214  000B                     	;# 
   215  000C                     	;# 
   216  000E                     	;# 
   217  0011                     	;# 
   218  0012                     	;# 
   219  0013                     	;# 
   220  0015                     	;# 
   221  0016                     	;# 
   222  0016                     	;# 
   223  0017                     	;# 
   224  0018                     	;# 
   225  0019                     	;# 
   226  001A                     	;# 
   227  001B                     	;# 
   228  001C                     	;# 
   229  008C                     	;# 
   230  008E                     	;# 
   231  0091                     	;# 
   232  0092                     	;# 
   233  0093                     	;# 
   234  0095                     	;# 
   235  0096                     	;# 
   236  0097                     	;# 
   237  0099                     	;# 
   238  009A                     	;# 
   239  009B                     	;# 
   240  009B                     	;# 
   241  009C                     	;# 
   242  009D                     	;# 
   243  009E                     	;# 
   244  009F                     	;# 
   245  010C                     	;# 
   246  010E                     	;# 
   247  0111                     	;# 
   248  0112                     	;# 
   249  0113                     	;# 
   250  0114                     	;# 
   251  0115                     	;# 
   252  0116                     	;# 
   253  0117                     	;# 
   254  0118                     	;# 
   255  0119                     	;# 
   256  011D                     	;# 
   257  018C                     	;# 
   258  018E                     	;# 
   259  0191                     	;# 
   260  0191                     	;# 
   261  0192                     	;# 
   262  0193                     	;# 
   263  0193                     	;# 
   264  0194                     	;# 
   265  0195                     	;# 
   266  0196                     	;# 
   267  020C                     	;# 
   268  0211                     	;# 
   269  0211                     	;# 
   270  0212                     	;# 
   271  0212                     	;# 
   272  0213                     	;# 
   273  0213                     	;# 
   274  0214                     	;# 
   275  0214                     	;# 
   276  0215                     	;# 
   277  0215                     	;# 
   278  0215                     	;# 
   279  0216                     	;# 
   280  0216                     	;# 
   281  0217                     	;# 
   282  0217                     	;# 
   283  0391                     	;# 
   284  0392                     	;# 
   285  0393                     	;# 
   286  0498                     	;# 
   287  0498                     	;# 
   288  0499                     	;# 
   289  049A                     	;# 
   290  049B                     	;# 
   291  049B                     	;# 
   292  049C                     	;# 
   293  049D                     	;# 
   294  049E                     	;# 
   295  049F                     	;# 
   296  0611                     	;# 
   297  0612                     	;# 
   298  0613                     	;# 
   299  0613                     	;# 
   300  0614                     	;# 
   301  0615                     	;# 
   302  0616                     	;# 
   303  0616                     	;# 
   304  0617                     	;# 
   305  0618                     	;# 
   306  0619                     	;# 
   307  0619                     	;# 
   308  061A                     	;# 
   309  061B                     	;# 
   310  061C                     	;# 
   311  061C                     	;# 
   312  0691                     	;# 
   313  0692                     	;# 
   314  0693                     	;# 
   315  0694                     	;# 
   316  0695                     	;# 
   317  0F0F                     	;# 
   318  0F10                     	;# 
   319  0F11                     	;# 
   320  0F12                     	;# 
   321  0F13                     	;# 
   322  0F14                     	;# 
   323  0F15                     	;# 
   324  0F16                     	;# 
   325  0F17                     	;# 
   326  0F18                     	;# 
   327  0F19                     	;# 
   328  0F1A                     	;# 
   329  0F1B                     	;# 
   330  0F1C                     	;# 
   331  0F1D                     	;# 
   332  0F1E                     	;# 
   333  0F1F                     	;# 
   334  0FE3                     	;# 
   335  0FE4                     	;# 
   336  0FE5                     	;# 
   337  0FE6                     	;# 
   338  0FE7                     	;# 
   339  0FE8                     	;# 
   340  0FE9                     	;# 
   341  0FEA                     	;# 
   342  0FEB                     	;# 
   343  0FED                     	;# 
   344  0FEE                     	;# 
   345  0FEF                     	;# 
   346  0000                     	;# 
   347  0001                     	;# 
   348  0002                     	;# 
   349  0003                     	;# 
   350  0004                     	;# 
   351  0005                     	;# 
   352  0006                     	;# 
   353  0007                     	;# 
   354  0008                     	;# 
   355  0009                     	;# 
   356  000A                     	;# 
   357  000B                     	;# 
   358  000C                     	;# 
   359  000E                     	;# 
   360  0011                     	;# 
   361  0012                     	;# 
   362  0013                     	;# 
   363  0015                     	;# 
   364  0016                     	;# 
   365  0016                     	;# 
   366  0017                     	;# 
   367  0018                     	;# 
   368  0019                     	;# 
   369  001A                     	;# 
   370  001B                     	;# 
   371  001C                     	;# 
   372  008C                     	;# 
   373  008E                     	;# 
   374  0091                     	;# 
   375  0092                     	;# 
   376  0093                     	;# 
   377  0095                     	;# 
   378  0096                     	;# 
   379  0097                     	;# 
   380  0099                     	;# 
   381  009A                     	;# 
   382  009B                     	;# 
   383  009B                     	;# 
   384  009C                     	;# 
   385  009D                     	;# 
   386  009E                     	;# 
   387  009F                     	;# 
   388  010C                     	;# 
   389  010E                     	;# 
   390  0111                     	;# 
   391  0112                     	;# 
   392  0113                     	;# 
   393  0114                     	;# 
   394  0115                     	;# 
   395  0116                     	;# 
   396  0117                     	;# 
   397  0118                     	;# 
   398  0119                     	;# 
   399  011D                     	;# 
   400  018C                     	;# 
   401  018E                     	;# 
   402  0191                     	;# 
   403  0191                     	;# 
   404  0192                     	;# 
   405  0193                     	;# 
   406  0193                     	;# 
   407  0194                     	;# 
   408  0195                     	;# 
   409  0196                     	;# 
   410  020C                     	;# 
   411  0211                     	;# 
   412  0211                     	;# 
   413  0212                     	;# 
   414  0212                     	;# 
   415  0213                     	;# 
   416  0213                     	;# 
   417  0214                     	;# 
   418  0214                     	;# 
   419  0215                     	;# 
   420  0215                     	;# 
   421  0215                     	;# 
   422  0216                     	;# 
   423  0216                     	;# 
   424  0217                     	;# 
   425  0217                     	;# 
   426  0391                     	;# 
   427  0392                     	;# 
   428  0393                     	;# 
   429  0498                     	;# 
   430  0498                     	;# 
   431  0499                     	;# 
   432  049A                     	;# 
   433  049B                     	;# 
   434  049B                     	;# 
   435  049C                     	;# 
   436  049D                     	;# 
   437  049E                     	;# 
   438  049F                     	;# 
   439  0611                     	;# 
   440  0612                     	;# 
   441  0613                     	;# 
   442  0613                     	;# 
   443  0614                     	;# 
   444  0615                     	;# 
   445  0616                     	;# 
   446  0616                     	;# 
   447  0617                     	;# 
   448  0618                     	;# 
   449  0619                     	;# 
   450  0619                     	;# 
   451  061A                     	;# 
   452  061B                     	;# 
   453  061C                     	;# 
   454  061C                     	;# 
   455  0691                     	;# 
   456  0692                     	;# 
   457  0693                     	;# 
   458  0694                     	;# 
   459  0695                     	;# 
   460  0F0F                     	;# 
   461  0F10                     	;# 
   462  0F11                     	;# 
   463  0F12                     	;# 
   464  0F13                     	;# 
   465  0F14                     	;# 
   466  0F15                     	;# 
   467  0F16                     	;# 
   468  0F17                     	;# 
   469  0F18                     	;# 
   470  0F19                     	;# 
   471  0F1A                     	;# 
   472  0F1B                     	;# 
   473  0F1C                     	;# 
   474  0F1D                     	;# 
   475  0F1E                     	;# 
   476  0F1F                     	;# 
   477  0FE3                     	;# 
   478  0FE4                     	;# 
   479  0FE5                     	;# 
   480  0FE6                     	;# 
   481  0FE7                     	;# 
   482  0FE8                     	;# 
   483  0FE9                     	;# 
   484  0FEA                     	;# 
   485  0FEB                     	;# 
   486  0FED                     	;# 
   487  0FEE                     	;# 
   488  0FEF                     	;# 
   489  07C0                     _Type_absaddr	set	1984
   490  07EE                     _system_settings_absaddr	set	2030
   491  07C0                     _Type_absaddr	set	1984
   492                           
   493                           	psect	_Type_text
   494  07C0                     __p_Type_text:	
   495  07C0                     _Type:	
   496  07C0  34FF               	retlw	255
   497  07C1  34FF               	retlw	255
   498  07C2  34FF               	retlw	255
   499  07C3  34FF               	retlw	255
   500  07C4  34FF               	retlw	255
   501  07C5  34FF               	retlw	255
   502  07C6  34FF               	retlw	255
   503  07C7  34FF               	retlw	255
   504  07C8  34FF               	retlw	255
   505  07C9  34FF               	retlw	255
   506  07CA  34FF               	retlw	255
   507  07CB  34FF               	retlw	255
   508  07CC  34FF               	retlw	255
   509  07CD  34FF               	retlw	255
   510  07CE  34FF               	retlw	255
   511  07CF  34FF               	retlw	255
   512  07D0  34FF               	retlw	255
   513  07D1  34FF               	retlw	255
   514  07D2  34FF               	retlw	255
   515  07D3  34FF               	retlw	255
   516  07D4  34FF               	retlw	255
   517  07D5  34FF               	retlw	255
   518  07D6  34FF               	retlw	255
   519  07D7  34FF               	retlw	255
   520  07D8  34FF               	retlw	255
   521  07D9  34FF               	retlw	255
   522  07DA  34FF               	retlw	255
   523  07DB  34FF               	retlw	255
   524  07DC  34FF               	retlw	255
   525  07DD  34FF               	retlw	255
   526  07DE  34FF               	retlw	255
   527  07DF  34FF               	retlw	255
   528  07E0                     __end_of_Type:	
   529  07EE                     _system_settings_absaddr	set	2030
   530                           
   531                           	psect	_system_settings_text
   532  07EE                     __p_system_settings_text:	
   533  07EE                     _system_settings:	
   534  07EE  3443               	retlw	67
   535  07EF  3404               	retlw	4
   536  07F0  345F               	retlw	95
   537  07F1  3441               	retlw	65
   538  07F2  341F               	retlw	31
   539  07F3  34FB               	retlw	251
   540  07F4  345F               	retlw	95
   541  07F5  3441               	retlw	65
   542  07F6  3478               	retlw	120
   543  07F7  3456               	retlw	86
   544  07F8  3434               	retlw	52
   545  07F9  3412               	retlw	18
   546  07FA  345F               	retlw	95
   547  07FB  3442               	retlw	66
   548  07FC  3410               	retlw	16
   549  07FD  3400               	retlw	0
   550  07FE  345F               	retlw	95
   551  07FF                     __end_of_system_settings:	
   552  0015                     _TMR0	set	21
   553  001A                     _TMR2	set	26
   554  000C                     _PORTA	set	12
   555  000B                     _INTCONbits	set	11
   556  005D                     _TMR0IE	set	93
   557  005A                     _TMR0IF	set	90
   558  0095                     _OPTION_REG	set	149
   559  009D                     _ADCON0bits	set	157
   560  009E                     _ADCON1bits	set	158
   561  008E                     _TRISC	set	142
   562  008C                     _TRISA	set	140
   563  0095                     _OPTION_REGbits	set	149
   564  009A                     _OSCSTATbits	set	154
   565  0097                     _WDTCONbits	set	151
   566  0099                     _OSCCONbits	set	153
   567  010C                     _LATA	set	268
   568  010C                     _LATAbits	set	268
   569  010E                     _LATCbits	set	270
   570  0117                     _FVRCON	set	279
   571  010E                     _LATC	set	270
   572  0196                     _PMCON2	set	406
   573  0193                     _PMDATL	set	403
   574  0194                     _PMDATH	set	404
   575  0191                     _PMADRL	set	401
   576  0192                     _PMADRH	set	402
   577  0195                     _PMCON1bits	set	405
   578  018E                     _ANSELC	set	398
   579  018C                     _ANSELA	set	396
   580  020C                     _WPUA	set	524
   581                           
   582                           ; #config settings
   583  0007                     
   584                           	psect	cinit
   585  07E0                     start_initialization:	
   586  07E0                     __initialization:	
   587                           
   588                           ; Clear objects allocated to COMMON
   589  07E0  01FD               	clrf	__pbssCOMMON& (0+127)
   590                           
   591                           ; Clear objects allocated to BANK0
   592  07E1  3020               	movlw	low __pbssBANK0
   593  07E2  0084               	movwf	4
   594  07E3  3000               	movlw	high __pbssBANK0
   595  07E4  0085               	movwf	5
   596  07E5  3023               	movlw	35
   597  07E6  216C               	fcall	clear_ram0
   598  07E7                     end_of_initialization:	
   599                           ;End of C runtime variable initialization code
   600                           
   601  07E7                     __end_of__initialization:	
   602  07E7  0020               	movlb	0
   603  07E8  2BFE               	ljmp	_main	;jump to C main() function
   604                           
   605                           	psect	bssCOMMON
   606  007D                     __pbssCOMMON:	
   607  007D                     _tx_status:	
   608  007D                     	ds	1
   609                           
   610                           	psect	bssBANK0
   611  0020                     __pbssBANK0:	
   612  0020                     _Keys:	
   613  0020                     	ds	20
   614  0034                     _startaddress:	
   615  0034                     	ds	4
   616  0038                     _noo_address_type:	
   617  0038                     	ds	1
   618  0039                     _SkipHandling:	
   619  0039                     	ds	1
   620  003A                     _DevMode:	
   621  003A                     	ds	1
   622  003B                     _DevType:	
   623  003B                     	ds	1
   624  003C                     _tick3_100ms:	
   625  003C                     	ds	1
   626  003D                     _LedPulseTick_100ms:	
   627  003D                     	ds	1
   628  003E                     _BattLowSent:	
   629  003E                     	ds	1
   630  003F                     _noo_send_data:	
   631  003F                     	ds	4
   632                           
   633                           	psect	clrtext
   634  016C                     clear_ram0:	
   635                           ;	Called with FSR0 containing the base address, and
   636                           ;	WREG with the size to clear
   637                           
   638  016C  0064               	clrwdt	;clear the watchdog before getting into this loop
   639  016D                     clrloop0:	
   640  016D  0180               	clrf	0	;clear RAM location pointed to by FSR
   641  016E  3101               	addfsr 0,1
   642  016F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   643  0170  296D               	goto	clrloop0	;have we reached the end yet?
   644  0171  3400               	retlw	0	;all done for this memory range, return
   645                           
   646                           	psect	cstackCOMMON
   647  0070                     __pcstackCOMMON:	
   648  0070                     ?_RF_Init:	
   649  0070                     ??_RF_Init:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ?_noolite_send:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ?_FlashEraseRow:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ?_FlashWrite:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ?_Init_CLK:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ??_Init_CLK:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ?_Init_IO:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ??_Init_IO:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ?_Init_ADC:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ??_Init_ADC:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ?_Init_TypeFromFlash:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ??_Init_TypeFromFlash:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ?_main:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ?_FlashUnlock:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ??_FlashUnlock:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     noolite_send@noo_send_command:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     FlashEraseRow@rowAddr:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     FlashWrite@addr:	
   701                           ; 2 bytes @ 0x0
   702                           
   703                           
   704                           ; 2 bytes @ 0x0
   705  0070                     	ds	1
   706  0071                     noolite_send@noo_send_format:	
   707                           
   708                           ; 1 bytes @ 0x1
   709  0071                     	ds	1
   710  0072                     ??_FlashEraseRow:	
   711  0072                     noolite_send@data:	
   712                           ; 1 bytes @ 0x2
   713                           
   714  0072                     FlashWrite@flash_data:	
   715                           ; 1 bytes @ 0x2
   716                           
   717                           
   718                           ; 2 bytes @ 0x2
   719  0072                     	ds	1
   720  0073                     ??_noolite_send:	
   721                           
   722                           ; 1 bytes @ 0x3
   723  0073                     	ds	1
   724  0074                     ??_FlashWrite:	
   725                           
   726                           ; 1 bytes @ 0x4
   727  0074                     	ds	7
   728  007B                     ??_main:	
   729                           
   730                           ; 1 bytes @ 0xB
   731  007B                     	ds	2
   732                           
   733                           	psect	cstackBANK0
   734  0043                     __pcstackBANK0:	
   735  0043                     noolite_send@noo_send_buffer:	
   736                           
   737                           ; 12 bytes @ 0x0
   738  0043                     	ds	12
   739  004F                     noolite_send@startpos:	
   740                           
   741                           ; 1 bytes @ 0xC
   742  004F                     	ds	1
   743  0050                     noolite_send@countbit:	
   744                           
   745                           ; 1 bytes @ 0xD
   746  0050                     	ds	1
   747  0051                     noolite_send@chn:	
   748                           
   749                           ; 1 bytes @ 0xE
   750  0051                     	ds	1
   751  0052                     noolite_send@countsend:	
   752                           
   753                           ; 1 bytes @ 0xF
   754  0052                     	ds	1
   755  0053                     noolite_send@temp_send:	
   756                           
   757                           ; 1 bytes @ 0x10
   758  0053                     	ds	1
   759  0054                     noolite_send@endpos:	
   760                           
   761                           ; 1 bytes @ 0x11
   762  0054                     	ds	2
   763  0056                     main@chn:	
   764                           
   765                           ; 1 bytes @ 0x13
   766  0056                     	ds	1
   767  0057                     main@chn_416:	
   768                           
   769                           ; 1 bytes @ 0x14
   770  0057                     	ds	1
   771  0058                     main@chn_417:	
   772                           
   773                           ; 1 bytes @ 0x15
   774  0058                     	ds	1
   775  0059                     main@chn_418:	
   776                           
   777                           ; 1 bytes @ 0x16
   778  0059                     	ds	1
   779                           
   780                           	psect	maintext
   781  03FE                     __pmaintext:	
   782 ;;
   783 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   784 ;;
   785 ;; *************** function _main *****************
   786 ;; Defined at:
   787 ;;		line 242 in file "main.c"
   788 ;; Parameters:    Size  Location     Type
   789 ;;		None
   790 ;; Auto vars:     Size  Location     Type
   791 ;;  chn             1   22[BANK0 ] unsigned char 
   792 ;;  chn             1   21[BANK0 ] unsigned char 
   793 ;;  chn             1   20[BANK0 ] unsigned char 
   794 ;;  chn             1   19[BANK0 ] unsigned char 
   795 ;;  chn             1    0        unsigned char 
   796 ;; Return value:  Size  Location     Type
   797 ;;                  1    wreg      void 
   798 ;; Registers used:
   799 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   800 ;; Tracked objects:
   801 ;;		On entry : B1F/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMMON   BANK0   BANK1
   805 ;;      Params:         0       0       0
   806 ;;      Locals:         0       5       0
   807 ;;      Temps:          2       0       0
   808 ;;      Totals:         2       5       0
   809 ;;Total ram usage:        7 bytes
   810 ;; Hardware stack levels required when called:    2
   811 ;; This function calls:
   812 ;;		_FlashEraseRow
   813 ;;		_FlashWrite
   814 ;;		_Init_ADC
   815 ;;		_Init_CLK
   816 ;;		_Init_IO
   817 ;;		_Init_TypeFromFlash
   818 ;;		_RF_Init
   819 ;;		_noolite_send
   820 ;; This function is called by:
   821 ;;		Startup code after reset
   822 ;; This function uses a non-reentrant model
   823 ;;
   824                           
   825                           
   826                           ;psect for function _main
   827  03FE                     _main:	
   828                           
   829                           ;main.c: 243: Init_IO();
   830                           
   831                           ;incstack = 0
   832                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   833  03FE  2198               	fcall	_Init_IO
   834                           
   835                           ;main.c: 244: Init_CLK();
   836  03FF  218B               	fcall	_Init_CLK
   837                           
   838                           ;main.c: 246: Init_ADC();
   839  0400  2172               	fcall	_Init_ADC
   840                           
   841                           ;main.c: 247: RF_Init();
   842  0401  21CF               	fcall	_RF_Init
   843                           
   844                           ;main.c: 249: LATCbits.LATC5 = 1;
   845  0402  0022               	movlb	2	; select bank2
   846  0403  168E               	bsf	14,5	;volatile
   847                           
   848                           ;main.c: 250: DevType = Init_TypeFromFlash();
   849  0404  21BB               	fcall	_Init_TypeFromFlash
   850  0405  0020               	movlb	0	; select bank0
   851  0406  00BB               	movwf	_DevType
   852                           
   853                           ;main.c: 252: INTCONbits.PEIE = 1;
   854  0407  170B               	bsf	11,6	;volatile
   855                           
   856                           ;main.c: 253: INTCONbits.GIE = 1;
   857  0408  178B               	bsf	11,7	;volatile
   858  0409                     l1798:	
   859                           
   860                           ;main.c: 256: Keys[0].State = (uint8_t) (PORTA & A_Pressed);
   861  0409  0020               	movlb	0	; select bank0
   862  040A  080C               	movf	12,w	;volatile
   863  040B  00A0               	movwf	_Keys
   864  040C  3002               	movlw	2
   865  040D  05A0               	andwf	_Keys,f
   866                           
   867                           ;main.c: 257: Keys[1].State = (uint8_t) (PORTA & B_Pressed);
   868  040E  080C               	movf	12,w	;volatile
   869  040F  00A4               	movwf	_Keys+4
   870  0410  3001               	movlw	1
   871  0411  05A4               	andwf	_Keys+4,f
   872                           
   873                           ;main.c: 258: Keys[2].State = (uint8_t) (PORTA & C_Pressed);
   874  0412  080C               	movf	12,w	;volatile
   875  0413  00A8               	movwf	_Keys+8
   876  0414  3004               	movlw	4
   877  0415  05A8               	andwf	_Keys+8,f
   878                           
   879                           ;main.c: 259: Keys[3].State = (uint8_t) (PORTA & D_Pressed);
   880  0416  080C               	movf	12,w	;volatile
   881  0417  00AC               	movwf	_Keys+12
   882  0418  3010               	movlw	16
   883  0419  05AC               	andwf	_Keys+12,f
   884                           
   885                           ;main.c: 260: Keys[4].State = (uint8_t) (PORTA & (C_Pressed | D_Pressed));
   886  041A  080C               	movf	12,w	;volatile
   887  041B  00B0               	movwf	_Keys+16
   888  041C  3014               	movlw	20
   889  041D  05B0               	andwf	_Keys+16,f
   890                           
   891                           ;main.c: 261: if (Keys[4].State == (C_Pressed | D_Pressed)) {
   892  041E  0630               	xorwf	_Keys+16,w
   893  041F  1D03               	btfss	3,2
   894  0420  2C58               	goto	l1862
   895                           
   896                           ;main.c: 262: SkipHandling = 10;
   897  0421  300A               	movlw	10
   898  0422  00B9               	movwf	_SkipHandling
   899                           
   900                           ;main.c: 263: if (Keys[4].Tick100ms < 15) {
   901  0423  300F               	movlw	15
   902  0424  0232               	subwf	_Keys+18,w
   903  0425  1803               	skipnc
   904  0426  2C2B               	goto	l1828
   905                           
   906                           ;main.c: 264: DevMode &= ~(UNBIND_ACTIVE | MODE_CHANGE_ACTIVE);
   907  0427  30F9               	movlw	249
   908  0428  05BA               	andwf	_DevMode,f
   909                           
   910                           ;main.c: 265: DevMode |= BIND_ACTIVE;
   911  0429  143A               	bsf	_DevMode,0
   912                           
   913                           ;main.c: 267: } else if ((Keys[4].Tick100ms >= 35) && (Keys[4].Tick100ms < 49)) {
   914  042A  2C52               	goto	l1826
   915  042B                     l1828:	
   916  042B  3023               	movlw	35
   917  042C  0232               	subwf	_Keys+18,w
   918  042D  1C03               	skipc
   919  042E  2C35               	goto	l1834
   920  042F  3031               	movlw	49
   921  0430  0232               	subwf	_Keys+18,w
   922  0431  1803               	skipnc
   923  0432  2C35               	goto	l1834
   924                           
   925                           ;main.c: 268: DevMode &= ~BIND_ACTIVE;
   926  0433  103A               	bcf	_DevMode,0
   927                           
   928                           ;main.c: 269: } else if ((Keys[4].Tick100ms >= 50) && (Keys[4].Tick100ms < 85)) {
   929  0434  2C54               	goto	l115
   930  0435                     l1834:	
   931  0435  3032               	movlw	50
   932  0436  0232               	subwf	_Keys+18,w
   933  0437  3055               	movlw	85
   934  0438  1C03               	skipc
   935  0439  2C42               	goto	L4
   936  043A  0232               	subwf	_Keys+18,w
   937  043B  1803               	skipnc
   938  043C  2C41               	goto	l1844
   939                           
   940                           ;main.c: 270: DevMode &= ~(BIND_ACTIVE | MODE_CHANGE_ACTIVE);
   941  043D  30FA               	movlw	250
   942  043E  05BA               	andwf	_DevMode,f
   943                           
   944                           ;main.c: 271: DevMode |= UNBIND_ACTIVE;
   945  043F  14BA               	bsf	_DevMode,1
   946  0440  2C52               	goto	l1826
   947  0441                     l1844:	
   948  0441  3055               	movlw	85
   949  0442                     L4:	
   950  0442  0232               	subwf	_Keys+18,w
   951  0443  1C03               	skipc
   952  0444  2C4B               	goto	l1850
   953  0445  3063               	movlw	99
   954  0446  0232               	subwf	_Keys+18,w
   955  0447  1803               	skipnc
   956  0448  2C4B               	goto	l1850
   957                           
   958                           ;main.c: 274: DevMode &= ~UNBIND_ACTIVE;
   959  0449  10BA               	bcf	_DevMode,1
   960                           
   961                           ;main.c: 275: } else if (Keys[4].Tick100ms >= 100) {
   962  044A  2C54               	goto	l115
   963  044B                     l1850:	
   964  044B  3064               	movlw	100
   965  044C  0232               	subwf	_Keys+18,w
   966  044D  1C03               	skipc
   967  044E  2C54               	goto	l115
   968                           
   969                           ;main.c: 276: DevMode &= ~(BIND_ACTIVE | UNBIND_ACTIVE);
   970  044F  30FC               	movlw	252
   971  0450  05BA               	andwf	_DevMode,f
   972                           
   973                           ;main.c: 277: DevMode |= MODE_CHANGE_ACTIVE;
   974  0451  153A               	bsf	_DevMode,2
   975  0452                     l1826:	
   976                           
   977                           ;main.c: 266: tick3_100ms = 100;
   978  0452  3064               	movlw	100
   979  0453  00BC               	movwf	_tick3_100ms
   980  0454                     l115:	
   981                           
   982                           ;main.c: 279: }
   983                           ;main.c: 280: Keys[4].Tick100ms++;
   984  0454  0AB2               	incf	_Keys+18,f
   985                           
   986                           ;main.c: 282: Keys[2].StateTemp = 0;
   987  0455  01A9               	clrf	_Keys+9
   988                           
   989                           ;main.c: 283: Keys[3].StateTemp = 0;
   990  0456  01AD               	clrf	_Keys+13
   991                           
   992                           ;main.c: 284: } else {
   993  0457  2C59               	goto	l1864
   994  0458                     l1862:	
   995                           
   996                           ;main.c: 285: Keys[4].Tick100ms = 0;
   997  0458  01B2               	clrf	_Keys+18
   998  0459                     l1864:	
   999                           
  1000                           ;main.c: 286: }
  1001                           ;main.c: 288: if (tick3_100ms != 0) {
  1002  0459  083C               	movf	_tick3_100ms,w
  1003  045A  1903               	btfsc	3,2
  1004  045B  2C88               	goto	l1884
  1005                           
  1006                           ;main.c: 289: tick3_100ms--;
  1007  045C  03BC               	decf	_tick3_100ms,f
  1008                           
  1009                           ;main.c: 290: switch (DevMode & 0x07) {
  1010  045D  2C74               	goto	l1882
  1011  045E                     l126:	
  1012                           ;main.c: 291: case BIND_ACTIVE:
  1013                           
  1014                           
  1015                           ;main.c: 292: LATCbits.LATC3 = ON;
  1016  045E  0022               	movlb	2	; select bank2
  1017  045F  158E               	bsf	14,3	;volatile
  1018                           
  1019                           ;main.c: 293: break;
  1020  0460  2C8C               	goto	l133
  1021  0461                     l1868:	
  1022                           
  1023                           ;main.c: 295: if (LedPulseTick_100ms++ > 2) {
  1024  0461  083D               	movf	_LedPulseTick_100ms,w
  1025  0462  0ABD               	incf	_LedPulseTick_100ms,f
  1026  0463  00FB               	movwf	??_main
  1027  0464  3003               	movlw	3
  1028  0465  027B               	subwf	??_main,w
  1029  0466  1C03               	skipc
  1030  0467  2C8C               	goto	l133
  1031  0468                     l1870:	
  1032                           
  1033                           ;main.c: 296: LATCbits.LATC3 = ~LATCbits.LATC3;
  1034  0468  3008               	movlw	8
  1035  0469  0022               	movlb	2	; select bank2
  1036  046A  068E               	xorwf	14,f	;volatile
  1037                           
  1038                           ;main.c: 297: LedPulseTick_100ms = 0;
  1039  046B  0020               	movlb	0	; select bank0
  1040  046C  01BD               	clrf	_LedPulseTick_100ms
  1041  046D  2C8C               	goto	l133
  1042  046E                     l1874:	
  1043                           
  1044                           ;main.c: 301: if (LedPulseTick_100ms++ > 0) {
  1045  046E  0ABD               	incf	_LedPulseTick_100ms,f
  1046  046F  033D               	decf	_LedPulseTick_100ms,w
  1047  0470  1903               	btfsc	3,2
  1048  0471  2C8C               	goto	l133
  1049  0472  2C68               	goto	l1870
  1050  0473                     l132:	
  1051                           ;main.c: 306: default:
  1052                           
  1053                           ;main.c: 302: LATCbits.LATC3 = ~LATCbits.LATC3;
  1054                           
  1055  0473  2C8A               	goto	l1886
  1056  0474                     l1882:	
  1057                           ;main.c: 308: break;
  1058                           
  1059                           ;main.c: 307: LATCbits.LATC3 = OFF;
  1060                           
  1061  0474  083A               	movf	_DevMode,w
  1062  0475  3907               	andlw	7
  1063  0476  00FB               	movwf	??_main
  1064  0477  01FC               	clrf	??_main+1
  1065                           
  1066                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1067                           ; Switch size 1, requested type "speed"
  1068                           ; Number of cases is 1, Range of values is 0 to 0
  1069                           ; switch strategies available:
  1070                           ; Name         Instructions Cycles
  1071                           ; simple_byte            4     3 (average)
  1072                           ; direct_byte            8     6 (fixed)
  1073                           ; jumptable            260     6 (fixed)
  1074                           ;	Chosen strategy is simple_byte
  1075  0478  087C               	movf	??_main+1,w
  1076  0479  3A00               	xorlw	0	; case 0
  1077  047A  1903               	skipnz
  1078  047B  2C7D               	goto	l2352
  1079  047C  2C73               	goto	l132
  1080  047D                     l2352:	
  1081                           
  1082                           ; Switch size 1, requested type "speed"
  1083                           ; Number of cases is 3, Range of values is 1 to 4
  1084                           ; switch strategies available:
  1085                           ; Name         Instructions Cycles
  1086                           ; simple_byte           10     6 (average)
  1087                           ; direct_byte           17     9 (fixed)
  1088                           ; jumptable            263     9 (fixed)
  1089                           ;	Chosen strategy is simple_byte
  1090  047D  087B               	movf	??_main,w
  1091  047E  3A01               	xorlw	1	; case 1
  1092  047F  1903               	skipnz
  1093  0480  2C5E               	goto	l126
  1094  0481  3A03               	xorlw	3	; case 2
  1095  0482  1903               	skipnz
  1096  0483  2C61               	goto	l1868
  1097  0484  3A06               	xorlw	6	; case 4
  1098  0485  1903               	skipnz
  1099  0486  2C6E               	goto	l1874
  1100  0487  2C73               	goto	l132
  1101  0488                     l1884:	
  1102                           
  1103                           ;main.c: 311: DevMode &= ~(BIND_ACTIVE | UNBIND_ACTIVE | MODE_CHANGE_ACTIVE);
  1104  0488  30F8               	movlw	248
  1105  0489  05BA               	andwf	_DevMode,f
  1106  048A                     l1886:	
  1107                           
  1108                           ;main.c: 312: LATCbits.LATC3 = OFF;
  1109  048A  0022               	movlb	2	; select bank2
  1110  048B  118E               	bcf	14,3	;volatile
  1111  048C                     l133:	
  1112                           
  1113                           ;main.c: 313: }
  1114                           ;main.c: 315: if (SkipHandling != 0) {
  1115  048C  0020               	movlb	0	; select bank0
  1116  048D  0839               	movf	_SkipHandling,w
  1117  048E  1903               	btfsc	3,2
  1118  048F  2C95               	goto	l134
  1119                           
  1120                           ;main.c: 316: if (Keys[4].State == 0) {
  1121  0490  0830               	movf	_Keys+16,w
  1122  0491  1D03               	btfss	3,2
  1123  0492  2F9D               	goto	l2190
  1124                           
  1125                           ;main.c: 317: SkipHandling--;
  1126  0493  03B9               	decf	_SkipHandling,f
  1127  0494  2F9D               	goto	l2190
  1128  0495                     l134:	
  1129                           
  1130                           ;main.c: 320: if ((DevMode & BIND_ACTIVE) != 0) {
  1131  0495  1C3A               	btfss	_DevMode,0
  1132  0496  2CCD               	goto	l137
  1133                           
  1134                           ;main.c: 321: for (uint8_t chn = 0; chn < 4; chn++) {
  1135  0497  01D6               	clrf	main@chn
  1136  0498                     l1898:	
  1137                           
  1138                           ;main.c: 322: if (Keys[chn].State != Keys[chn].StateTemp) {
  1139  0498  0856               	movf	main@chn,w
  1140  0499  0709               	addwf	9,w
  1141  049A  0709               	addwf	9,w
  1142  049B  3E21               	addlw	(low ((_Keys| 0+1)))& (0+255)
  1143  049C  0086               	movwf	6
  1144  049D  0187               	clrf	7
  1145  049E  0856               	movf	main@chn,w
  1146  049F  0709               	addwf	9,w
  1147  04A0  0709               	addwf	9,w
  1148  04A1  3E20               	addlw	(low (_Keys| 0))& (0+255)
  1149  04A2  0084               	movwf	4
  1150  04A3  0185               	clrf	5
  1151  04A4  0800               	movf	0,w
  1152  04A5  0601               	xorwf	1,w
  1153  04A6  1903               	skipnz
  1154  04A7  2CC7               	goto	l1908
  1155                           
  1156                           ;main.c: 323: if (Keys[chn].State == 0) {
  1157  04A8  0856               	movf	main@chn,w
  1158  04A9  0709               	addwf	9,w
  1159  04AA  0709               	addwf	9,w
  1160  04AB  3E20               	addlw	(low (_Keys| 0))& (0+255)
  1161  04AC  0086               	movwf	6
  1162  04AD  0801               	movf	1,w
  1163  04AE  1D03               	btfss	3,2
  1164  04AF  2CB9               	goto	l1906
  1165                           
  1166                           ;main.c: 324: noolite_send(chn, 15, 0, &noo_send_data[0]);
  1167  04B0  300F               	movlw	15
  1168  04B1  00F0               	movwf	noolite_send@noo_send_command
  1169  04B2  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  1170  04B3  01F1               	clrf	noolite_send@noo_send_format
  1171  04B4  00F2               	movwf	noolite_send@data
  1172  04B5  0856               	movf	main@chn,w
  1173  04B6  225A               	fcall	_noolite_send
  1174                           
  1175                           ;main.c: 325: DevMode &= ~BIND_ACTIVE;
  1176  04B7  0020               	movlb	0	; select bank0
  1177  04B8  103A               	bcf	_DevMode,0
  1178  04B9                     l1906:	
  1179                           
  1180                           ;main.c: 326: }
  1181                           ;main.c: 327: Keys[chn].StateTemp = Keys[chn].State;
  1182  04B9  0856               	movf	main@chn,w
  1183  04BA  0709               	addwf	9,w
  1184  04BB  0709               	addwf	9,w
  1185  04BC  3E21               	addlw	(low ((_Keys| 0+1)))& (0+255)
  1186  04BD  0086               	movwf	6
  1187  04BE  0187               	clrf	7
  1188  04BF  0856               	movf	main@chn,w
  1189  04C0  0709               	addwf	9,w
  1190  04C1  0709               	addwf	9,w
  1191  04C2  3E20               	addlw	(low (_Keys| 0))& (0+255)
  1192  04C3  0084               	movwf	4
  1193  04C4  0185               	clrf	5
  1194  04C5  0800               	movf	0,w
  1195  04C6  0081               	movwf	1
  1196  04C7                     l1908:	
  1197  04C7  3004               	movlw	4
  1198  04C8  0AD6               	incf	main@chn,f
  1199  04C9  0256               	subwf	main@chn,w
  1200  04CA  1803               	btfsc	3,0
  1201  04CB  2F9D               	goto	l2190
  1202  04CC  2C98               	goto	l1898
  1203  04CD                     l137:	
  1204  04CD  1CBA               	btfss	_DevMode,1
  1205  04CE  2D08               	goto	l143
  1206                           
  1207                           ;main.c: 331: for (uint8_t chn = 0; chn < 4; chn++) {
  1208  04CF  01D7               	clrf	main@chn_416
  1209  04D0                     l1914:	
  1210  04D0  3004               	movlw	4
  1211  04D1  0257               	subwf	main@chn_416,w
  1212  04D2  1803               	btfsc	3,0
  1213  04D3  2F9D               	goto	l2190
  1214                           
  1215                           ;main.c: 332: if (Keys[chn].State != Keys[chn].StateTemp) {
  1216  04D4  0857               	movf	main@chn_416,w
  1217  04D5  0709               	addwf	9,w
  1218  04D6  0709               	addwf	9,w
  1219  04D7  3E21               	addlw	(low ((_Keys| 0+1)))& (0+255)
  1220  04D8  0086               	movwf	6
  1221  04D9  0187               	clrf	7
  1222  04DA  0857               	movf	main@chn_416,w
  1223  04DB  0709               	addwf	9,w
  1224  04DC  0709               	addwf	9,w
  1225  04DD  3E20               	addlw	(low (_Keys| 0))& (0+255)
  1226  04DE  0084               	movwf	4
  1227  04DF  0185               	clrf	5
  1228  04E0  0800               	movf	0,w
  1229  04E1  0601               	xorwf	1,w
  1230  04E2  1903               	skipnz
  1231  04E3  2D06               	goto	l1930
  1232                           
  1233                           ;main.c: 333: if (Keys[chn].State == 0) {
  1234  04E4  0857               	movf	main@chn_416,w
  1235  04E5  0709               	addwf	9,w
  1236  04E6  0709               	addwf	9,w
  1237  04E7  3E20               	addlw	(low (_Keys| 0))& (0+255)
  1238  04E8  0086               	movwf	6
  1239  04E9  0801               	movf	1,w
  1240  04EA  1D03               	btfss	3,2
  1241  04EB  2CF7               	goto	l1928
  1242                           
  1243                           ;main.c: 334: noolite_send(chn, 9, 0, &noo_send_data[0]);
  1244  04EC  3009               	movlw	9
  1245  04ED  00F0               	movwf	noolite_send@noo_send_command
  1246  04EE  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  1247  04EF  01F1               	clrf	noolite_send@noo_send_format
  1248  04F0  00F2               	movwf	noolite_send@data
  1249  04F1  0857               	movf	main@chn_416,w
  1250  04F2  225A               	fcall	_noolite_send
  1251                           
  1252                           ;main.c: 335: DevMode &= ~UNBIND_ACTIVE;
  1253  04F3  0020               	movlb	0	; select bank0
  1254  04F4  10BA               	bcf	_DevMode,1
  1255                           
  1256                           ;main.c: 336: LATCbits.LATC3 = OFF;
  1257  04F5  0022               	movlb	2	; select bank2
  1258  04F6  118E               	bcf	14,3	;volatile
  1259  04F7                     l1928:	
  1260                           
  1261                           ;main.c: 337: }
  1262                           ;main.c: 338: Keys[chn].StateTemp = Keys[chn].State;
  1263  04F7  0020               	movlb	0	; select bank0
  1264  04F8  0857               	movf	main@chn_416,w
  1265  04F9  0709               	addwf	9,w
  1266  04FA  0709               	addwf	9,w
  1267  04FB  3E21               	addlw	(low ((_Keys| 0+1)))& (0+255)
  1268  04FC  0086               	movwf	6
  1269  04FD  0187               	clrf	7
  1270  04FE  0857               	movf	main@chn_416,w
  1271  04FF  0709               	addwf	9,w
  1272  0500  0709               	addwf	9,w
  1273  0501  3E20               	addlw	(low (_Keys| 0))& (0+255)
  1274  0502  0084               	movwf	4
  1275  0503  0185               	clrf	5
  1276  0504  0800               	movf	0,w
  1277  0505  0081               	movwf	1
  1278  0506                     l1930:	
  1279  0506  0AD7               	incf	main@chn_416,f
  1280  0507  2CD0               	goto	l1914
  1281  0508                     l143:	
  1282  0508  1D3A               	btfss	_DevMode,2
  1283  0509  2D99               	goto	l1982
  1284                           
  1285                           ;main.c: 342: for (uint8_t chn = 0; chn < 4; chn++) {
  1286  050A  01D8               	clrf	main@chn_417
  1287  050B                     l1936:	
  1288  050B  3004               	movlw	4
  1289  050C  0258               	subwf	main@chn_417,w
  1290  050D  1803               	btfsc	3,0
  1291  050E  2F9D               	goto	l2190
  1292                           
  1293                           ;main.c: 343: if (Keys[chn].State != Keys[chn].StateTemp) {
  1294  050F  0858               	movf	main@chn_417,w
  1295  0510  0709               	addwf	9,w
  1296  0511  0709               	addwf	9,w
  1297  0512  3E21               	addlw	(low ((_Keys| 0+1)))& (0+255)
  1298  0513  0086               	movwf	6
  1299  0514  0187               	clrf	7
  1300  0515  0858               	movf	main@chn_417,w
  1301  0516  0709               	addwf	9,w
  1302  0517  0709               	addwf	9,w
  1303  0518  3E20               	addlw	(low (_Keys| 0))& (0+255)
  1304  0519  0084               	movwf	4
  1305  051A  0185               	clrf	5
  1306  051B  0800               	movf	0,w
  1307  051C  0601               	xorwf	1,w
  1308  051D  1903               	skipnz
  1309  051E  2D97               	goto	l1978
  1310                           
  1311                           ;main.c: 344: if (Keys[chn].State == 0) {
  1312  051F  0858               	movf	main@chn_417,w
  1313  0520  0709               	addwf	9,w
  1314  0521  0709               	addwf	9,w
  1315  0522  3E20               	addlw	(low (_Keys| 0))& (0+255)
  1316  0523  0086               	movwf	6
  1317  0524  0801               	movf	1,w
  1318  0525  1D03               	btfss	3,2
  1319  0526  2D88               	goto	l1976
  1320                           
  1321                           ;main.c: 345: noo_send_data[0] = Type[0] >> 8;
  1322  0527  30C1               	movlw	193
  1323  0528  0084               	movwf	4
  1324  0529  3087               	movlw	135
  1325  052A  0085               	movwf	5
  1326  052B  0800               	movf	0,w	;code access
  1327  052C  00BF               	movwf	_noo_send_data
  1328                           
  1329                           ;main.c: 346: noo_send_data[1] = Type[0];
  1330  052D  30C0               	movlw	192
  1331  052E  0084               	movwf	4
  1332  052F  0800               	movf	0,w	;code access
  1333  0530  00C0               	movwf	_noo_send_data+1
  1334                           
  1335                           ;main.c: 347: noo_send_data[2] = DevType;
  1336  0531  083B               	movf	_DevType,w
  1337  0532  00C1               	movwf	_noo_send_data+2
  1338                           
  1339                           ;main.c: 348: noolite_send(chn, 22, 7, &noo_send_data[0]);
  1340  0533  3016               	movlw	22
  1341  0534  00F0               	movwf	noolite_send@noo_send_command
  1342  0535  3007               	movlw	7
  1343  0536  00F1               	movwf	noolite_send@noo_send_format
  1344  0537  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  1345  0538  00F2               	movwf	noolite_send@data
  1346  0539  0858               	movf	main@chn_417,w
  1347  053A  225A               	fcall	_noolite_send
  1348                           
  1349                           ;main.c: 349: _delay((unsigned long)((500)*(8000000/4000.0)));
  1350  053B  3006               	movlw	6
  1351  053C  00FC               	movwf	??_main+1
  1352  053D  3013               	movlw	19
  1353  053E  00FB               	movwf	??_main
  1354  053F  30AE               	movlw	174
  1355  0540                     u1837:	
  1356  0540  0B89               	decfsz	9,f
  1357  0541  2D40               	goto	u1837
  1358  0542  0BFB               	decfsz	??_main,f
  1359  0543  2D40               	goto	u1837
  1360  0544  0BFC               	decfsz	??_main+1,f
  1361  0545  2D40               	goto	u1837
  1362  0546  0064               	clrwdt	;# 
  1363                           
  1364                           ;main.c: 351: LATCbits.LATC3 = ON;
  1365  0547  0022               	movlb	2	; select bank2
  1366  0548  158E               	bsf	14,3	;volatile
  1367                           
  1368                           ;main.c: 352: FlashEraseRow(0x7C0);
  1369  0549  30C0               	movlw	192
  1370  054A  00F0               	movwf	FlashEraseRow@rowAddr
  1371  054B  3007               	movlw	7
  1372  054C  00F1               	movwf	FlashEraseRow@rowAddr+1
  1373  054D  217E               	fcall	_FlashEraseRow
  1374  054E  0064               	clrwdt	;# 
  1375                           
  1376                           ;main.c: 354: _delay((unsigned long)((500)*(8000000/4000.0)));
  1377  054F  3006               	movlw	6
  1378  0550  00FC               	movwf	??_main+1
  1379  0551  3013               	movlw	19
  1380  0552  00FB               	movwf	??_main
  1381  0553  30AE               	movlw	174
  1382  0554                     u1847:	
  1383  0554  0B89               	decfsz	9,f
  1384  0555  2D54               	goto	u1847
  1385  0556  0BFB               	decfsz	??_main,f
  1386  0557  2D54               	goto	u1847
  1387  0558  0BFC               	decfsz	??_main+1,f
  1388  0559  2D54               	goto	u1847
  1389  055A  0064               	clrwdt	;# 
  1390                           
  1391                           ;main.c: 356: FlashWrite(0x7C0, chn);
  1392  055B  30C0               	movlw	192
  1393  055C  00F0               	movwf	FlashWrite@addr
  1394  055D  3007               	movlw	7
  1395  055E  00F1               	movwf	FlashWrite@addr+1
  1396  055F  0020               	movlb	0	; select bank0
  1397  0560  0858               	movf	main@chn_417,w
  1398  0561  00F2               	movwf	FlashWrite@flash_data
  1399  0562  01F3               	clrf	FlashWrite@flash_data+1
  1400  0563  21A8               	fcall	_FlashWrite
  1401                           
  1402                           ;main.c: 357: FlashWrite(0x7C1, 0x5A);
  1403  0564  30C1               	movlw	193
  1404  0565  00F0               	movwf	FlashWrite@addr
  1405  0566  3007               	movlw	7
  1406  0567  00F1               	movwf	FlashWrite@addr+1
  1407  0568  305A               	movlw	90
  1408  0569  00F2               	movwf	FlashWrite@flash_data
  1409  056A  01F3               	clrf	FlashWrite@flash_data+1
  1410  056B  21A8               	fcall	_FlashWrite
  1411  056C  0064               	clrwdt	;# 
  1412                           
  1413                           ;main.c: 359: DevType = Init_TypeFromFlash();
  1414  056D  21BB               	fcall	_Init_TypeFromFlash
  1415  056E  0020               	movlb	0	; select bank0
  1416  056F  00BB               	movwf	_DevType
  1417                           
  1418                           ;main.c: 360: DevMode &= ~MODE_CHANGE_ACTIVE;
  1419  0570  113A               	bcf	_DevMode,2
  1420                           
  1421                           ;main.c: 361: LATCbits.LATC3 = OFF;
  1422  0571  0022               	movlb	2	; select bank2
  1423  0572  118E               	bcf	14,3	;volatile
  1424                           
  1425                           ;main.c: 362: noo_send_data[0] = Type[0] >> 8;
  1426  0573  30C1               	movlw	193
  1427  0574  0084               	movwf	4
  1428  0575  3087               	movlw	135
  1429  0576  0085               	movwf	5
  1430  0577  0800               	movf	0,w	;code access
  1431  0578  0020               	movlb	0	; select bank0
  1432  0579  00BF               	movwf	_noo_send_data
  1433                           
  1434                           ;main.c: 363: noo_send_data[1] = Type[0];
  1435  057A  30C0               	movlw	192
  1436  057B  0084               	movwf	4
  1437  057C  0800               	movf	0,w	;code access
  1438  057D  00C0               	movwf	_noo_send_data+1
  1439                           
  1440                           ;main.c: 364: noo_send_data[2] = DevType;
  1441  057E  083B               	movf	_DevType,w
  1442  057F  00C1               	movwf	_noo_send_data+2
  1443                           
  1444                           ;main.c: 365: noolite_send(chn, 22, 7, &noo_send_data[0]);
  1445  0580  3016               	movlw	22
  1446  0581  00F0               	movwf	noolite_send@noo_send_command
  1447  0582  3007               	movlw	7
  1448  0583  00F1               	movwf	noolite_send@noo_send_format
  1449  0584  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  1450  0585  00F2               	movwf	noolite_send@data
  1451  0586  0858               	movf	main@chn_417,w
  1452  0587  225A               	fcall	_noolite_send
  1453  0588                     l1976:	
  1454                           
  1455                           ;main.c: 366: }
  1456                           ;main.c: 367: Keys[chn].StateTemp = Keys[chn].State;
  1457  0588  0020               	movlb	0	; select bank0
  1458  0589  0858               	movf	main@chn_417,w
  1459  058A  0709               	addwf	9,w
  1460  058B  0709               	addwf	9,w
  1461  058C  3E21               	addlw	(low ((_Keys| 0+1)))& (0+255)
  1462  058D  0086               	movwf	6
  1463  058E  0187               	clrf	7
  1464  058F  0858               	movf	main@chn_417,w
  1465  0590  0709               	addwf	9,w
  1466  0591  0709               	addwf	9,w
  1467  0592  3E20               	addlw	(low (_Keys| 0))& (0+255)
  1468  0593  0084               	movwf	4
  1469  0594  0185               	clrf	5
  1470  0595  0800               	movf	0,w
  1471  0596  0081               	movwf	1
  1472  0597                     l1978:	
  1473  0597  0AD8               	incf	main@chn_417,f
  1474  0598  2D0B               	goto	l1936
  1475  0599                     l1982:	
  1476                           
  1477                           ;main.c: 372: for (uint8_t chn = 0; chn < 4; chn++) {
  1478  0599  01D9               	clrf	main@chn_418
  1479  059A                     l1984:	
  1480  059A  3004               	movlw	4
  1481  059B  0259               	subwf	main@chn_418,w
  1482  059C  1803               	btfsc	3,0
  1483  059D  2F9D               	goto	l2190
  1484                           
  1485                           ;main.c: 373: if (Keys[chn].State != Keys[chn].StateTemp) {
  1486  059E  0859               	movf	main@chn_418,w
  1487  059F  0709               	addwf	9,w
  1488  05A0  0709               	addwf	9,w
  1489  05A1  3E21               	addlw	(low ((_Keys| 0+1)))& (0+255)
  1490  05A2  0086               	movwf	6
  1491  05A3  0187               	clrf	7
  1492  05A4  0859               	movf	main@chn_418,w
  1493  05A5  0709               	addwf	9,w
  1494  05A6  0709               	addwf	9,w
  1495  05A7  3E20               	addlw	(low (_Keys| 0))& (0+255)
  1496  05A8  0084               	movwf	4
  1497  05A9  0185               	clrf	5
  1498  05AA  0800               	movf	0,w
  1499  05AB  0601               	xorwf	1,w
  1500  05AC  1D03               	btfss	3,2
  1501  05AD  2EF1               	goto	l2082
  1502  05AE  2F91               	goto	l2168
  1503  05AF                     l1992:	
  1504                           
  1505                           ;main.c: 376: if (Keys[chn].State == 0) {
  1506  05AF  0859               	movf	main@chn_418,w
  1507  05B0  0709               	addwf	9,w
  1508  05B1  0709               	addwf	9,w
  1509  05B2  3E20               	addlw	(low (_Keys| 0))& (0+255)
  1510  05B3  0086               	movwf	6
  1511  05B4  0187               	clrf	7
  1512  05B5  0801               	movf	1,w
  1513  05B6  1D03               	btfss	3,2
  1514  05B7  2EFB               	goto	l2084
  1515                           
  1516                           ;main.c: 377: if (Keys[chn].Tick100ms < 10) {
  1517  05B8  0859               	movf	main@chn_418,w
  1518  05B9  0709               	addwf	9,w
  1519  05BA  0709               	addwf	9,w
  1520  05BB  3E22               	addlw	(low ((_Keys| 0+2)))& (0+255)
  1521  05BC  0086               	movwf	6
  1522  05BD  300A               	movlw	10
  1523  05BE  0201               	subwf	1,w
  1524  05BF  1803               	skipnc
  1525  05C0  2DC9               	goto	l1998
  1526                           
  1527                           ;main.c: 378: noolite_send(chn, 4, 0, &noo_send_data[0]);
  1528  05C1  3004               	movlw	4
  1529  05C2  00F0               	movwf	noolite_send@noo_send_command
  1530  05C3  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  1531  05C4  01F1               	clrf	noolite_send@noo_send_format
  1532  05C5  00F2               	movwf	noolite_send@data
  1533  05C6  0859               	movf	main@chn_418,w
  1534  05C7  225A               	fcall	_noolite_send
  1535                           
  1536                           ;main.c: 379: } else {
  1537  05C8  2EFB               	goto	l2084
  1538  05C9                     l1998:	
  1539                           
  1540                           ;main.c: 380: noolite_send(chn, 10, 0, &noo_send_data[0]);
  1541  05C9  300A               	movlw	10
  1542  05CA  00F0               	movwf	noolite_send@noo_send_command
  1543  05CB  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  1544  05CC  01F1               	clrf	noolite_send@noo_send_format
  1545  05CD  00F2               	movwf	noolite_send@data
  1546  05CE  0859               	movf	main@chn_418,w
  1547  05CF  225A               	fcall	_noolite_send
  1548                           
  1549                           ;main.c: 381: _delay((unsigned long)((15)*(8000000/4000.0)));
  1550  05D0  3027               	movlw	39
  1551  05D1  00FB               	movwf	??_main
  1552  05D2  30F5               	movlw	245
  1553  05D3                     u1857:	
  1554  05D3  0B89               	decfsz	9,f
  1555  05D4  2DD3               	goto	u1857
  1556  05D5  0BFB               	decfsz	??_main,f
  1557  05D6  2DD3               	goto	u1857
  1558  05D7  0000               	nop
  1559                           
  1560                           ;main.c: 382: noolite_send(chn, 10, 0, &noo_send_data[0]);
  1561  05D8  300A               	movlw	10
  1562  05D9  00F0               	movwf	noolite_send@noo_send_command
  1563  05DA  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  1564  05DB  01F1               	clrf	noolite_send@noo_send_format
  1565  05DC  00F2               	movwf	noolite_send@data
  1566  05DD  0020               	movlb	0	; select bank0
  1567  05DE  0859               	movf	main@chn_418,w
  1568  05DF  225A               	fcall	_noolite_send
  1569                           
  1570                           ;main.c: 383: _delay((unsigned long)((15)*(8000000/4000.0)));
  1571  05E0  3027               	movlw	39
  1572  05E1  00FB               	movwf	??_main
  1573  05E2  30F5               	movlw	245
  1574  05E3                     u1867:	
  1575  05E3  0B89               	decfsz	9,f
  1576  05E4  2DE3               	goto	u1867
  1577  05E5  0BFB               	decfsz	??_main,f
  1578  05E6  2DE3               	goto	u1867
  1579  05E7  0000               	nop
  1580  05E8                     L1:	
  1581                           
  1582                           ;main.c: 384: noolite_send(chn, 10, 0, &noo_send_data[0]);
  1583  05E8  300A               	movlw	10
  1584  05E9  00F0               	movwf	noolite_send@noo_send_command
  1585  05EA  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  1586  05EB  01F1               	clrf	noolite_send@noo_send_format
  1587  05EC  00F2               	movwf	noolite_send@data
  1588  05ED  0020               	movlb	0	; select bank0
  1589  05EE  0859               	movf	main@chn_418,w
  1590  05EF  225A               	fcall	_noolite_send
  1591                           
  1592                           ;main.c: 385: Keys[chn].FirstCmdSent = 0;
  1593  05F0  0020               	movlb	0	; select bank0
  1594  05F1  0859               	movf	main@chn_418,w
  1595  05F2  0709               	addwf	9,w
  1596  05F3  0709               	addwf	9,w
  1597  05F4  3E23               	addlw	(low ((_Keys| 0+3)))& (0+255)
  1598  05F5  0086               	movwf	6
  1599  05F6  0187               	clrf	7
  1600  05F7  0181               	clrf	1
  1601                           
  1602                           ;main.c: 386: }
  1603                           ;main.c: 387: }
  1604                           ;main.c: 388: break;
  1605  05F8  2EFB               	goto	l2084
  1606  05F9                     l2008:	
  1607                           
  1608                           ;main.c: 390: if (Keys[chn].State == 0) {
  1609  05F9  0859               	movf	main@chn_418,w
  1610  05FA  0709               	addwf	9,w
  1611  05FB  0709               	addwf	9,w
  1612  05FC  3E20               	addlw	(low (_Keys| 0))& (0+255)
  1613  05FD  0086               	movwf	6
  1614  05FE  0187               	clrf	7
  1615  05FF  0801               	movf	1,w
  1616  0600  1D03               	btfss	3,2
  1617  0601  2EFB               	goto	l2084
  1618                           
  1619                           ;main.c: 391: if (Keys[chn].Tick100ms < 10) {
  1620  0602  0859               	movf	main@chn_418,w
  1621  0603  0709               	addwf	9,w
  1622  0604  0709               	addwf	9,w
  1623  0605  3E22               	addlw	(low ((_Keys| 0+2)))& (0+255)
  1624  0606  0086               	movwf	6
  1625  0607  300A               	movlw	10
  1626  0608  0201               	subwf	1,w
  1627  0609  1803               	skipnc
  1628  060A  2E21               	goto	l2020
  1629                           
  1630                           ;main.c: 392: if ((chn == 0) || (chn == 2)) {
  1631  060B  0859               	movf	main@chn_418,w
  1632  060C  1903               	btfsc	3,2
  1633  060D  2E12               	goto	l2016
  1634  060E  3002               	movlw	2
  1635  060F  0659               	xorwf	main@chn_418,w
  1636  0610  1D03               	btfss	3,2
  1637  0611  2E19               	goto	l2018
  1638  0612                     l2016:	
  1639  0612  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  1640                           
  1641                           ;main.c: 393: noolite_send(chn, 0, 0, &noo_send_data[0]);
  1642  0613  01F0               	clrf	noolite_send@noo_send_command
  1643  0614  01F1               	clrf	noolite_send@noo_send_format
  1644  0615  00F2               	movwf	noolite_send@data
  1645  0616  0859               	movf	main@chn_418,w
  1646  0617  225A               	fcall	_noolite_send
  1647                           
  1648                           ;main.c: 394: } else {
  1649  0618  2EFB               	goto	l2084
  1650  0619                     l2018:	
  1651                           
  1652                           ;main.c: 395: noolite_send(chn, 2, 0, &noo_send_data[0]);
  1653  0619  3002               	movlw	2
  1654  061A  00F0               	movwf	noolite_send@noo_send_command
  1655  061B  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  1656  061C  01F1               	clrf	noolite_send@noo_send_format
  1657  061D  00F2               	movwf	noolite_send@data
  1658  061E  0859               	movf	main@chn_418,w
  1659  061F  225A               	fcall	_noolite_send
  1660  0620  2EFB               	goto	l2084
  1661  0621                     l2020:	
  1662                           
  1663                           ;main.c: 398: noolite_send(chn, 10, 0, &noo_send_data[0]);
  1664  0621  300A               	movlw	10
  1665  0622  00F0               	movwf	noolite_send@noo_send_command
  1666  0623  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  1667  0624  01F1               	clrf	noolite_send@noo_send_format
  1668  0625  00F2               	movwf	noolite_send@data
  1669  0626  0859               	movf	main@chn_418,w
  1670  0627  225A               	fcall	_noolite_send
  1671                           
  1672                           ;main.c: 399: _delay((unsigned long)((15)*(8000000/4000.0)));
  1673  0628  3027               	movlw	39
  1674  0629  00FB               	movwf	??_main
  1675  062A  30F5               	movlw	245
  1676  062B                     u1877:	
  1677  062B  0B89               	decfsz	9,f
  1678  062C  2E2B               	goto	u1877
  1679  062D  0BFB               	decfsz	??_main,f
  1680  062E  2E2B               	goto	u1877
  1681  062F  0000               	nop
  1682                           
  1683                           ;main.c: 400: noolite_send(chn, 10, 0, &noo_send_data[0]);
  1684  0630  300A               	movlw	10
  1685  0631  00F0               	movwf	noolite_send@noo_send_command
  1686  0632  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  1687  0633  01F1               	clrf	noolite_send@noo_send_format
  1688  0634  00F2               	movwf	noolite_send@data
  1689  0635  0020               	movlb	0	; select bank0
  1690  0636  0859               	movf	main@chn_418,w
  1691  0637  225A               	fcall	_noolite_send
  1692                           
  1693                           ;main.c: 401: _delay((unsigned long)((15)*(8000000/4000.0)));
  1694  0638  3027               	movlw	39
  1695  0639  00FB               	movwf	??_main
  1696  063A  30F5               	movlw	245
  1697  063B                     u1887:	
  1698  063B  0B89               	decfsz	9,f
  1699  063C  2E3B               	goto	u1887
  1700  063D  0BFB               	decfsz	??_main,f
  1701  063E  2E3B               	goto	u1887
  1702  063F  0000               	nop
  1703  0640  2DE8               	goto	L1
  1704  0641                     l2030:	
  1705                           ;main.c: 402: noolite_send(chn, 10, 0, &noo_send_data[0]);
  1706                           
  1707                           
  1708                           ;main.c: 408: if (chn > 1) {
  1709  0641  3002               	movlw	2
  1710  0642  0259               	subwf	main@chn_418,w
  1711                           
  1712                           ;main.c: 409: if (Keys[chn].State == 0) {
  1713  0643  0859               	movf	main@chn_418,w
  1714  0644  1C03               	skipc
  1715  0645  2E63               	goto	L5
  1716  0646  0709               	addwf	9,w
  1717  0647  0709               	addwf	9,w
  1718  0648  3E20               	addlw	(low (_Keys| 0))& (0+255)
  1719  0649  0086               	movwf	6
  1720  064A  0187               	clrf	7
  1721  064B  0801               	movf	1,w
  1722  064C  1D03               	btfss	3,2
  1723  064D  2EFB               	goto	l2084
  1724                           
  1725                           ;main.c: 410: if (Keys[chn].Tick100ms < 10) {
  1726  064E  0859               	movf	main@chn_418,w
  1727  064F  0709               	addwf	9,w
  1728  0650  0709               	addwf	9,w
  1729  0651  3E22               	addlw	(low ((_Keys| 0+2)))& (0+255)
  1730  0652  0086               	movwf	6
  1731  0653  300A               	movlw	10
  1732  0654  0201               	subwf	1,w
  1733  0655  1803               	skipnc
  1734  0656  2EFB               	goto	l2084
  1735                           
  1736                           ;main.c: 411: if (chn > 1) {
  1737  0657  3002               	movlw	2
  1738  0658  0259               	subwf	main@chn_418,w
  1739  0659  1C03               	skipc
  1740  065A  2EFB               	goto	l2084
  1741                           
  1742                           ;main.c: 412: noolite_send(chn, 7, 0, &noo_send_data[0]);
  1743  065B  3007               	movlw	7
  1744  065C  00F0               	movwf	noolite_send@noo_send_command
  1745  065D  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  1746  065E  01F1               	clrf	noolite_send@noo_send_format
  1747  065F  00F2               	movwf	noolite_send@data
  1748  0660  0859               	movf	main@chn_418,w
  1749  0661  225A               	fcall	_noolite_send
  1750  0662  2EFB               	goto	l2084
  1751  0663                     L5:	
  1752                           ;main.c: 417: if (Keys[chn].State == 0) {
  1753                           
  1754  0663  0709               	addwf	9,w
  1755  0664  0709               	addwf	9,w
  1756  0665  3E20               	addlw	(low (_Keys| 0))& (0+255)
  1757  0666  0086               	movwf	6
  1758  0667  0187               	clrf	7
  1759  0668  0801               	movf	1,w
  1760  0669  1D03               	btfss	3,2
  1761  066A  2EFB               	goto	l2084
  1762                           
  1763                           ;main.c: 418: if (Keys[chn].Tick100ms < 10) {
  1764  066B  0859               	movf	main@chn_418,w
  1765  066C  0709               	addwf	9,w
  1766  066D  0709               	addwf	9,w
  1767  066E  3E22               	addlw	(low ((_Keys| 0+2)))& (0+255)
  1768  066F  0086               	movwf	6
  1769  0670  300A               	movlw	10
  1770  0671  0201               	subwf	1,w
  1771  0672  1803               	skipnc
  1772  0673  2E7C               	goto	l2046
  1773                           
  1774                           ;main.c: 419: noolite_send(chn, 4, 0, &noo_send_data[0]);
  1775  0674  3004               	movlw	4
  1776  0675  00F0               	movwf	noolite_send@noo_send_command
  1777  0676  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  1778  0677  01F1               	clrf	noolite_send@noo_send_format
  1779  0678  00F2               	movwf	noolite_send@data
  1780  0679  0859               	movf	main@chn_418,w
  1781  067A  225A               	fcall	_noolite_send
  1782                           
  1783                           ;main.c: 420: } else {
  1784  067B  2EFB               	goto	l2084
  1785  067C                     l2046:	
  1786                           
  1787                           ;main.c: 421: noolite_send(chn, 10, 0, &noo_send_data[0]);
  1788  067C  300A               	movlw	10
  1789  067D  00F0               	movwf	noolite_send@noo_send_command
  1790  067E  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  1791  067F  01F1               	clrf	noolite_send@noo_send_format
  1792  0680  00F2               	movwf	noolite_send@data
  1793  0681  0859               	movf	main@chn_418,w
  1794  0682  225A               	fcall	_noolite_send
  1795                           
  1796                           ;main.c: 422: _delay((unsigned long)((15)*(8000000/4000.0)));
  1797  0683  3027               	movlw	39
  1798  0684  00FB               	movwf	??_main
  1799  0685  30F5               	movlw	245
  1800  0686                     u1897:	
  1801  0686  0B89               	decfsz	9,f
  1802  0687  2E86               	goto	u1897
  1803  0688  0BFB               	decfsz	??_main,f
  1804  0689  2E86               	goto	u1897
  1805  068A  0000               	nop
  1806                           
  1807                           ;main.c: 423: noolite_send(chn, 10, 0, &noo_send_data[0]);
  1808  068B  300A               	movlw	10
  1809  068C  00F0               	movwf	noolite_send@noo_send_command
  1810  068D  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  1811  068E  01F1               	clrf	noolite_send@noo_send_format
  1812  068F  00F2               	movwf	noolite_send@data
  1813  0690  0020               	movlb	0	; select bank0
  1814  0691  0859               	movf	main@chn_418,w
  1815  0692  225A               	fcall	_noolite_send
  1816                           
  1817                           ;main.c: 424: _delay((unsigned long)((15)*(8000000/4000.0)));
  1818  0693  3027               	movlw	39
  1819  0694  00FB               	movwf	??_main
  1820  0695  30F5               	movlw	245
  1821  0696                     u1907:	
  1822  0696  0B89               	decfsz	9,f
  1823  0697  2E96               	goto	u1907
  1824  0698  0BFB               	decfsz	??_main,f
  1825  0699  2E96               	goto	u1907
  1826  069A  0000               	nop
  1827  069B  2DE8               	goto	L1
  1828  069C                     l2056:	
  1829                           ;main.c: 425: noolite_send(chn, 10, 0, &noo_send_data[0]);
  1830                           
  1831                           
  1832                           ;main.c: 432: if (chn > 1) {
  1833  069C  3002               	movlw	2
  1834  069D  0259               	subwf	main@chn_418,w
  1835                           
  1836                           ;main.c: 433: if (Keys[chn].State) {
  1837  069E  0859               	movf	main@chn_418,w
  1838  069F  1C03               	skipc
  1839  06A0  2EB8               	goto	L6
  1840  06A1  0709               	addwf	9,w
  1841  06A2  0709               	addwf	9,w
  1842  06A3  3E20               	addlw	(low (_Keys| 0))& (0+255)
  1843  06A4  0086               	movwf	6
  1844  06A5  0187               	clrf	7
  1845  06A6  0801               	movf	1,w
  1846  06A7  1903               	btfsc	3,2
  1847  06A8  2EB1               	goto	l2062
  1848                           
  1849                           ;main.c: 434: noolite_send(chn, 2, 0, &noo_send_data[0]);
  1850  06A9  3002               	movlw	2
  1851  06AA  00F0               	movwf	noolite_send@noo_send_command
  1852  06AB  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  1853  06AC  01F1               	clrf	noolite_send@noo_send_format
  1854  06AD  00F2               	movwf	noolite_send@data
  1855  06AE  0859               	movf	main@chn_418,w
  1856  06AF  225A               	fcall	_noolite_send
  1857                           
  1858                           ;main.c: 435: } else {
  1859  06B0  2EFB               	goto	l2084
  1860  06B1                     l2062:	
  1861  06B1  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  1862                           
  1863                           ;main.c: 436: noolite_send(chn, 0, 0, &noo_send_data[0]);
  1864  06B2  01F0               	clrf	noolite_send@noo_send_command
  1865  06B3  01F1               	clrf	noolite_send@noo_send_format
  1866  06B4  00F2               	movwf	noolite_send@data
  1867  06B5  0859               	movf	main@chn_418,w
  1868  06B6  225A               	fcall	_noolite_send
  1869  06B7  2EFB               	goto	l2084
  1870  06B8                     L6:	
  1871                           ;main.c: 439: if (Keys[chn].State == 0) {
  1872                           
  1873  06B8  0709               	addwf	9,w
  1874  06B9  0709               	addwf	9,w
  1875  06BA  3E20               	addlw	(low (_Keys| 0))& (0+255)
  1876  06BB  0086               	movwf	6
  1877  06BC  0187               	clrf	7
  1878  06BD  0801               	movf	1,w
  1879  06BE  1D03               	btfss	3,2
  1880  06BF  2EFB               	goto	l2084
  1881                           
  1882                           ;main.c: 440: if (Keys[chn].Tick100ms < 10) {
  1883  06C0  0859               	movf	main@chn_418,w
  1884  06C1  0709               	addwf	9,w
  1885  06C2  0709               	addwf	9,w
  1886  06C3  3E22               	addlw	(low ((_Keys| 0+2)))& (0+255)
  1887  06C4  0086               	movwf	6
  1888  06C5  300A               	movlw	10
  1889  06C6  0201               	subwf	1,w
  1890  06C7  1803               	skipnc
  1891  06C8  2ED1               	goto	l2070
  1892                           
  1893                           ;main.c: 441: noolite_send(chn, 4, 0, &noo_send_data[0]);
  1894  06C9  3004               	movlw	4
  1895  06CA  00F0               	movwf	noolite_send@noo_send_command
  1896  06CB  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  1897  06CC  01F1               	clrf	noolite_send@noo_send_format
  1898  06CD  00F2               	movwf	noolite_send@data
  1899  06CE  0859               	movf	main@chn_418,w
  1900  06CF  225A               	fcall	_noolite_send
  1901                           
  1902                           ;main.c: 442: } else {
  1903  06D0  2EFB               	goto	l2084
  1904  06D1                     l2070:	
  1905                           
  1906                           ;main.c: 443: noolite_send(chn, 10, 0, &noo_send_data[0]);
  1907  06D1  300A               	movlw	10
  1908  06D2  00F0               	movwf	noolite_send@noo_send_command
  1909  06D3  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  1910  06D4  01F1               	clrf	noolite_send@noo_send_format
  1911  06D5  00F2               	movwf	noolite_send@data
  1912  06D6  0859               	movf	main@chn_418,w
  1913  06D7  225A               	fcall	_noolite_send
  1914                           
  1915                           ;main.c: 444: _delay((unsigned long)((15)*(8000000/4000.0)));
  1916  06D8  3027               	movlw	39
  1917  06D9  00FB               	movwf	??_main
  1918  06DA  30F5               	movlw	245
  1919  06DB                     u1917:	
  1920  06DB  0B89               	decfsz	9,f
  1921  06DC  2EDB               	goto	u1917
  1922  06DD  0BFB               	decfsz	??_main,f
  1923  06DE  2EDB               	goto	u1917
  1924  06DF  0000               	nop
  1925                           
  1926                           ;main.c: 445: noolite_send(chn, 10, 0, &noo_send_data[0]);
  1927  06E0  300A               	movlw	10
  1928  06E1  00F0               	movwf	noolite_send@noo_send_command
  1929  06E2  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  1930  06E3  01F1               	clrf	noolite_send@noo_send_format
  1931  06E4  00F2               	movwf	noolite_send@data
  1932  06E5  0020               	movlb	0	; select bank0
  1933  06E6  0859               	movf	main@chn_418,w
  1934  06E7  225A               	fcall	_noolite_send
  1935                           
  1936                           ;main.c: 446: _delay((unsigned long)((15)*(8000000/4000.0)));
  1937  06E8  3027               	movlw	39
  1938  06E9  00FB               	movwf	??_main
  1939  06EA  30F5               	movlw	245
  1940  06EB                     u1927:	
  1941  06EB  0B89               	decfsz	9,f
  1942  06EC  2EEB               	goto	u1927
  1943  06ED  0BFB               	decfsz	??_main,f
  1944  06EE  2EEB               	goto	u1927
  1945  06EF  0000               	nop
  1946  06F0  2DE8               	goto	L1
  1947  06F1                     l2082:	
  1948                           ;main.c: 447: noolite_send(chn, 10, 0, &noo_send_data[0]);
  1949                           
  1950  06F1  083B               	movf	_DevType,w
  1951                           
  1952                           ; Switch size 1, requested type "speed"
  1953                           ; Number of cases is 4, Range of values is 0 to 3
  1954                           ; switch strategies available:
  1955                           ; Name         Instructions Cycles
  1956                           ; direct_byte           14     6 (fixed)
  1957                           ; simple_byte           13     7 (average)
  1958                           ; jumptable            260     6 (fixed)
  1959                           ;	Chosen strategy is direct_byte
  1960  06F2  0084               	movwf	4
  1961  06F3  3004               	movlw	4
  1962  06F4  0204               	subwf	4,w
  1963  06F5  1803               	skipnc
  1964  06F6  2EFB               	goto	l2084
  1965  06F7  3180               	movlp	high S2354
  1966  06F8  3002               	movlw	low S2354
  1967  06F9  0704               	addwf	4,w
  1968  06FA  0082               	movwf	2
  1969  06FB                     l2084:	
  1970                           
  1971                           ;main.c: 454: Keys[chn].StateTemp = Keys[chn].State;
  1972  06FB  0020               	movlb	0	; select bank0
  1973  06FC  0859               	movf	main@chn_418,w
  1974  06FD  0709               	addwf	9,w
  1975  06FE  0709               	addwf	9,w
  1976  06FF  3E21               	addlw	(low ((_Keys| 0+1)))& (0+255)
  1977  0700  0086               	movwf	6
  1978  0701  0187               	clrf	7
  1979  0702  0859               	movf	main@chn_418,w
  1980  0703  0709               	addwf	9,w
  1981  0704  0709               	addwf	9,w
  1982  0705  3E20               	addlw	(low (_Keys| 0))& (0+255)
  1983  0706  0084               	movwf	4
  1984  0707  0185               	clrf	5
  1985  0708  0800               	movf	0,w
  1986  0709  0081               	movwf	1
  1987  070A  2F91               	goto	l2168
  1988  070B                     l2086:	
  1989                           
  1990                           ;main.c: 459: if (Keys[chn].State != 0) {
  1991  070B  0859               	movf	main@chn_418,w
  1992  070C                     L8:	
  1993  070C  0709               	addwf	9,w
  1994  070D  0709               	addwf	9,w
  1995  070E  3E20               	addlw	(low (_Keys| 0))& (0+255)
  1996  070F  0086               	movwf	6
  1997  0710  0187               	clrf	7
  1998  0711  0801               	movf	1,w
  1999  0712  1903               	btfsc	3,2
  2000  0713  2F3D               	goto	l2098
  2001                           
  2002                           ;main.c: 460: if (Keys[chn].Tick100ms > 9) {
  2003  0714  0859               	movf	main@chn_418,w
  2004  0715  0709               	addwf	9,w
  2005  0716  0709               	addwf	9,w
  2006  0717  3E22               	addlw	(low ((_Keys| 0+2)))& (0+255)
  2007  0718  0086               	movwf	6
  2008  0719  300A               	movlw	10
  2009  071A  0201               	subwf	1,w
  2010                           
  2011                           ;main.c: 461: if (Keys[chn].FirstCmdSent == 0) {
  2012  071B  0859               	movf	main@chn_418,w
  2013  071C  1C03               	skipc
  2014  071D  2F36               	goto	L7
  2015  071E  0709               	addwf	9,w
  2016  071F  0709               	addwf	9,w
  2017  0720  3E23               	addlw	(low ((_Keys| 0+3)))& (0+255)
  2018  0721  0086               	movwf	6
  2019  0722  0801               	movf	1,w
  2020  0723  1D03               	btfss	3,2
  2021  0724  2F35               	goto	l2096
  2022                           
  2023                           ;main.c: 462: noolite_send(chn, 5, 0, &noo_send_data[0]);
  2024  0725  3005               	movlw	5
  2025  0726                     L3:	
  2026  0726  00F0               	movwf	noolite_send@noo_send_command
  2027  0727  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  2028  0728                     L2:	
  2029  0728  01F1               	clrf	noolite_send@noo_send_format
  2030  0729  00F2               	movwf	noolite_send@data
  2031  072A  0859               	movf	main@chn_418,w
  2032  072B  225A               	fcall	_noolite_send
  2033                           
  2034                           ;main.c: 463: Keys[chn].FirstCmdSent = 1;
  2035  072C  0020               	movlb	0	; select bank0
  2036  072D  0859               	movf	main@chn_418,w
  2037  072E  0709               	addwf	9,w
  2038  072F  0709               	addwf	9,w
  2039  0730  3E23               	addlw	(low ((_Keys| 0+3)))& (0+255)
  2040  0731  0086               	movwf	6
  2041  0732  0187               	clrf	7
  2042  0733  0181               	clrf	1
  2043  0734  0A81               	incf	1,f
  2044  0735                     l2096:	
  2045                           
  2046                           ;main.c: 464: }
  2047                           ;main.c: 465: }
  2048                           ;main.c: 466: Keys[chn].Tick100ms++;
  2049  0735  0859               	movf	main@chn_418,w
  2050  0736                     L7:	
  2051  0736  0709               	addwf	9,w
  2052  0737  0709               	addwf	9,w
  2053  0738  3E22               	addlw	(low ((_Keys| 0+2)))& (0+255)
  2054  0739  0086               	movwf	6
  2055  073A  0187               	clrf	7
  2056  073B  0A81               	incf	1,f
  2057                           
  2058                           ;main.c: 467: } else {
  2059  073C  2F9B               	goto	l2170
  2060  073D                     l2098:	
  2061                           
  2062                           ;main.c: 468: Keys[chn].Tick100ms = 0;
  2063  073D  0859               	movf	main@chn_418,w
  2064  073E  0709               	addwf	9,w
  2065  073F  0709               	addwf	9,w
  2066  0740  3E22               	addlw	(low ((_Keys| 0+2)))& (0+255)
  2067  0741  0086               	movwf	6
  2068  0742  0187               	clrf	7
  2069  0743  0181               	clrf	1
  2070  0744  2F9B               	goto	l2170
  2071  0745                     l2100:	
  2072                           
  2073                           ;main.c: 472: if (Keys[chn].State != 0) {
  2074  0745  0859               	movf	main@chn_418,w
  2075  0746  0709               	addwf	9,w
  2076  0747  0709               	addwf	9,w
  2077  0748  3E20               	addlw	(low (_Keys| 0))& (0+255)
  2078  0749  0086               	movwf	6
  2079  074A  0187               	clrf	7
  2080  074B  0801               	movf	1,w
  2081  074C  1903               	btfsc	3,2
  2082  074D  2F3D               	goto	l2098
  2083                           
  2084                           ;main.c: 473: if (Keys[chn].Tick100ms > 9) {
  2085  074E  0859               	movf	main@chn_418,w
  2086  074F  0709               	addwf	9,w
  2087  0750  0709               	addwf	9,w
  2088  0751  3E22               	addlw	(low ((_Keys| 0+2)))& (0+255)
  2089  0752  0086               	movwf	6
  2090  0753  300A               	movlw	10
  2091  0754  0201               	subwf	1,w
  2092                           
  2093                           ;main.c: 474: if (Keys[chn].FirstCmdSent == 0) {
  2094  0755  0859               	movf	main@chn_418,w
  2095  0756  1C03               	skipc
  2096  0757  2F36               	goto	L7
  2097  0758  0709               	addwf	9,w
  2098  0759  0709               	addwf	9,w
  2099  075A  3E23               	addlw	(low ((_Keys| 0+3)))& (0+255)
  2100  075B  0086               	movwf	6
  2101  075C  0801               	movf	1,w
  2102  075D  1D03               	btfss	3,2
  2103  075E  2F35               	goto	l2096
  2104                           
  2105                           ;main.c: 475: if (chn == 0 || chn == 2) {
  2106  075F  0859               	movf	main@chn_418,w
  2107  0760  1903               	btfsc	3,2
  2108  0761  2F66               	goto	l2110
  2109  0762  3002               	movlw	2
  2110  0763  0659               	xorwf	main@chn_418,w
  2111  0764  1D03               	btfss	3,2
  2112  0765  2F6A               	goto	l2112
  2113  0766                     l2110:	
  2114  0766  303F               	movlw	(low (_noo_send_data| 0))& (0+255)
  2115                           
  2116                           ;main.c: 476: noolite_send(chn, 1, 0, &noo_send_data[0]);
  2117  0767  01F0               	clrf	noolite_send@noo_send_command
  2118  0768  0AF0               	incf	noolite_send@noo_send_command,f
  2119  0769  2F28               	goto	L2
  2120  076A                     l2112:	
  2121                           ;main.c: 477: } else {
  2122                           
  2123                           
  2124                           ;main.c: 478: noolite_send(chn, 3, 0, &noo_send_data[0]);
  2125  076A  3003               	movlw	3
  2126  076B  2F26               	goto	L3
  2127  076C                     l2120:	
  2128                           
  2129                           ;main.c: 489: if (chn < 2) {
  2130  076C  3002               	movlw	2
  2131  076D  0259               	subwf	main@chn_418,w
  2132                           
  2133                           ;main.c: 502: if (Keys[chn].State != 0) {
  2134                           
  2135                           ;main.c: 493: noolite_send(chn, 5, 0, &noo_send_data[0]);
  2136                           
  2137                           ;main.c: 492: if (Keys[chn].FirstCmdSent == 0) {
  2138                           
  2139                           ;main.c: 491: if (Keys[chn].Tick100ms > 9) {
  2140                           
  2141                           ;main.c: 490: if (Keys[chn].State != 0) {
  2142  076E  0859               	movf	main@chn_418,w
  2143  076F  1C03               	btfss	3,0
  2144  0770  2F0C               	goto	L8
  2145  0771  0709               	addwf	9,w
  2146  0772  0709               	addwf	9,w
  2147  0773  3E20               	addlw	(low (_Keys| 0))& (0+255)
  2148  0774  0086               	movwf	6
  2149  0775  0187               	clrf	7
  2150  0776  0801               	movf	1,w
  2151  0777  1903               	btfsc	3,2
  2152  0778  2F3D               	goto	l2098
  2153                           
  2154                           ;main.c: 503: if (Keys[chn].Tick100ms > 49) {
  2155  0779  0859               	movf	main@chn_418,w
  2156  077A  0709               	addwf	9,w
  2157  077B  0709               	addwf	9,w
  2158  077C  3E22               	addlw	(low ((_Keys| 0+2)))& (0+255)
  2159  077D  0086               	movwf	6
  2160  077E  3032               	movlw	50
  2161  077F  0201               	subwf	1,w
  2162                           
  2163                           ;main.c: 504: if (Keys[chn].FirstCmdSent == 0) {
  2164  0780  0859               	movf	main@chn_418,w
  2165  0781  1C03               	skipc
  2166  0782  2F36               	goto	L7
  2167  0783  0709               	addwf	9,w
  2168  0784  0709               	addwf	9,w
  2169  0785  3E23               	addlw	(low ((_Keys| 0+3)))& (0+255)
  2170  0786  0086               	movwf	6
  2171  0787  0801               	movf	1,w
  2172  0788  1D03               	btfss	3,2
  2173  0789  2F35               	goto	l2096
  2174                           
  2175                           ;main.c: 505: noolite_send(chn, 8, 0, &noo_send_data[0]);
  2176  078A  3008               	movlw	8
  2177  078B  2F26               	goto	L3
  2178  078C                     l2150:	
  2179                           
  2180                           ;main.c: 516: if (chn < 2) {
  2181  078C  3002               	movlw	2
  2182  078D  0259               	subwf	main@chn_418,w
  2183  078E  1803               	skipnc
  2184  078F  2F9B               	goto	l2170
  2185  0790  2F0B               	goto	l2086
  2186  0791                     l2168:	
  2187                           ;main.c: 520: noolite_send(chn, 5, 0, &noo_send_data[0]);
  2188                           
  2189                           ;main.c: 519: if (Keys[chn].FirstCmdSent == 0) {
  2190                           
  2191                           ;main.c: 518: if (Keys[chn].Tick100ms > 9) {
  2192                           
  2193                           ;main.c: 517: if (Keys[chn].State != 0) {
  2194                           
  2195  0791  083B               	movf	_DevType,w
  2196                           
  2197                           ; Switch size 1, requested type "speed"
  2198                           ; Number of cases is 4, Range of values is 0 to 3
  2199                           ; switch strategies available:
  2200                           ; Name         Instructions Cycles
  2201                           ; direct_byte           14     6 (fixed)
  2202                           ; simple_byte           13     7 (average)
  2203                           ; jumptable            260     6 (fixed)
  2204                           ;	Chosen strategy is direct_byte
  2205  0792  0084               	movwf	4
  2206  0793  3004               	movlw	4
  2207  0794  0204               	subwf	4,w
  2208  0795  1803               	skipnc
  2209  0796  2F9B               	goto	l2170
  2210  0797  3180               	movlp	high S2356
  2211  0798  3006               	movlw	low S2356
  2212  0799  0704               	addwf	4,w
  2213  079A  0082               	movwf	2
  2214  079B                     l2170:	
  2215  079B  0AD9               	incf	main@chn_418,f
  2216  079C  2D9A               	goto	l1984
  2217  079D                     l2190:	
  2218                           
  2219                           ;main.c: 554: }
  2220                           ;main.c: 556: if (((DevMode & 0x07) == 0) && ((PORTA & All_Pressed) == 0)) {
  2221  079D  083A               	movf	_DevMode,w
  2222  079E  3907               	andlw	7
  2223  079F  1D03               	btfss	3,2
  2224  07A0  2FA8               	goto	l2196
  2225  07A1  080C               	movf	12,w	;volatile
  2226  07A2  3917               	andlw	23
  2227  07A3  1D03               	btfss	3,2
  2228  07A4  2FA8               	goto	l2196
  2229                           
  2230                           ;main.c: 557: LATCbits.LATC5 = 0;
  2231  07A5  0022               	movlb	2	; select bank2
  2232  07A6  128E               	bcf	14,5	;volatile
  2233                           
  2234                           ;main.c: 558: } else {
  2235  07A7  2C09               	goto	l1798
  2236  07A8                     l2196:	
  2237                           
  2238                           ;main.c: 559: WDTCONbits.WDTPS = 0b00110;
  2239  07A8  0021               	movlb	1	; select bank1
  2240  07A9  0817               	movf	23,w	;volatile
  2241  07AA  39C1               	andlw	-63
  2242  07AB  380C               	iorlw	12
  2243  07AC  0097               	movwf	23	;volatile
  2244                           
  2245                           ;main.c: 560: __nop();
  2246  07AD  0000               	nop
  2247  07AE  0063               	sleep	;# 
  2248                           
  2249                           ;main.c: 562: __nop();
  2250  07AF  0000               	nop
  2251                           
  2252                           ;main.c: 563: WDTCONbits.WDTPS = 0b00101;
  2253  07B0  0021               	movlb	1	; select bank1
  2254  07B1  0817               	movf	23,w	;volatile
  2255  07B2  39C1               	andlw	-63
  2256  07B3  380A               	iorlw	10
  2257  07B4  0097               	movwf	23	;volatile
  2258                           
  2259                           ;main.c: 564: __nop();
  2260  07B5  0000               	nop
  2261  07B6  0063               	sleep	;# 
  2262                           
  2263                           ;main.c: 566: __nop();
  2264  07B7  0000               	nop
  2265                           
  2266                           ;main.c: 567: WDTCONbits.WDTPS = 0b01011;
  2267  07B8  0021               	movlb	1	; select bank1
  2268  07B9  0817               	movf	23,w	;volatile
  2269  07BA  39C1               	andlw	-63
  2270  07BB  3816               	iorlw	22
  2271  07BC  0097               	movwf	23	;volatile
  2272                           
  2273                           ;main.c: 568: __nop();
  2274  07BD  0000               	nop
  2275  07BE  0064               	clrwdt	;# 
  2276  07BF  2C09               	goto	l1798
  2277  07C0                     __end_of_main:	
  2278                           
  2279                           	psect	swtext1
  2280  0002                     __pswtext1:	
  2281  0002                     S2354:	
  2282  0002  2DAF               	ljmp	l1992
  2283  0003  2DF9               	ljmp	l2008
  2284  0004  2E41               	ljmp	l2030
  2285  0005  2E9C               	ljmp	l2056
  2286                           
  2287                           	psect	swtext2
  2288  0006                     __pswtext2:	
  2289  0006                     S2356:	
  2290  0006  2F0B               	ljmp	l2086
  2291  0007  2F45               	ljmp	l2100
  2292  0008  2F6C               	ljmp	l2120
  2293  0009  2F8C               	ljmp	l2150
  2294                           
  2295                           	psect	text1
  2296  025A                     __ptext1:	
  2297 ;; *************** function _noolite_send *****************
  2298 ;; Defined at:
  2299 ;;		line 174 in file "noolite.c"
  2300 ;; Parameters:    Size  Location     Type
  2301 ;;  chn             1    wreg     unsigned char 
  2302 ;;  noo_send_com    1    0[COMMON] unsigned char 
  2303 ;;  noo_send_for    1    1[COMMON] unsigned char 
  2304 ;;  data            1    2[COMMON] PTR unsigned char 
  2305 ;;		 -> noo_send_data(4), 
  2306 ;; Auto vars:     Size  Location     Type
  2307 ;;  chn             1   14[BANK0 ] unsigned char 
  2308 ;;  noo_send_buf   12    0[BANK0 ] unsigned char [12]
  2309 ;;  endpos          1   17[BANK0 ] unsigned char 
  2310 ;;  temp_send       1   16[BANK0 ] unsigned char 
  2311 ;;  countsend       1   15[BANK0 ] unsigned char 
  2312 ;;  countbit        1   13[BANK0 ] unsigned char 
  2313 ;;  startpos        1   12[BANK0 ] unsigned char 
  2314 ;; Return value:  Size  Location     Type
  2315 ;;                  1    wreg      void 
  2316 ;; Registers used:
  2317 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2318 ;; Tracked objects:
  2319 ;;		On entry : 1F/0
  2320 ;;		On exit  : 1F/2
  2321 ;;		Unchanged: 0/0
  2322 ;; Data sizes:     COMMON   BANK0   BANK1
  2323 ;;      Params:         3       0       0
  2324 ;;      Locals:         0      18       0
  2325 ;;      Temps:          8       0       0
  2326 ;;      Totals:        11      18       0
  2327 ;;Total ram usage:       29 bytes
  2328 ;; Hardware stack levels used:    1
  2329 ;; This function calls:
  2330 ;;		Nothing
  2331 ;; This function is called by:
  2332 ;;		_main
  2333 ;; This function uses a non-reentrant model
  2334 ;;
  2335                           
  2336                           
  2337                           ;psect for function _noolite_send
  2338  025A                     _noolite_send:	
  2339                           
  2340                           ;incstack = 0
  2341                           ; Regs used in _noolite_send: [wreg+fsr1l+fsr1h+status,2+status,0]
  2342                           ;noolite_send@chn stored from wreg
  2343  025A  00D1               	movwf	noolite_send@chn
  2344                           
  2345                           ;noolite.c: 175: tx_status = (TMR2 & 0x80) >> 7;
  2346  025B  081A               	movf	26,w	;volatile
  2347  025C  00F3               	movwf	??_noolite_send
  2348  025D  3007               	movlw	7
  2349  025E                     u975:	
  2350  025E  36F3               	lsrf	??_noolite_send,f
  2351  025F  0B89               	decfsz	9,f
  2352  0260  2A5E               	goto	u975
  2353  0261  0873               	movf	??_noolite_send,w
  2354  0262  00FD               	movwf	_tx_status
  2355  0263  3001               	movlw	1
  2356  0264  05FD               	andwf	_tx_status,f
  2357  0265  0064               	clrwdt	;# 
  2358                           
  2359                           ;noolite.c: 186: tx_status ^= (1<<1);
  2360  0266  3002               	movlw	2
  2361  0267  06FD               	xorwf	_tx_status,f
  2362                           
  2363                           ;noolite.c: 189: if (noo_send_command < 16) {
  2364  0268  3010               	movlw	16
  2365  0269  0270               	subwf	noolite_send@noo_send_command,w
  2366  026A  1803               	skipnc
  2367  026B  2A79               	goto	l1598
  2368                           
  2369                           ;noolite.c: 190: startpos = 10;
  2370  026C  300A               	movlw	10
  2371  026D  0020               	movlb	0	; select bank0
  2372  026E  00CF               	movwf	noolite_send@startpos
  2373                           
  2374                           ;noolite.c: 191: noo_send_buffer[1] = (noo_send_command << 4) | (1 << 2);
  2375  026F  0E70               	swapf	noolite_send@noo_send_command,w
  2376  0270  39F0               	andlw	240
  2377  0271  3804               	iorlw	4
  2378  0272  00C4               	movwf	noolite_send@noo_send_buffer+1
  2379                           
  2380                           ;noolite.c: 192: if (((tx_status & (1<<1)) != 0)) {
  2381  0273  1CFD               	btfss	_tx_status,1
  2382  0274  2A77               	goto	l266
  2383                           
  2384                           ;noolite.c: 193: noo_send_buffer[1] |= (1<<3);
  2385  0275  15C4               	bsf	noolite_send@noo_send_buffer+1,3
  2386                           
  2387                           ;noolite.c: 194: } else {
  2388  0276  2A86               	goto	l268
  2389  0277                     l266:	
  2390                           
  2391                           ;noolite.c: 195: noo_send_buffer[1] &= (~(1<<3));
  2392  0277  11C4               	bcf	noolite_send@noo_send_buffer+1,3
  2393  0278  2A86               	goto	l268
  2394  0279                     l1598:	
  2395                           
  2396                           ;noolite.c: 198: startpos = 6;
  2397  0279  3006               	movlw	6
  2398  027A  0020               	movlb	0	; select bank0
  2399  027B  00CF               	movwf	noolite_send@startpos
  2400                           
  2401                           ;noolite.c: 199: noo_send_buffer[0] = (1 << 6);
  2402  027C  3040               	movlw	64
  2403  027D  00C3               	movwf	noolite_send@noo_send_buffer
  2404                           
  2405                           ;noolite.c: 200: if (((tx_status & (1<<1)) != 0)) {
  2406  027E  1CFD               	btfss	_tx_status,1
  2407  027F  2A82               	goto	l269
  2408                           
  2409                           ;noolite.c: 201: noo_send_buffer[0] |= (1<<7);
  2410  0280  17C3               	bsf	noolite_send@noo_send_buffer,7
  2411                           
  2412                           ;noolite.c: 202: } else {
  2413  0281  2A83               	goto	l1604
  2414  0282                     l269:	
  2415                           
  2416                           ;noolite.c: 203: noo_send_buffer[0] &= (~(1<<7));
  2417  0282  13C3               	bcf	noolite_send@noo_send_buffer,7
  2418  0283                     l1604:	
  2419                           
  2420                           ;noolite.c: 204: };
  2421                           ;noolite.c: 205: noo_send_buffer[1] = noo_send_command;
  2422  0283  0870               	movf	noolite_send@noo_send_command,w
  2423  0284  00C4               	movwf	noolite_send@noo_send_buffer+1
  2424                           
  2425                           ;noolite.c: 206: noo_send_format = noo_send_format | 4;
  2426  0285  1571               	bsf	noolite_send@noo_send_format,2
  2427  0286                     l268:	
  2428                           
  2429                           ;noolite.c: 207: }
  2430                           ;noolite.c: 208: endpos = 2;
  2431  0286  3002               	movlw	2
  2432  0287  00D4               	movwf	noolite_send@endpos
  2433                           
  2434                           ;noolite.c: 209: temp_send = noo_send_format & 3;
  2435  0288  0871               	movf	noolite_send@noo_send_format,w
  2436  0289  00D3               	movwf	noolite_send@temp_send
  2437  028A  3003               	movlw	3
  2438  028B  05D3               	andwf	noolite_send@temp_send,f
  2439                           
  2440                           ;noolite.c: 210: if (temp_send == 1) {
  2441  028C  0B53               	decfsz	noolite_send@temp_send,w
  2442  028D  2A95               	goto	l1616
  2443                           
  2444                           ;noolite.c: 212: noo_send_buffer[2] = data[0];
  2445  028E  0872               	movf	noolite_send@data,w
  2446  028F  0086               	movwf	6
  2447  0290  0187               	clrf	7
  2448  0291  0801               	movf	1,w
  2449  0292  00C5               	movwf	noolite_send@noo_send_buffer+2
  2450                           
  2451                           ;noolite.c: 213: endpos++;
  2452  0293  0AD4               	incf	noolite_send@endpos,f
  2453                           
  2454                           ;noolite.c: 214: } else if (temp_send == 3) {
  2455  0294  2AAC               	goto	l1622
  2456  0295                     l1616:	
  2457  0295  3003               	movlw	3
  2458  0296  0653               	xorwf	noolite_send@temp_send,w
  2459  0297  1D03               	btfss	3,2
  2460  0298  2AAC               	goto	l1622
  2461                           
  2462                           ;noolite.c: 219: noo_send_buffer[2] = data[0];
  2463  0299  0872               	movf	noolite_send@data,w
  2464  029A  0086               	movwf	6
  2465  029B  0187               	clrf	7
  2466  029C  0801               	movf	1,w
  2467  029D  00C5               	movwf	noolite_send@noo_send_buffer+2
  2468                           
  2469                           ;noolite.c: 220: noo_send_buffer[3] = data[1];
  2470  029E  0872               	movf	noolite_send@data,w
  2471  029F  0086               	movwf	6
  2472  02A0  3F41               	moviw [1]fsr1
  2473  02A1  00C6               	movwf	noolite_send@noo_send_buffer+3
  2474                           
  2475                           ;noolite.c: 221: noo_send_buffer[4] = data[2];
  2476  02A2  0872               	movf	noolite_send@data,w
  2477  02A3  0086               	movwf	6
  2478  02A4  3F42               	moviw [2]fsr1
  2479  02A5  00C7               	movwf	noolite_send@noo_send_buffer+4
  2480                           
  2481                           ;noolite.c: 222: noo_send_buffer[5] = data[3];
  2482  02A6  0872               	movf	noolite_send@data,w
  2483  02A7  0086               	movwf	6
  2484  02A8  3F43               	moviw [3]fsr1
  2485  02A9  00C8               	movwf	noolite_send@noo_send_buffer+5
  2486                           
  2487                           ;noolite.c: 223: endpos += 4;
  2488  02AA  3004               	movlw	4
  2489  02AB  07D4               	addwf	noolite_send@endpos,f
  2490  02AC                     l1622:	
  2491                           
  2492                           ;noolite.c: 224: }
  2493                           ;noolite.c: 225: if (noo_address_type != 0) {
  2494  02AC  0838               	movf	_noo_address_type,w
  2495  02AD  1903               	btfsc	3,2
  2496  02AE  2B16               	goto	l1638
  2497                           
  2498                           ;noolite.c: 226: noo_send_format = noo_send_format | 0x10;
  2499  02AF  1671               	bsf	noolite_send@noo_send_format,4
  2500                           
  2501                           ;noolite.c: 227: noo_send_buffer[endpos] = (unsigned char) (startaddress + chn);
  2502  02B0  0854               	movf	noolite_send@endpos,w
  2503  02B1  3E43               	addlw	(low (noolite_send@noo_send_buffer| 0))& (0+255)
  2504  02B2  0086               	movwf	6
  2505  02B3  0187               	clrf	7
  2506  02B4  0851               	movf	noolite_send@chn,w
  2507  02B5  0734               	addwf	_startaddress,w
  2508  02B6  0081               	movwf	1
  2509                           
  2510                           ;noolite.c: 228: endpos++;
  2511  02B7  0AD4               	incf	noolite_send@endpos,f
  2512                           
  2513                           ;noolite.c: 229: noo_send_buffer[endpos] = (unsigned char) ((startaddress + chn) >> 8);
  2514  02B8  0854               	movf	noolite_send@endpos,w
  2515  02B9  3E43               	addlw	(low (noolite_send@noo_send_buffer| 0))& (0+255)
  2516  02BA  0086               	movwf	6
  2517  02BB  0834               	movf	_startaddress,w
  2518  02BC  00F3               	movwf	??_noolite_send
  2519  02BD  0835               	movf	_startaddress+1,w
  2520  02BE  00F4               	movwf	??_noolite_send+1
  2521  02BF  0836               	movf	_startaddress+2,w
  2522  02C0  00F5               	movwf	??_noolite_send+2
  2523  02C1  0837               	movf	_startaddress+3,w
  2524  02C2  00F6               	movwf	??_noolite_send+3
  2525  02C3  0851               	movf	noolite_send@chn,w
  2526  02C4  00F7               	movwf	??_noolite_send+4
  2527  02C5  01F8               	clrf	??_noolite_send+5
  2528  02C6  01F9               	clrf	??_noolite_send+6
  2529  02C7  01FA               	clrf	??_noolite_send+7
  2530  02C8  07F3               	addwf	??_noolite_send,f
  2531  02C9  0878               	movf	??_noolite_send+5,w
  2532  02CA  3DF4               	addwfc	??_noolite_send+1,f
  2533  02CB  0879               	movf	??_noolite_send+6,w
  2534  02CC  3DF5               	addwfc	??_noolite_send+2,f
  2535  02CD  087A               	movf	??_noolite_send+7,w
  2536  02CE  3DF6               	addwfc	??_noolite_send+3,f
  2537  02CF  0874               	movf	??_noolite_send+1,w
  2538  02D0  00F3               	movwf	??_noolite_send
  2539  02D1  0875               	movf	??_noolite_send+2,w
  2540  02D2  00F4               	movwf	??_noolite_send+1
  2541  02D3  0876               	movf	??_noolite_send+3,w
  2542  02D4  00F5               	movwf	??_noolite_send+2
  2543  02D5  01F6               	clrf	??_noolite_send+3
  2544  02D6  0873               	movf	??_noolite_send,w
  2545  02D7  0081               	movwf	1
  2546                           
  2547                           ;noolite.c: 230: endpos++;
  2548  02D8  0AD4               	incf	noolite_send@endpos,f
  2549                           
  2550                           ;noolite.c: 231: noo_send_buffer[endpos] = (unsigned char) ((startaddress + chn) >> 16);
  2551  02D9  0854               	movf	noolite_send@endpos,w
  2552  02DA  3E43               	addlw	(low (noolite_send@noo_send_buffer| 0))& (0+255)
  2553  02DB  0086               	movwf	6
  2554  02DC  0834               	movf	_startaddress,w
  2555  02DD  00F3               	movwf	??_noolite_send
  2556  02DE  0835               	movf	_startaddress+1,w
  2557  02DF  00F4               	movwf	??_noolite_send+1
  2558  02E0  0836               	movf	_startaddress+2,w
  2559  02E1  00F5               	movwf	??_noolite_send+2
  2560  02E2  0837               	movf	_startaddress+3,w
  2561  02E3  00F6               	movwf	??_noolite_send+3
  2562  02E4  0851               	movf	noolite_send@chn,w
  2563  02E5  00F7               	movwf	??_noolite_send+4
  2564  02E6  01F8               	clrf	??_noolite_send+5
  2565  02E7  01F9               	clrf	??_noolite_send+6
  2566  02E8  01FA               	clrf	??_noolite_send+7
  2567  02E9  07F3               	addwf	??_noolite_send,f
  2568  02EA  0878               	movf	??_noolite_send+5,w
  2569  02EB  3DF4               	addwfc	??_noolite_send+1,f
  2570  02EC  0879               	movf	??_noolite_send+6,w
  2571  02ED  3DF5               	addwfc	??_noolite_send+2,f
  2572  02EE  087A               	movf	??_noolite_send+7,w
  2573  02EF  3DF6               	addwfc	??_noolite_send+3,f
  2574  02F0  0875               	movf	??_noolite_send+2,w
  2575  02F1  00F3               	movwf	??_noolite_send
  2576  02F2  0876               	movf	??_noolite_send+3,w
  2577  02F3  00F4               	movwf	??_noolite_send+1
  2578  02F4  01F5               	clrf	??_noolite_send+2
  2579  02F5  01F6               	clrf	??_noolite_send+3
  2580  02F6  0873               	movf	??_noolite_send,w
  2581  02F7  0081               	movwf	1
  2582                           
  2583                           ;noolite.c: 232: endpos++;
  2584  02F8  0AD4               	incf	noolite_send@endpos,f
  2585                           
  2586                           ;noolite.c: 233: noo_send_buffer[endpos] = (unsigned char) ((startaddress + chn) >> 24);
  2587  02F9  0854               	movf	noolite_send@endpos,w
  2588  02FA  3E43               	addlw	(low (noolite_send@noo_send_buffer| 0))& (0+255)
  2589  02FB  0086               	movwf	6
  2590  02FC  0834               	movf	_startaddress,w
  2591  02FD  00F3               	movwf	??_noolite_send
  2592  02FE  0835               	movf	_startaddress+1,w
  2593  02FF  00F4               	movwf	??_noolite_send+1
  2594  0300  0836               	movf	_startaddress+2,w
  2595  0301  00F5               	movwf	??_noolite_send+2
  2596  0302  0837               	movf	_startaddress+3,w
  2597  0303  00F6               	movwf	??_noolite_send+3
  2598  0304  0851               	movf	noolite_send@chn,w
  2599  0305  00F7               	movwf	??_noolite_send+4
  2600  0306  01F8               	clrf	??_noolite_send+5
  2601  0307  01F9               	clrf	??_noolite_send+6
  2602  0308  01FA               	clrf	??_noolite_send+7
  2603  0309  07F3               	addwf	??_noolite_send,f
  2604  030A  0878               	movf	??_noolite_send+5,w
  2605  030B  3DF4               	addwfc	??_noolite_send+1,f
  2606  030C  0879               	movf	??_noolite_send+6,w
  2607  030D  3DF5               	addwfc	??_noolite_send+2,f
  2608  030E  087A               	movf	??_noolite_send+7,w
  2609  030F  3DF6               	addwfc	??_noolite_send+3,f
  2610  0310  0876               	movf	??_noolite_send+3,w
  2611  0311  00F3               	movwf	??_noolite_send
  2612  0312  01F4               	clrf	??_noolite_send+1
  2613  0313  01F5               	clrf	??_noolite_send+2
  2614  0314  01F6               	clrf	??_noolite_send+3
  2615  0315  2B3D               	goto	L9
  2616  0316                     l1638:	
  2617                           ;noolite.c: 235: } else {
  2618                           
  2619                           ;noolite.c: 234: endpos++;
  2620                           
  2621                           
  2622                           ;noolite.c: 236: noo_send_buffer[endpos] = (unsigned char) (startaddress + chn);
  2623  0316  0854               	movf	noolite_send@endpos,w
  2624  0317  3E43               	addlw	(low (noolite_send@noo_send_buffer| 0))& (0+255)
  2625  0318  0086               	movwf	6
  2626  0319  0187               	clrf	7
  2627  031A  0851               	movf	noolite_send@chn,w
  2628  031B  0734               	addwf	_startaddress,w
  2629  031C  0081               	movwf	1
  2630                           
  2631                           ;noolite.c: 237: endpos++;
  2632  031D  0AD4               	incf	noolite_send@endpos,f
  2633                           
  2634                           ;noolite.c: 238: noo_send_buffer[endpos] = (unsigned char) ((startaddress + chn) >> 8);
  2635  031E  0854               	movf	noolite_send@endpos,w
  2636  031F  3E43               	addlw	(low (noolite_send@noo_send_buffer| 0))& (0+255)
  2637  0320  0086               	movwf	6
  2638  0321  0834               	movf	_startaddress,w
  2639  0322  00F3               	movwf	??_noolite_send
  2640  0323  0835               	movf	_startaddress+1,w
  2641  0324  00F4               	movwf	??_noolite_send+1
  2642  0325  0836               	movf	_startaddress+2,w
  2643  0326  00F5               	movwf	??_noolite_send+2
  2644  0327  0837               	movf	_startaddress+3,w
  2645  0328  00F6               	movwf	??_noolite_send+3
  2646  0329  0851               	movf	noolite_send@chn,w
  2647  032A  00F7               	movwf	??_noolite_send+4
  2648  032B  01F8               	clrf	??_noolite_send+5
  2649  032C  01F9               	clrf	??_noolite_send+6
  2650  032D  01FA               	clrf	??_noolite_send+7
  2651  032E  07F3               	addwf	??_noolite_send,f
  2652  032F  0878               	movf	??_noolite_send+5,w
  2653  0330  3DF4               	addwfc	??_noolite_send+1,f
  2654  0331  0879               	movf	??_noolite_send+6,w
  2655  0332  3DF5               	addwfc	??_noolite_send+2,f
  2656  0333  087A               	movf	??_noolite_send+7,w
  2657  0334  3DF6               	addwfc	??_noolite_send+3,f
  2658  0335  0874               	movf	??_noolite_send+1,w
  2659  0336  00F3               	movwf	??_noolite_send
  2660  0337  0875               	movf	??_noolite_send+2,w
  2661  0338  00F4               	movwf	??_noolite_send+1
  2662  0339  0876               	movf	??_noolite_send+3,w
  2663  033A  00F5               	movwf	??_noolite_send+2
  2664  033B  01F6               	clrf	??_noolite_send+3
  2665  033C  0873               	movf	??_noolite_send,w
  2666  033D                     L9:	
  2667  033D  0081               	movwf	1
  2668                           
  2669                           ;noolite.c: 239: endpos++;
  2670  033E  0AD4               	incf	noolite_send@endpos,f
  2671                           
  2672                           ;noolite.c: 240: }
  2673                           ;noolite.c: 241: noo_send_buffer[endpos] = noo_send_format;
  2674  033F  0854               	movf	noolite_send@endpos,w
  2675  0340  3E43               	addlw	(low (noolite_send@noo_send_buffer| 0))& (0+255)
  2676  0341  0086               	movwf	6
  2677  0342  0187               	clrf	7
  2678  0343  0871               	movf	noolite_send@noo_send_format,w
  2679  0344  0081               	movwf	1
  2680                           
  2681                           ;noolite.c: 242: endpos++;
  2682  0345  0AD4               	incf	noolite_send@endpos,f
  2683                           
  2684                           ;noolite.c: 243: temp_send = 0;
  2685  0346  01D3               	clrf	noolite_send@temp_send
  2686                           
  2687                           ;noolite.c: 244: countbit = (unsigned char) (endpos * 8);
  2688  0347  0854               	movf	noolite_send@endpos,w
  2689  0348  0709               	addwf	9,w
  2690  0349  0709               	addwf	9,w
  2691  034A  0709               	addwf	9,w
  2692  034B  00D0               	movwf	noolite_send@countbit
  2693                           
  2694                           ;noolite.c: 245: countsend = startpos + 1;
  2695  034C  084F               	movf	noolite_send@startpos,w
  2696  034D  3E01               	addlw	1
  2697  034E  00D2               	movwf	noolite_send@countsend
  2698  034F                     l1676:	
  2699                           ;noolite.c: 246: while (countsend < countbit) {
  2700                           
  2701  034F  0020               	movlb	0	; select bank0
  2702  0350  0850               	movf	noolite_send@countbit,w
  2703  0351  0252               	subwf	noolite_send@countsend,w
  2704  0352  1803               	btfsc	3,0
  2705  0353  2B79               	goto	l1678
  2706                           
  2707                           ;noolite.c: 247: if (((noo_send_buffer[(countsend / 8)] & (1<<(countsend % 8))) != 0)) {
  2708  0354  0852               	movf	noolite_send@countsend,w
  2709  0355  00F3               	movwf	??_noolite_send
  2710  0356  36F3               	lsrf	??_noolite_send,f
  2711  0357  36F3               	lsrf	??_noolite_send,f
  2712  0358  36F3               	lsrf	??_noolite_send,f
  2713  0359  0873               	movf	??_noolite_send,w
  2714  035A  3E43               	addlw	(low (noolite_send@noo_send_buffer| 0))& (0+255)
  2715  035B  0086               	movwf	6
  2716  035C  3001               	movlw	1
  2717  035D  0187               	clrf	7
  2718  035E  00F4               	movwf	??_noolite_send+1
  2719  035F  0852               	movf	noolite_send@countsend,w
  2720  0360  3907               	andlw	7
  2721  0361  0A89               	incf	9,f
  2722  0362  2B64               	goto	u1044
  2723  0363                     u1045:	
  2724  0363  35F4               	lslf	??_noolite_send+1,f
  2725  0364                     u1044:	
  2726  0364  0B89               	decfsz	9,f
  2727  0365  2B63               	goto	u1045
  2728  0366  0874               	movf	??_noolite_send+1,w
  2729  0367  0501               	andwf	1,w
  2730  0368  1903               	btfsc	3,2
  2731  0369  2B6C               	goto	l1658
  2732                           
  2733                           ;noolite.c: 248: temp_send = temp_send^0x01;
  2734  036A  3001               	movlw	1
  2735  036B  06D3               	xorwf	noolite_send@temp_send,f
  2736  036C                     l1658:	
  2737                           
  2738                           ;noolite.c: 249: }
  2739                           ;noolite.c: 250: tx_status &= (~(1<<4));
  2740  036C  127D               	bcf	_tx_status,4
  2741                           
  2742                           ;noolite.c: 251: if (((temp_send & (1<<0)) != 0)) {
  2743  036D  1C53               	btfss	noolite_send@temp_send,0
  2744  036E  2B72               	goto	l1666
  2745                           
  2746                           ;noolite.c: 252: temp_send = temp_send^0x18;
  2747  036F  3018               	movlw	24
  2748  0370  06D3               	xorwf	noolite_send@temp_send,f
  2749                           
  2750                           ;noolite.c: 253: tx_status |= (1<<4);
  2751  0371  167D               	bsf	_tx_status,4
  2752  0372                     l1666:	
  2753                           
  2754                           ;noolite.c: 254: }
  2755                           ;noolite.c: 255: temp_send = temp_send >> 1;
  2756  0372  36D3               	lsrf	noolite_send@temp_send,f
  2757                           
  2758                           ;noolite.c: 256: temp_send &= (~(1<<7));
  2759  0373  13D3               	bcf	noolite_send@temp_send,7
  2760                           
  2761                           ;noolite.c: 257: if (((tx_status & (1<<4)) != 0)) {
  2762  0374  1A7D               	btfsc	_tx_status,4
  2763                           
  2764                           ;noolite.c: 258: temp_send |= (1<<7);
  2765  0375  17D3               	bsf	noolite_send@temp_send,7
  2766                           
  2767                           ;noolite.c: 259: }
  2768                           ;noolite.c: 260: countsend++;
  2769  0376  0AD2               	incf	noolite_send@countsend,f
  2770  0377  0064               	clrwdt	;# 
  2771  0378  2B4F               	goto	l1676
  2772  0379                     l1678:	
  2773                           
  2774                           ;noolite.c: 262: }
  2775                           ;noolite.c: 263: noo_send_buffer[endpos] = temp_send;
  2776  0379  0854               	movf	noolite_send@endpos,w
  2777  037A  3E43               	addlw	(low (noolite_send@noo_send_buffer| 0))& (0+255)
  2778  037B  0086               	movwf	6
  2779  037C  0187               	clrf	7
  2780  037D  0853               	movf	noolite_send@temp_send,w
  2781  037E  0081               	movwf	1
  2782  037F  30C0               	movlw	192
  2783                           
  2784                           ;noolite.c: 264: endpos++;
  2785  0380  0AD4               	incf	noolite_send@endpos,f
  2786                           
  2787                           ;noolite.c: 265: OPTION_REG &= 0b11000000; OPTION_REG |= 0b00000011;
  2788  0381  0021               	movlb	1	; select bank1
  2789  0382  0595               	andwf	21,f	;volatile
  2790  0383  3003               	movlw	3
  2791  0384  0495               	iorwf	21,f	;volatile
  2792                           
  2793                           ;noolite.c: 266: temp_send = 3;
  2794  0385  0020               	movlb	0	; select bank0
  2795  0386  00D3               	movwf	noolite_send@temp_send
  2796  0387  3026               	movlw	38
  2797                           
  2798                           ;noolite.c: 267: tx_status &= (~(1<<2));
  2799  0388  117D               	bcf	_tx_status,2
  2800                           
  2801                           ;noolite.c: 268: tx_status &= (~(1<<3));
  2802  0389  11FD               	bcf	_tx_status,3
  2803                           
  2804                           ;noolite.c: 269: tx_status |= (1<<0);
  2805  038A  147D               	bsf	_tx_status,0
  2806                           
  2807                           ;noolite.c: 270: tx_status |= (1<<5);
  2808  038B  16FD               	bsf	_tx_status,5
  2809                           
  2810                           ;noolite.c: 271: countsend = 0;
  2811  038C  01D2               	clrf	noolite_send@countsend
  2812                           
  2813                           ;noolite.c: 272: countbit = 38;
  2814  038D  00D0               	movwf	noolite_send@countbit
  2815  038E  0064               	clrwdt	;# 
  2816                           
  2817                           ;noolite.c: 274: LATCbits.LATC3 = 1;
  2818  038F  0022               	movlb	2	; select bank2
  2819  0390  158E               	bsf	14,3	;volatile
  2820                           
  2821                           ;noolite.c: 275: _delay((unsigned long)((15)*(8000000/4000.0)));
  2822  0391  3027               	movlw	39
  2823  0392  00F3               	movwf	??_noolite_send
  2824  0393  30F5               	movlw	245
  2825  0394                     u1937:	
  2826  0394  0B89               	decfsz	9,f
  2827  0395  2B94               	goto	u1937
  2828  0396  0BF3               	decfsz	??_noolite_send,f
  2829  0397  2B94               	goto	u1937
  2830  0398  0000               	nop
  2831                           
  2832                           ;noolite.c: 276: LATCbits.LATC3 = 0;
  2833  0399  0022               	movlb	2	; select bank2
  2834  039A  118E               	bcf	14,3	;volatile
  2835                           
  2836                           ;noolite.c: 277: TMR0 = 196;
  2837  039B  30C4               	movlw	196
  2838  039C  0020               	movlb	0	; select bank0
  2839  039D  0095               	movwf	21	;volatile
  2840                           
  2841                           ;noolite.c: 278: TMR0IF = 0;
  2842  039E  110B               	bcf	11,2	;volatile
  2843                           
  2844                           ;noolite.c: 279: TMR0IE = 0;
  2845  039F  128B               	bcf	11,5	;volatile
  2846  03A0                     l282:	
  2847                           ;noolite.c: 280: while (((tx_status & (1<<3)) == 0)) {
  2848                           
  2849  03A0  19FD               	btfsc	_tx_status,3
  2850  03A1  2BFA               	goto	l293
  2851                           
  2852                           ;noolite.c: 281: if (TMR0IF) {
  2853  03A2  1D0B               	btfss	11,2	;volatile
  2854  03A3  2BA0               	goto	l282
  2855                           
  2856                           ;noolite.c: 282: __nop();
  2857  03A4  0000               	nop
  2858                           
  2859                           ;noolite.c: 283: if (countsend < countbit) {
  2860  03A5  0020               	movlb	0	; select bank0
  2861  03A6  0850               	movf	noolite_send@countbit,w
  2862  03A7  0252               	subwf	noolite_send@countsend,w
  2863  03A8  1803               	skipnc
  2864  03A9  2BC1               	goto	l285
  2865                           
  2866                           ;noolite.c: 284: if (((tx_status & (1<<2)) == 0)) {
  2867  03AA  197D               	btfsc	_tx_status,2
  2868  03AB  2BB8               	goto	l1726
  2869                           
  2870                           ;noolite.c: 285: if (((tx_status & (1<<0)) == 0)) {
  2871  03AC  187D               	btfsc	_tx_status,0
  2872  03AD  2BB1               	goto	l287
  2873                           
  2874                           ;noolite.c: 286: LATAbits.LATA5 = 1;
  2875  03AE  0022               	movlb	2	; select bank2
  2876  03AF  168C               	bsf	12,5	;volatile
  2877                           
  2878                           ;noolite.c: 287: } else {
  2879  03B0  2BB3               	goto	l1722
  2880  03B1                     l287:	
  2881                           
  2882                           ;noolite.c: 288: LATAbits.LATA5 = 0;
  2883  03B1  0022               	movlb	2	; select bank2
  2884  03B2  128C               	bcf	12,5	;volatile
  2885  03B3                     l1722:	
  2886                           
  2887                           ;noolite.c: 289: }
  2888                           ;noolite.c: 290: TMR0 = 196;
  2889  03B3  30C4               	movlw	196
  2890  03B4  0020               	movlb	0	; select bank0
  2891  03B5  0095               	movwf	21	;volatile
  2892                           
  2893                           ;noolite.c: 291: tx_status |= (1<<2);
  2894  03B6  157D               	bsf	_tx_status,2
  2895                           
  2896                           ;noolite.c: 292: } else {
  2897  03B7  2BDD               	goto	l290
  2898  03B8                     l1726:	
  2899                           
  2900                           ;noolite.c: 293: LATA ^= (1<<5);
  2901  03B8  3020               	movlw	32
  2902  03B9  0022               	movlb	2	; select bank2
  2903  03BA  068C               	xorwf	12,f	;volatile
  2904                           
  2905                           ;noolite.c: 294: TMR0 = 196;
  2906  03BB  30C4               	movlw	196
  2907  03BC  0020               	movlb	0	; select bank0
  2908  03BD  0095               	movwf	21	;volatile
  2909                           
  2910                           ;noolite.c: 295: tx_status &= (~(1<<2));
  2911  03BE  117D               	bcf	_tx_status,2
  2912                           
  2913                           ;noolite.c: 296: countsend++;
  2914  03BF  0AD2               	incf	noolite_send@countsend,f
  2915  03C0  2BDD               	goto	l290
  2916  03C1                     l285:	
  2917                           
  2918                           ;noolite.c: 299: LATAbits.LATA5 = 0;
  2919  03C1  0022               	movlb	2	; select bank2
  2920  03C2  128C               	bcf	12,5	;volatile
  2921                           
  2922                           ;noolite.c: 300: OPTION_REG &= 0b11000000; OPTION_REG |= 0b00000011;
  2923  03C3  30C0               	movlw	192
  2924  03C4  0021               	movlb	1	; select bank1
  2925  03C5  0595               	andwf	21,f	;volatile
  2926  03C6  3003               	movlw	3
  2927  03C7  0495               	iorwf	21,f	;volatile
  2928                           
  2929                           ;noolite.c: 301: TMR0 = 67;
  2930  03C8  3043               	movlw	67
  2931  03C9  0020               	movlb	0	; select bank0
  2932  03CA  0095               	movwf	21	;volatile
  2933  03CB  0064               	clrwdt	;# 
  2934                           
  2935                           ;noolite.c: 303: tx_status &= (~(1<<5));
  2936  03CC  12FD               	bcf	_tx_status,5
  2937                           
  2938                           ;noolite.c: 304: countsend = startpos;
  2939  03CD  0020               	movlb	0	; select bank0
  2940  03CE  084F               	movf	noolite_send@startpos,w
  2941  03CF  00D2               	movwf	noolite_send@countsend
  2942                           
  2943                           ;noolite.c: 305: countbit = endpos * 8;
  2944  03D0  0854               	movf	noolite_send@endpos,w
  2945  03D1  0709               	addwf	9,w
  2946  03D2  0709               	addwf	9,w
  2947  03D3  0709               	addwf	9,w
  2948  03D4  00D0               	movwf	noolite_send@countbit
  2949                           
  2950                           ;noolite.c: 306: if (temp_send != 0) {
  2951  03D5  0853               	movf	noolite_send@temp_send,w
  2952  03D6  1903               	btfsc	3,2
  2953  03D7  2BDA               	goto	l1742
  2954                           
  2955                           ;noolite.c: 307: temp_send--;
  2956  03D8  03D3               	decf	noolite_send@temp_send,f
  2957                           
  2958                           ;noolite.c: 308: } else {
  2959  03D9  2BDD               	goto	l290
  2960  03DA                     l1742:	
  2961                           
  2962                           ;noolite.c: 309: TMR0 = 0;
  2963  03DA  0195               	clrf	21	;volatile
  2964                           
  2965                           ;noolite.c: 310: tx_status |= (1<<3);
  2966  03DB  15FD               	bsf	_tx_status,3
  2967                           
  2968                           ;noolite.c: 311: break;
  2969  03DC  2BFA               	goto	l293
  2970  03DD                     l290:	
  2971                           
  2972                           ;noolite.c: 312: }
  2973                           ;noolite.c: 313: }
  2974                           ;noolite.c: 314: if (((tx_status & (1<<5)) == 0)) {
  2975  03DD  1AFD               	btfsc	_tx_status,5
  2976  03DE  2BF8               	goto	l294
  2977                           
  2978                           ;noolite.c: 315: if (((noo_send_buffer[(countsend / 8)] & (1<<(countsend % 8))) != 0)) {
  2979  03DF  0852               	movf	noolite_send@countsend,w
  2980  03E0  00F3               	movwf	??_noolite_send
  2981  03E1  36F3               	lsrf	??_noolite_send,f
  2982  03E2  36F3               	lsrf	??_noolite_send,f
  2983  03E3  36F3               	lsrf	??_noolite_send,f
  2984  03E4  0873               	movf	??_noolite_send,w
  2985  03E5  3E43               	addlw	(low (noolite_send@noo_send_buffer| 0))& (0+255)
  2986  03E6  0086               	movwf	6
  2987  03E7  3001               	movlw	1
  2988  03E8  0187               	clrf	7
  2989  03E9  00F4               	movwf	??_noolite_send+1
  2990  03EA  0852               	movf	noolite_send@countsend,w
  2991  03EB  3907               	andlw	7
  2992  03EC  0A89               	incf	9,f
  2993  03ED  2BEF               	goto	u1154
  2994  03EE                     u1155:	
  2995  03EE  35F4               	lslf	??_noolite_send+1,f
  2996  03EF                     u1154:	
  2997  03EF  0B89               	decfsz	9,f
  2998  03F0  2BEE               	goto	u1155
  2999  03F1  0874               	movf	??_noolite_send+1,w
  3000  03F2  0501               	andwf	1,w
  3001  03F3  1903               	btfsc	3,2
  3002  03F4  2BF7               	goto	l295
  3003                           
  3004                           ;noolite.c: 316: tx_status |= (1<<0);
  3005  03F5  147D               	bsf	_tx_status,0
  3006                           
  3007                           ;noolite.c: 317: } else {
  3008  03F6  2BF8               	goto	l294
  3009  03F7                     l295:	
  3010                           
  3011                           ;noolite.c: 318: tx_status &= (~(1<<0));
  3012  03F7  107D               	bcf	_tx_status,0
  3013  03F8                     l294:	
  3014                           
  3015                           ;noolite.c: 319: }
  3016                           ;noolite.c: 320: }
  3017                           ;noolite.c: 321: TMR0IF = 0;
  3018  03F8  110B               	bcf	11,2	;volatile
  3019  03F9  2BA0               	goto	l282
  3020  03FA                     l293:	
  3021                           
  3022                           ;noolite.c: 322: }
  3023                           ;noolite.c: 323: }
  3024                           ;noolite.c: 324: TMR0IF = 0;
  3025  03FA  110B               	bcf	11,2	;volatile
  3026                           
  3027                           ;noolite.c: 325: LATAbits.LATA5 = 0;
  3028  03FB  0022               	movlb	2	; select bank2
  3029  03FC  128C               	bcf	12,5	;volatile
  3030  03FD  0008               	return
  3031  03FE                     __end_of_noolite_send:	
  3032                           
  3033                           	psect	text2
  3034  01CF                     __ptext2:	
  3035 ;; *************** function _RF_Init *****************
  3036 ;; Defined at:
  3037 ;;		line 25 in file "noolite.c"
  3038 ;; Parameters:    Size  Location     Type
  3039 ;;		None
  3040 ;; Auto vars:     Size  Location     Type
  3041 ;;		None
  3042 ;; Return value:  Size  Location     Type
  3043 ;;                  1    wreg      void 
  3044 ;; Registers used:
  3045 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3046 ;; Tracked objects:
  3047 ;;		On entry : B1F/1
  3048 ;;		On exit  : 0/0
  3049 ;;		Unchanged: 0/0
  3050 ;; Data sizes:     COMMON   BANK0   BANK1
  3051 ;;      Params:         0       0       0
  3052 ;;      Locals:         0       0       0
  3053 ;;      Temps:          7       0       0
  3054 ;;      Totals:         7       0       0
  3055 ;;Total ram usage:        7 bytes
  3056 ;; Hardware stack levels used:    1
  3057 ;; This function calls:
  3058 ;;		Nothing
  3059 ;; This function is called by:
  3060 ;;		_main
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064                           
  3065                           ;psect for function _RF_Init
  3066  01CF                     _RF_Init:	
  3067                           
  3068                           ;noolite.c: 27: startaddress = 0;
  3069                           
  3070                           ;incstack = 0
  3071                           ; Regs used in _RF_Init: [wreg-fsr0h+status,2+status,0+pclath]
  3072  01CF  0020               	movlb	0	; select bank0
  3073  01D0  30F3               	movlw	243
  3074  01D1  01B4               	clrf	_startaddress
  3075  01D2  01B5               	clrf	_startaddress+1
  3076  01D3  01B6               	clrf	_startaddress+2
  3077  01D4  01B7               	clrf	_startaddress+3
  3078                           
  3079                           ;noolite.c: 28: startaddress |= ((unsigned int) system_settings[5]) << 8;
  3080  01D5  0084               	movwf	4
  3081  01D6  3087               	movlw	135
  3082  01D7  0085               	movwf	5
  3083  01D8  0800               	movf	0,w	;code access
  3084  01D9  00F0               	movwf	??_RF_Init
  3085  01DA  01F1               	clrf	??_RF_Init+1
  3086  01DB  00F1               	movwf	??_RF_Init+1
  3087  01DC  01F0               	clrf	??_RF_Init
  3088  01DD  0870               	movf	??_RF_Init,w
  3089  01DE  00F3               	movwf	??_RF_Init+3
  3090  01DF  0871               	movf	??_RF_Init+1,w
  3091  01E0  00F4               	movwf	??_RF_Init+4
  3092  01E1  01F5               	clrf	??_RF_Init+5
  3093  01E2  01F6               	clrf	??_RF_Init+6
  3094  01E3  0873               	movf	??_RF_Init+3,w
  3095  01E4  04B4               	iorwf	_startaddress,f
  3096  01E5  0874               	movf	??_RF_Init+4,w
  3097  01E6  04B5               	iorwf	_startaddress+1,f
  3098  01E7  0875               	movf	??_RF_Init+5,w
  3099  01E8  04B6               	iorwf	_startaddress+2,f
  3100  01E9  0876               	movf	??_RF_Init+6,w
  3101  01EA  04B7               	iorwf	_startaddress+3,f
  3102                           
  3103                           ;noolite.c: 29: startaddress |= system_settings[4];
  3104  01EB  30F2               	movlw	242
  3105  01EC  0084               	movwf	4
  3106  01ED  0800               	movf	0,w	;code access
  3107  01EE  00F0               	movwf	??_RF_Init
  3108  01EF  01F1               	clrf	??_RF_Init+1
  3109  01F0  01F2               	clrf	??_RF_Init+2
  3110  01F1  01F3               	clrf	??_RF_Init+3
  3111  01F2  04B4               	iorwf	_startaddress,f
  3112  01F3  0871               	movf	??_RF_Init+1,w
  3113  01F4  04B5               	iorwf	_startaddress+1,f
  3114  01F5  0872               	movf	??_RF_Init+2,w
  3115  01F6  04B6               	iorwf	_startaddress+2,f
  3116  01F7  0873               	movf	??_RF_Init+3,w
  3117  01F8  04B7               	iorwf	_startaddress+3,f
  3118                           
  3119                           ;noolite.c: 30: if ((startaddress != 0) && (startaddress != 0xFFFF)) {
  3120  01F9  0837               	movf	_startaddress+3,w
  3121  01FA  0436               	iorwf	_startaddress+2,w
  3122  01FB  0435               	iorwf	_startaddress+1,w
  3123  01FC  0434               	iorwf	_startaddress,w
  3124  01FD  1903               	skipnz
  3125  01FE  2A08               	goto	l260
  3126  01FF  0F34               	incfsz	_startaddress,w
  3127  0200  2A06               	goto	l1580
  3128  0201  0A35               	incf	_startaddress+1,w
  3129  0202  0436               	iorwf	_startaddress+2,w
  3130  0203  0437               	iorwf	_startaddress+3,w
  3131  0204  1903               	btfsc	3,2
  3132  0205  2A08               	goto	l260
  3133  0206                     l1580:	
  3134                           
  3135                           ;noolite.c: 31: noo_address_type = 0;
  3136  0206  01B8               	clrf	_noo_address_type
  3137                           
  3138                           ;noolite.c: 32: } else {
  3139  0207  2A58               	goto	l261
  3140  0208                     l260:	
  3141  0208  30F9               	movlw	249
  3142                           
  3143                           ;noolite.c: 33: startaddress = 0;
  3144  0209  01B4               	clrf	_startaddress
  3145  020A  01B5               	clrf	_startaddress+1
  3146  020B  01B6               	clrf	_startaddress+2
  3147  020C  01B7               	clrf	_startaddress+3
  3148                           
  3149                           ;noolite.c: 34: startaddress |= ((unsigned long) system_settings[11]) << 24;
  3150  020D  0084               	movwf	4
  3151  020E  3087               	movlw	135
  3152  020F  0085               	movwf	5
  3153  0210  0800               	movf	0,w	;code access
  3154  0211  00F3               	movwf	??_RF_Init+3
  3155  0212  01F2               	clrf	??_RF_Init+2
  3156  0213  01F1               	clrf	??_RF_Init+1
  3157  0214  01F0               	clrf	??_RF_Init
  3158  0215  0870               	movf	??_RF_Init,w
  3159  0216  04B4               	iorwf	_startaddress,f
  3160  0217  0871               	movf	??_RF_Init+1,w
  3161  0218  04B5               	iorwf	_startaddress+1,f
  3162  0219  0872               	movf	??_RF_Init+2,w
  3163  021A  04B6               	iorwf	_startaddress+2,f
  3164  021B  0873               	movf	??_RF_Init+3,w
  3165  021C  04B7               	iorwf	_startaddress+3,f
  3166                           
  3167                           ;noolite.c: 35: startaddress |= ((unsigned long) system_settings[10]) << 16;
  3168  021D  30F8               	movlw	248
  3169  021E  0084               	movwf	4
  3170  021F  0800               	movf	0,w	;code access
  3171  0220  00F0               	movwf	??_RF_Init
  3172  0221  01F1               	clrf	??_RF_Init+1
  3173  0222  01F2               	clrf	??_RF_Init+2
  3174  0223  01F3               	clrf	??_RF_Init+3
  3175  0224  0871               	movf	??_RF_Init+1,w
  3176  0225  00F3               	movwf	??_RF_Init+3
  3177  0226  0870               	movf	??_RF_Init,w
  3178  0227  00F2               	movwf	??_RF_Init+2
  3179  0228  01F1               	clrf	??_RF_Init+1
  3180  0229  01F0               	clrf	??_RF_Init
  3181  022A  0870               	movf	??_RF_Init,w
  3182  022B  04B4               	iorwf	_startaddress,f
  3183  022C  0871               	movf	??_RF_Init+1,w
  3184  022D  04B5               	iorwf	_startaddress+1,f
  3185  022E  0872               	movf	??_RF_Init+2,w
  3186  022F  04B6               	iorwf	_startaddress+2,f
  3187  0230  0873               	movf	??_RF_Init+3,w
  3188  0231  04B7               	iorwf	_startaddress+3,f
  3189                           
  3190                           ;noolite.c: 36: startaddress |= ((unsigned long) system_settings[9]) << 8;
  3191  0232  30F7               	movlw	247
  3192  0233  0084               	movwf	4
  3193  0234  0800               	movf	0,w	;code access
  3194  0235  00F0               	movwf	??_RF_Init
  3195  0236  01F1               	clrf	??_RF_Init+1
  3196  0237  01F2               	clrf	??_RF_Init+2
  3197  0238  01F3               	clrf	??_RF_Init+3
  3198  0239  0872               	movf	??_RF_Init+2,w
  3199  023A  00F3               	movwf	??_RF_Init+3
  3200  023B  0871               	movf	??_RF_Init+1,w
  3201  023C  00F2               	movwf	??_RF_Init+2
  3202  023D  0870               	movf	??_RF_Init,w
  3203  023E  00F1               	movwf	??_RF_Init+1
  3204  023F  01F0               	clrf	??_RF_Init
  3205  0240  0870               	movf	??_RF_Init,w
  3206  0241  04B4               	iorwf	_startaddress,f
  3207  0242  0871               	movf	??_RF_Init+1,w
  3208  0243  04B5               	iorwf	_startaddress+1,f
  3209  0244  0872               	movf	??_RF_Init+2,w
  3210  0245  04B6               	iorwf	_startaddress+2,f
  3211  0246  0873               	movf	??_RF_Init+3,w
  3212  0247  04B7               	iorwf	_startaddress+3,f
  3213                           
  3214                           ;noolite.c: 37: startaddress |= system_settings[8];
  3215  0248  30F6               	movlw	246
  3216  0249  0084               	movwf	4
  3217  024A  0800               	movf	0,w	;code access
  3218  024B  00F0               	movwf	??_RF_Init
  3219  024C  01F1               	clrf	??_RF_Init+1
  3220  024D  01F2               	clrf	??_RF_Init+2
  3221  024E  01F3               	clrf	??_RF_Init+3
  3222  024F  04B4               	iorwf	_startaddress,f
  3223  0250  0871               	movf	??_RF_Init+1,w
  3224  0251  04B5               	iorwf	_startaddress+1,f
  3225  0252  0872               	movf	??_RF_Init+2,w
  3226  0253  04B6               	iorwf	_startaddress+2,f
  3227  0254  0873               	movf	??_RF_Init+3,w
  3228  0255  04B7               	iorwf	_startaddress+3,f
  3229                           
  3230                           ;noolite.c: 38: noo_address_type = 1;
  3231  0256  01B8               	clrf	_noo_address_type
  3232  0257  0AB8               	incf	_noo_address_type,f
  3233  0258                     l261:	
  3234  0258  0064               	clrwdt	;# 
  3235  0259  0008               	return
  3236  025A                     __end_of_RF_Init:	
  3237                           
  3238                           	psect	text3
  3239  01BB                     __ptext3:	
  3240 ;; *************** function _Init_TypeFromFlash *****************
  3241 ;; Defined at:
  3242 ;;		line 228 in file "main.c"
  3243 ;; Parameters:    Size  Location     Type
  3244 ;;		None
  3245 ;; Auto vars:     Size  Location     Type
  3246 ;;		None
  3247 ;; Return value:  Size  Location     Type
  3248 ;;                  1    wreg      unsigned char 
  3249 ;; Registers used:
  3250 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3251 ;; Tracked objects:
  3252 ;;		On entry : 0/2
  3253 ;;		On exit  : 0/0
  3254 ;;		Unchanged: 0/0
  3255 ;; Data sizes:     COMMON   BANK0   BANK1
  3256 ;;      Params:         0       0       0
  3257 ;;      Locals:         0       0       0
  3258 ;;      Temps:          1       0       0
  3259 ;;      Totals:         1       0       0
  3260 ;;Total ram usage:        1 bytes
  3261 ;; Hardware stack levels used:    1
  3262 ;; This function calls:
  3263 ;;		Nothing
  3264 ;; This function is called by:
  3265 ;;		_main
  3266 ;; This function uses a non-reentrant model
  3267 ;;
  3268                           
  3269                           
  3270                           ;psect for function _Init_TypeFromFlash
  3271  01BB                     _Init_TypeFromFlash:	
  3272                           
  3273                           ;main.c: 229: if (((Type[0] >> 8) == 0x5A) && ((Type[0] & 0xFF) < 4)) {
  3274                           
  3275                           ;incstack = 0
  3276                           ; Regs used in _Init_TypeFromFlash: [wreg-fsr0h+status,2+status,0+pclath]
  3277  01BB  30C1               	movlw	193
  3278  01BC  0084               	movwf	4
  3279  01BD  3087               	movlw	135
  3280  01BE  0085               	movwf	5
  3281  01BF  0012               	moviw fsr0++
  3282  01C0  3A5A               	xorlw	90
  3283  01C1  1D03               	btfss	3,2
  3284  01C2  3400               	retlw	0
  3285  01C3  30C0               	movlw	192
  3286  01C4  0084               	movwf	4
  3287  01C5  3087               	movlw	135
  3288  01C6  0085               	movwf	5
  3289  01C7  0800               	movf	0,w	;code access
  3290  01C8  00F0               	movwf	??_Init_TypeFromFlash
  3291  01C9  3004               	movlw	4
  3292  01CA  0270               	subwf	??_Init_TypeFromFlash,w
  3293  01CB  1803               	skipnc
  3294  01CC  3400               	retlw	0
  3295                           
  3296                           ;main.c: 230: return (Type[0] & 0xFF);
  3297  01CD  0800               	movf	0,w	;code access
  3298  01CE  0008               	return
  3299  01CF                     __end_of_Init_TypeFromFlash:	
  3300                           ;main.c: 232: return 0;
  3301                           
  3302                           
  3303                           	psect	text4
  3304  0198                     __ptext4:	
  3305 ;; *************** function _Init_IO *****************
  3306 ;; Defined at:
  3307 ;;		line 120 in file "main.c"
  3308 ;; Parameters:    Size  Location     Type
  3309 ;;		None
  3310 ;; Auto vars:     Size  Location     Type
  3311 ;;		None
  3312 ;; Return value:  Size  Location     Type
  3313 ;;                  1    wreg      void 
  3314 ;; Registers used:
  3315 ;;		wreg, status,2
  3316 ;; Tracked objects:
  3317 ;;		On entry : B1F/0
  3318 ;;		On exit  : B1F/2
  3319 ;;		Unchanged: B00/0
  3320 ;; Data sizes:     COMMON   BANK0   BANK1
  3321 ;;      Params:         0       0       0
  3322 ;;      Locals:         0       0       0
  3323 ;;      Temps:          0       0       0
  3324 ;;      Totals:         0       0       0
  3325 ;;Total ram usage:        0 bytes
  3326 ;; Hardware stack levels used:    1
  3327 ;; This function calls:
  3328 ;;		Nothing
  3329 ;; This function is called by:
  3330 ;;		_main
  3331 ;; This function uses a non-reentrant model
  3332 ;;
  3333                           
  3334                           
  3335                           ;psect for function _Init_IO
  3336  0198                     _Init_IO:	
  3337                           
  3338                           ;main.c: 121: OPTION_REGbits.nWPUEN = 0;
  3339                           
  3340                           ;incstack = 0
  3341                           ; Regs used in _Init_IO: [wreg+status,2]
  3342  0198  0021               	movlb	1	; select bank1
  3343  0199  1395               	bcf	21,7	;volatile
  3344                           
  3345                           ;main.c: 122: TRISA = 0x1F;
  3346  019A  301F               	movlw	31
  3347  019B  008C               	movwf	12	;volatile
  3348                           
  3349                           ;main.c: 123: ANSELA = 0;
  3350  019C  0023               	movlb	3	; select bank3
  3351  019D  018C               	clrf	12	;volatile
  3352                           
  3353                           ;main.c: 124: WPUA = 0x08;
  3354  019E  3008               	movlw	8
  3355  019F  0024               	movlb	4	; select bank4
  3356  01A0  008C               	movwf	12	;volatile
  3357                           
  3358                           ;main.c: 126: TRISC = 0x00;
  3359  01A1  0021               	movlb	1	; select bank1
  3360  01A2  018E               	clrf	14	;volatile
  3361                           
  3362                           ;main.c: 127: ANSELC = 0;
  3363  01A3  0023               	movlb	3	; select bank3
  3364  01A4  018E               	clrf	14	;volatile
  3365                           
  3366                           ;main.c: 128: LATC = 0x00;
  3367  01A5  0022               	movlb	2	; select bank2
  3368  01A6  018E               	clrf	14	;volatile
  3369  01A7  0008               	return
  3370  01A8                     __end_of_Init_IO:	
  3371                           
  3372                           	psect	text5
  3373  018B                     __ptext5:	
  3374 ;; *************** function _Init_CLK *****************
  3375 ;; Defined at:
  3376 ;;		line 89 in file "main.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;		None
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;		None
  3381 ;; Return value:  Size  Location     Type
  3382 ;;                  1    wreg      void 
  3383 ;; Registers used:
  3384 ;;		wreg, status,2, status,0
  3385 ;; Tracked objects:
  3386 ;;		On entry : B1F/2
  3387 ;;		On exit  : B1F/1
  3388 ;;		Unchanged: B00/0
  3389 ;; Data sizes:     COMMON   BANK0   BANK1
  3390 ;;      Params:         0       0       0
  3391 ;;      Locals:         0       0       0
  3392 ;;      Temps:          0       0       0
  3393 ;;      Totals:         0       0       0
  3394 ;;Total ram usage:        0 bytes
  3395 ;; Hardware stack levels used:    1
  3396 ;; This function calls:
  3397 ;;		Nothing
  3398 ;; This function is called by:
  3399 ;;		_main
  3400 ;; This function uses a non-reentrant model
  3401 ;;
  3402                           
  3403                           
  3404                           ;psect for function _Init_CLK
  3405  018B                     _Init_CLK:	
  3406                           
  3407                           ;main.c: 92: OSCCONbits.IRCF = 0b1110;
  3408                           
  3409                           ;incstack = 0
  3410                           ; Regs used in _Init_CLK: [wreg+status,2+status,0]
  3411  018B  0021               	movlb	1	; select bank1
  3412  018C  0819               	movf	25,w	;volatile
  3413  018D  3987               	andlw	-121
  3414  018E  3870               	iorlw	112
  3415  018F  0099               	movwf	25	;volatile
  3416                           
  3417                           ;main.c: 108: WDTCONbits.WDTPS = 0b01011;
  3418  0190  0817               	movf	23,w	;volatile
  3419  0191  39C1               	andlw	-63
  3420  0192  3816               	iorlw	22
  3421  0193  0097               	movwf	23	;volatile
  3422                           
  3423                           ;main.c: 115: WDTCONbits.SWDTEN = 1;
  3424  0194  1417               	bsf	23,0	;volatile
  3425  0195                     l65:	
  3426                           ;main.c: 116: while (!OSCSTATbits.HFIOFR) {
  3427                           
  3428  0195  1A1A               	btfsc	26,4	;volatile
  3429  0196  0008               	return
  3430  0197  2995               	goto	l65
  3431  0198                     __end_of_Init_CLK:	
  3432                           
  3433                           	psect	text6
  3434  0172                     __ptext6:	
  3435 ;; *************** function _Init_ADC *****************
  3436 ;; Defined at:
  3437 ;;		line 131 in file "main.c"
  3438 ;; Parameters:    Size  Location     Type
  3439 ;;		None
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;		None
  3442 ;; Return value:  Size  Location     Type
  3443 ;;                  1    wreg      void 
  3444 ;; Registers used:
  3445 ;;		wreg, status,2, status,0
  3446 ;; Tracked objects:
  3447 ;;		On entry : B1F/1
  3448 ;;		On exit  : B1F/1
  3449 ;;		Unchanged: B00/0
  3450 ;; Data sizes:     COMMON   BANK0   BANK1
  3451 ;;      Params:         0       0       0
  3452 ;;      Locals:         0       0       0
  3453 ;;      Temps:          0       0       0
  3454 ;;      Totals:         0       0       0
  3455 ;;Total ram usage:        0 bytes
  3456 ;; Hardware stack levels used:    1
  3457 ;; This function calls:
  3458 ;;		Nothing
  3459 ;; This function is called by:
  3460 ;;		_main
  3461 ;; This function uses a non-reentrant model
  3462 ;;
  3463                           
  3464                           
  3465                           ;psect for function _Init_ADC
  3466  0172                     _Init_ADC:	
  3467                           
  3468                           ;main.c: 132: FVRCON = 0;
  3469                           
  3470                           ;incstack = 0
  3471                           ; Regs used in _Init_ADC: [wreg+status,2+status,0]
  3472  0172  0022               	movlb	2	; select bank2
  3473  0173  0197               	clrf	23	;volatile
  3474                           
  3475                           ;main.c: 134: ADCON1bits.ADFM = 1;
  3476  0174  0021               	movlb	1	; select bank1
  3477  0175  179E               	bsf	30,7	;volatile
  3478                           
  3479                           ;main.c: 135: ADCON1bits.ADCS = 0b001;
  3480  0176  081E               	movf	30,w	;volatile
  3481  0177  398F               	andlw	-113
  3482  0178  3810               	iorlw	16
  3483  0179  009E               	movwf	30	;volatile
  3484                           
  3485                           ;main.c: 138: ADCON1bits.ADPREF = 0b00;
  3486  017A  30FC               	movlw	-4
  3487  017B  059E               	andwf	30,f	;volatile
  3488                           
  3489                           ;main.c: 140: ADCON0bits.ADON = 0;
  3490  017C  101D               	bcf	29,0	;volatile
  3491  017D  0008               	return
  3492  017E                     __end_of_Init_ADC:	
  3493                           
  3494                           	psect	text7
  3495  01A8                     __ptext7:	
  3496 ;; *************** function _FlashWrite *****************
  3497 ;; Defined at:
  3498 ;;		line 41 in file "FLASH.c"
  3499 ;; Parameters:    Size  Location     Type
  3500 ;;  addr            2    0[COMMON] unsigned int 
  3501 ;;  flash_data      2    2[COMMON] unsigned int 
  3502 ;; Auto vars:     Size  Location     Type
  3503 ;;		None
  3504 ;; Return value:  Size  Location     Type
  3505 ;;                  1    wreg      void 
  3506 ;; Registers used:
  3507 ;;		wreg, status,2, status,0, pclath, cstack
  3508 ;; Tracked objects:
  3509 ;;		On entry : 1C/0
  3510 ;;		On exit  : 1F/3
  3511 ;;		Unchanged: 0/0
  3512 ;; Data sizes:     COMMON   BANK0   BANK1
  3513 ;;      Params:         4       0       0
  3514 ;;      Locals:         0       0       0
  3515 ;;      Temps:          0       0       0
  3516 ;;      Totals:         4       0       0
  3517 ;;Total ram usage:        4 bytes
  3518 ;; Hardware stack levels used:    1
  3519 ;; Hardware stack levels required when called:    1
  3520 ;; This function calls:
  3521 ;;		_FlashUnlock
  3522 ;; This function is called by:
  3523 ;;		_main
  3524 ;; This function uses a non-reentrant model
  3525 ;;
  3526                           
  3527                           
  3528                           ;psect for function _FlashWrite
  3529  01A8                     _FlashWrite:	
  3530                           
  3531                           ;FLASH.c: 42: PMCON1bits.CFGS = 0;
  3532                           
  3533                           ;incstack = 0
  3534                           ; Regs used in _FlashWrite: [wreg+status,2+status,0+pclath+cstack]
  3535  01A8  0023               	movlb	3	; select bank3
  3536  01A9  1315               	bcf	21,6	;volatile
  3537                           
  3538                           ;FLASH.c: 43: PMADRH = (unsigned char) (addr >> 8);
  3539  01AA  0871               	movf	FlashWrite@addr+1,w
  3540  01AB  0092               	movwf	18	;volatile
  3541                           
  3542                           ;FLASH.c: 44: PMADRL = (unsigned char) (addr);
  3543  01AC  0870               	movf	FlashWrite@addr,w
  3544  01AD  0091               	movwf	17	;volatile
  3545                           
  3546                           ;FLASH.c: 45: PMCON1bits.FREE = 0;
  3547  01AE  1215               	bcf	21,4	;volatile
  3548                           
  3549                           ;FLASH.c: 46: PMCON1bits.LWLO = 1;
  3550  01AF  1695               	bsf	21,5	;volatile
  3551                           
  3552                           ;FLASH.c: 47: PMCON1bits.WREN = 1;
  3553  01B0  1515               	bsf	21,2	;volatile
  3554                           
  3555                           ;FLASH.c: 48: PMDATH = (unsigned char) (flash_data >> 8);
  3556  01B1  0873               	movf	FlashWrite@flash_data+1,w
  3557  01B2  0094               	movwf	20	;volatile
  3558                           
  3559                           ;FLASH.c: 49: PMDATL = (unsigned char) flash_data;
  3560  01B3  0872               	movf	FlashWrite@flash_data,w
  3561  01B4  0093               	movwf	19	;volatile
  3562                           
  3563                           ;FLASH.c: 50: PMCON1bits.LWLO = 0;
  3564  01B5  1295               	bcf	21,5	;volatile
  3565                           
  3566                           ;FLASH.c: 51: INTCONbits.GIE = 0;
  3567  01B6  138B               	bcf	11,7	;volatile
  3568                           
  3569                           ;FLASH.c: 52: FlashUnlock();
  3570  01B7  2166               	fcall	_FlashUnlock
  3571                           
  3572                           ;FLASH.c: 53: INTCONbits.GIE = 1;
  3573  01B8  178B               	bsf	11,7	;volatile
  3574                           
  3575                           ;FLASH.c: 54: PMCON1bits.WREN = 0;
  3576  01B9  1115               	bcf	21,2	;volatile
  3577  01BA  0008               	return
  3578  01BB                     __end_of_FlashWrite:	
  3579                           
  3580                           	psect	text8
  3581  017E                     __ptext8:	
  3582 ;; *************** function _FlashEraseRow *****************
  3583 ;; Defined at:
  3584 ;;		line 29 in file "FLASH.c"
  3585 ;; Parameters:    Size  Location     Type
  3586 ;;  rowAddr         2    0[COMMON] unsigned int 
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;		None
  3589 ;; Return value:  Size  Location     Type
  3590 ;;                  1    wreg      void 
  3591 ;; Registers used:
  3592 ;;		wreg, status,2, status,0, pclath, cstack
  3593 ;; Tracked objects:
  3594 ;;		On entry : 1F/2
  3595 ;;		On exit  : 1F/3
  3596 ;;		Unchanged: 0/0
  3597 ;; Data sizes:     COMMON   BANK0   BANK1
  3598 ;;      Params:         2       0       0
  3599 ;;      Locals:         0       0       0
  3600 ;;      Temps:          0       0       0
  3601 ;;      Totals:         2       0       0
  3602 ;;Total ram usage:        2 bytes
  3603 ;; Hardware stack levels used:    1
  3604 ;; Hardware stack levels required when called:    1
  3605 ;; This function calls:
  3606 ;;		_FlashUnlock
  3607 ;; This function is called by:
  3608 ;;		_main
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611                           
  3612                           
  3613                           ;psect for function _FlashEraseRow
  3614  017E                     _FlashEraseRow:	
  3615                           
  3616                           ;FLASH.c: 30: PMCON1bits.CFGS = 0;
  3617                           
  3618                           ;incstack = 0
  3619                           ; Regs used in _FlashEraseRow: [wreg+status,2+status,0+pclath+cstack]
  3620  017E  0023               	movlb	3	; select bank3
  3621  017F  1315               	bcf	21,6	;volatile
  3622                           
  3623                           ;FLASH.c: 31: PMADRH = (unsigned char) (rowAddr >> 8);
  3624  0180  0871               	movf	FlashEraseRow@rowAddr+1,w
  3625  0181  0092               	movwf	18	;volatile
  3626                           
  3627                           ;FLASH.c: 32: PMADRL = (unsigned char) (rowAddr);
  3628  0182  0870               	movf	FlashEraseRow@rowAddr,w
  3629  0183  0091               	movwf	17	;volatile
  3630                           
  3631                           ;FLASH.c: 33: PMCON1bits.FREE = 1;
  3632  0184  1615               	bsf	21,4	;volatile
  3633                           
  3634                           ;FLASH.c: 34: PMCON1bits.WREN = 1;
  3635  0185  1515               	bsf	21,2	;volatile
  3636                           
  3637                           ;FLASH.c: 35: INTCONbits.GIE = 0;
  3638  0186  138B               	bcf	11,7	;volatile
  3639                           
  3640                           ;FLASH.c: 36: FlashUnlock();
  3641  0187  2166               	fcall	_FlashUnlock
  3642                           
  3643                           ;FLASH.c: 37: INTCONbits.GIE = 1;
  3644  0188  178B               	bsf	11,7	;volatile
  3645                           
  3646                           ;FLASH.c: 38: PMCON1bits.WREN = 0;
  3647  0189  1115               	bcf	21,2	;volatile
  3648  018A  0008               	return
  3649  018B                     __end_of_FlashEraseRow:	
  3650                           
  3651                           	psect	text9
  3652  0166                     __ptext9:	
  3653 ;; *************** function _FlashUnlock *****************
  3654 ;; Defined at:
  3655 ;;		line 23 in file "FLASH.c"
  3656 ;; Parameters:    Size  Location     Type
  3657 ;;		None
  3658 ;; Auto vars:     Size  Location     Type
  3659 ;;		None
  3660 ;; Return value:  Size  Location     Type
  3661 ;;                  1    wreg      void 
  3662 ;; Registers used:
  3663 ;;		wreg
  3664 ;; Tracked objects:
  3665 ;;		On entry : 1F/3
  3666 ;;		On exit  : 1F/3
  3667 ;;		Unchanged: 0/0
  3668 ;; Data sizes:     COMMON   BANK0   BANK1
  3669 ;;      Params:         0       0       0
  3670 ;;      Locals:         0       0       0
  3671 ;;      Temps:          0       0       0
  3672 ;;      Totals:         0       0       0
  3673 ;;Total ram usage:        0 bytes
  3674 ;; Hardware stack levels used:    1
  3675 ;; This function calls:
  3676 ;;		Nothing
  3677 ;; This function is called by:
  3678 ;;		_FlashEraseRow
  3679 ;;		_FlashWrite
  3680 ;; This function uses a non-reentrant model
  3681 ;;
  3682                           
  3683                           
  3684                           ;psect for function _FlashUnlock
  3685  0166                     _FlashUnlock:	
  3686                           
  3687                           ;FLASH.c: 24: PMCON2 = 0x55;
  3688                           
  3689                           ;incstack = 0
  3690                           ; Regs used in _FlashUnlock: [wreg]
  3691  0166  3055               	movlw	85
  3692  0167  0096               	movwf	22	;volsfr
  3693                           
  3694                           ;FLASH.c: 25: PMCON2 = 0xAA;
  3695  0168  30AA               	movlw	170
  3696  0169  0096               	movwf	22	;volsfr
  3697                           
  3698                           ;FLASH.c: 26: PMCON1bits.WR = 1;
  3699  016A  1495               	bsf	21,1	;volatile
  3700  016B  0008               	return
  3701  016C                     __end_of_FlashUnlock:	
  3702  007E                     btemp	set	126	;btemp
  3703  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         36
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     23      58
    BANK1            32      0       0

Pointer List with Targets:

    noolite_send@data	PTR unsigned char  size(1) Largest target is 4
		 -> noo_send_data(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_noolite_send

Critical Paths under _main in BANK0

    _main->_noolite_send

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0   10339
                                             11 COMMON     2     2      0
                                             18 BANK0      5     5      0
                      _FlashEraseRow
                         _FlashWrite
                           _Init_ADC
                           _Init_CLK
                            _Init_IO
                 _Init_TypeFromFlash
                            _RF_Init
                       _noolite_send
 ---------------------------------------------------------------------------------
 (1) _noolite_send                                        29    26      3    7344
                                              0 COMMON    11     8      3
                                              0 BANK0     18    18      0
 ---------------------------------------------------------------------------------
 (1) _RF_Init                                              7     7      0       0
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 (1) _Init_TypeFromFlash                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Init_IO                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_CLK                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _FlashWrite                                           4     0      4     346
                                              0 COMMON     4     0      4
                        _FlashUnlock
 ---------------------------------------------------------------------------------
 (1) _FlashEraseRow                                        2     0      2     109
                                              0 COMMON     2     0      2
                        _FlashUnlock
 ---------------------------------------------------------------------------------
 (2) _FlashUnlock                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _FlashEraseRow
     _FlashUnlock
   _FlashWrite
     _FlashUnlock
   _Init_ADC
   _Init_CLK
   _Init_IO
   _Init_TypeFromFlash
   _RF_Init
   _noolite_send

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      48       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     17      3A       6       72.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      48       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Aug 31 17:41:56 2018

                  __CFG_CP$ON 0000                             pc 0002                            l65 0195  
                         l115 0454                           l132 0473                           l133 048C  
                         l134 0495                           l126 045E                           l143 0508  
                         l137 04CD                           l260 0208                           l261 0258  
                         l290 03DD                           l282 03A0                           l266 0277  
                         l268 0286                           l293 03FA                           l285 03C1  
                         l269 0282                           l294 03F8                           l295 03F7  
                         l287 03B1                           u975 025E                  __CFG_IDLOC0$ 0000  
                __CFG_IDLOC1$ 0007                  __CFG_IDLOC2$ 0000                  __CFG_IDLOC3$ 0007  
                __CFG_BORV$LO 0000                           wreg 0009                   main@chn_416 0057  
                 main@chn_417 0058                   main@chn_418 0059                          S2354 0002  
                        S2356 0006                  __CFG_LVP$OFF 0000                          l2100 0745  
                        l2020 0621                          l2110 0766                          l2030 0641  
                        l2120 076C                          l2112 076A                          l2016 0612  
                        l2008 05F9                          l2018 0619                          l2150 078C  
                        l2070 06D1                          l2062 06B1                          l2046 067C  
                        l2056 069C                          l2170 079B                          l2082 06F1  
                        l1604 0283                          l2084 06FB                          l1622 02AC  
                        l2086 070B                          l2190 079D                          l1616 0295  
                        l2096 0735                          l2168 0791                          l2352 047D  
                        l1722 03B3                          l2098 073D                          l1580 0206  
                        l2196 07A8                          l1742 03DA                          l1726 03B8  
                        l1638 0316                          l1666 0372                          l1658 036C  
                        l1930 0506                          l1914 04D0                          l1906 04B9  
                        l1850 044B                          l1834 0435                          l1826 0452  
                        l1676 034F                          l1908 04C7                          l1844 0441  
                        l1828 042B                          l1678 0379                          l1598 0279  
                        l1870 0468                          l1862 0458                          l1936 050B  
                        l1928 04F7                          l1864 0459                          l1874 046E  
                        l1882 0474                          l1868 0461                          l1884 0488  
                        l1982 0599                          l1886 048A                          l1798 0409  
                        l1992 05AF                          l1984 059A                          l1976 0588  
                        l1978 0597                          l1898 0498                          l1998 05C9  
                        u1044 0364                          u1045 0363                          u1154 03EF  
                        u1155 03EE                          _LATA 010C                          _LATC 010E  
                        u1907 0696                          u1917 06DB                          u1837 0540  
                        u1927 06EB                          u1847 0554                          u1937 0394  
                        u1857 05D3                          u1867 05E3                          u1877 062B  
                        u1887 063B                          u1897 0686                          _TMR0 0015  
                        _TMR2 001A                          _WPUA 020C                          _Keys 0020  
                _startaddress 0034                  __CFG_WRT$OFF 0000                          _Type 07C0  
                        _main 03FE               __end_of_RF_Init 025A                          fsr0h 0005  
                        fsr1h 0007                          indf0 0000                          fsr0l 0004  
                        indf1 0001                          fsr1l 0006                          btemp 007E  
noolite_send@noo_send_command 0070                          start 0001           __end_of_FlashUnlock 016C  
               __CFG_MCLRE$ON 0000               __end_of_Init_IO 01A8                 __CFG_LPBOR$ON 0000  
                       ?_main 0070                   _BattLowSent 003E                    _FlashWrite 01A8  
                       _PORTA 000C                         _TRISA 008C                         _TRISC 008E  
               __CFG_PWRTE$ON 0000       __p_system_settings_text 07EE                  _Type_absaddr 07C0  
                       status 0003                         wtemp0 007E               __initialization 07E0  
                __end_of_Type 07E0                  __end_of_main 07C0              __end_of_Init_ADC 017E  
            __end_of_Init_CLK 0198                        ??_main 007B                     ??_RF_Init 0070  
                      _ANSELA 018C                        _ANSELC 018E    __end_of_Init_TypeFromFlash 01CF  
                      _FVRCON 0117                   _FlashUnlock 0166                        _PMADRH 0192  
                      _PMADRL 0191                        _PMDATH 0194                        _PMDATL 0193  
                      _PMCON2 0196                        _TMR0IE 005D                        _TMR0IF 005A  
                __p_Type_text 07C0                     ??_Init_IO 0070                __CFG_STVREN$ON 0000  
             _system_settings 07EE          noolite_send@countbit 0050         __end_of_FlashEraseRow 018B  
                 ?_FlashWrite 0070               noolite_send@chn 0051          noolite_send@startpos 004F  
     __end_of__initialization 07E7                __pcstackCOMMON 0070                _OPTION_REGbits 0095  
                  __pbssBANK0 0020                     ?_Init_ADC 0070                     ?_Init_CLK 0070  
     __end_of_system_settings 07FF           __size_of_FlashWrite 0013                    __pmaintext 03FE  
                     _RF_Init 01CF          FlashEraseRow@rowAddr 0070                    ??_Init_ADC 0070  
                  ??_Init_CLK 0070                       _DevMode 003A                       _DevType 003B  
                     _Init_IO 0198                 ?_noolite_send 0070                       __ptext1 025A  
                     __ptext2 01CF                       __ptext3 01BB                       __ptext4 0198  
                     __ptext5 018B                       __ptext6 0172                       __ptext7 01A8  
                     __ptext8 017E                       __ptext9 0166         noolite_send@countsend 0052  
                     main@chn 0056                       clrloop0 016D          end_of_initialization 07E7  
                ?_FlashUnlock 0070              noolite_send@data 0072         noolite_send@temp_send 0053  
              FlashWrite@addr 0070            _Init_TypeFromFlash 01BB                ??_noolite_send 0073  
         ?_Init_TypeFromFlash 0070                  ??_FlashWrite 0074              __CFG_FOSC$INTOSC 0000  
        ??_Init_TypeFromFlash 0070            __end_of_FlashWrite 01BB           start_initialization 07E0  
           __size_of_Init_ADC 000C             __size_of_Init_CLK 000D        __size_of_FlashEraseRow 000D  
                 __pbssCOMMON 007D                     ___latbits 0000                 __pcstackBANK0 0043  
                    ?_RF_Init 0070          __end_of_noolite_send 03FE          __size_of_FlashUnlock 0006  
                    ?_Init_IO 0070                 _noo_send_data 003F                     __pswtext1 0002  
                   __pswtext2 0006                 _FlashEraseRow 017E              __CFG_WDTE$SWDTEN 0000  
                    _LATAbits 010C                      _LATCbits 010E                     clear_ram0 016C  
 noolite_send@noo_send_buffer 0043   noolite_send@noo_send_format 0071                    _ADCON0bits 009D  
                  _ADCON1bits 009E                ?_FlashEraseRow 0070                     _tx_status 007D  
            __size_of_RF_Init 008B                      _Init_ADC 0172                      _Init_CLK 018B  
                _SkipHandling 0039              _noo_address_type 0038              __size_of_Init_IO 0010  
          noolite_send@endpos 0054         __size_of_noolite_send 01A4                   _tick3_100ms 003C  
               __size_of_main 03C2   __size_of_Init_TypeFromFlash 0014               ??_FlashEraseRow 0072  
                _noolite_send 025A                   _OSCSTATbits 009A                    _INTCONbits 000B  
           __CFG_BOREN$NSLEEP 0000                    _PMCON1bits 0195          FlashWrite@flash_data 0072  
           __CFG_CLKOUTEN$OFF 0000            _LedPulseTick_100ms 003D                    _OSCCONbits 0099  
                  _OPTION_REG 0095                    _WDTCONbits 0097                 ??_FlashUnlock 0070  
     _system_settings_absaddr 07EE  
